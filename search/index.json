[{"categories":null,"contents":"转录组测序的研究对象为特定细胞在某一功能状态下所能转录出来的所有 RNA 的总和，包括 mRNA 和非编码 RNA，相对于传统的芯片杂交平台，转录组测序无需预先针对已知序列设计探针，即可对任意物种的整体转录活动进行检测，提供更准确的数字化信号，更高的检测通量以及更广泛的检测范围，是目前深入研究转录组复杂性的强大工具，基于高通量测序平台的转录组测序技术能够全面获得物种特定组织或器官的转录本信息，从而进行基因表达水平研究、新转录本发现研究、转录本结构变异研究等。\n版本信息 一些名词解释 大致流程 软件安装 数据获取与预处理 测序数据下载 参考基因组及注释文件 FastQc 质控 常用参数 进行质量检测 Trimmomatic 过滤低质量序列 常用参数 过滤低质量序列 hisat2 比对 建立索引 常用参数 进行比对 samtools 排序压缩 常用命令 排序压缩 featureCounts 生成基因计数表 常用参数 计数统计 参考 step3: 数据分析，具体而言：对测序得到的读长进行比对或组装到转录本上；对覆盖到每个基因区域的读长进行计数；根据统计模型鉴定不同样本间差异表达的基因，（这种分析过程是比较传统的方法） 版本信息 成都理工大学超算平台 Red Hat 4.8.5-36 conda 4.10.3 测序数据来自 NCBI ACC=SRR25909836 参考基因组和注释文件来自 Ensembl Plants 物种：Oryza sativa Japonica 一些名词解释 adapter：接头，为一段已知的短核苷酸序列，用于链接未知的目标测序片段 index：几个碱基组成的寡核苷酸链，用于在混合测序时，区分不同样本 insert：待测序的目标序列，位于两个 adapter 之间 reads：在测序过程中，从样本中识别出来的 DNA 或 RNA 序列 Transcriptome: 包含所有 RNA 分子的集合，可以用来量化每个基因的表达水平 Expression levels 或 Coverage: 表示特定基因的 RNA 数量，通常用来衡量基因的表达水平 Differential expression analysis：用来比较不同样本或不同处理组之间的基因表达差异 Gene annotation：一个包含有关每个基因的基本信息的数据库，如其位置，功能等 Splice variants：一个基因能够通过不同的剪接方式生成不同的 RNA，这些不同的 RNA 就叫做剪接异构体 FPKM (Fragments Per Kilobase of transcript per Million mapped reads) 和 TPM (Transcripts Per Kilobase Million)：用作基因表达水平的衡量标准 Quality control：确保数据质量，清理模糊不清或者质量低下的 reads Genome：一个生物体的所有遗传信息 大致流程 软件安装 只需要使用 conda 就可以安装所有需要的软件，主要使用的软件有以下一些\nsra-tools：快速下载 NCBI SRA 数据 FastQc：测序数据质量检测与控制 Trimmomatic： 过滤低质量序列 hisat2：转录组数据的比对 samtools：对 hisat2 比对的结果进行排序和压缩 featureCounts：对基因的信息进行计数统计 先创建一个虚拟环境，要注意的是最新版的 samtools 需要 3.9 及以上环境\nconda create -n rna-seq python=3.10 安装所有需要的软件\nconda install fastqc trimmomatic hisat2 subread #subread 即 featureCounts SRA Toolkit 和 samtools 安装时有坑，先搜索 sra-tools 和 samtools 的版本，然后安装指定版本\nconda search sra-tools conda install sra-toolst=3.0.7 conda search samtools conda install samtools=1.9 数据获取与预处理 测序数据下载 先在 NCBI 的 SRA 数据库搜索感兴趣的物种\n选择符合自己要求的文章，找到下面 Runs 这里，点击 SRR 开头的编号\n查看数据是否符合要求\n文件是***_1.fq.gz、***_2.fq.gz 这种是双端测序数据，我们需要这种双端测序的数据来进行 RNA-seq 分析\n如果数据是双端测序的，那么就复制 SRR 编号，使用 sratools 下载，例如：\nprefetch SRR8956151 批量下载需要先建立一个 txt 文件，将 SRR 编号写进去，例如：\nSRR5830630 SRR5830631 SRR5830632 SRR5830633 SRR5830634 然后使用下面的命令下载\nprefetch --option-file SRR_Acc_List.txt 由于数据比较大，可以使用 nohup 命令挂在后台下载\nnohup prefetch --option-file SRR_Acc_List.txt 刚刚下载好的数据是 sra 格式的，使用 sratools 将其拆分\nfastq-dump --gzip --split-3 SRR25909836.sra \u0026ndash;gzip 是将拆分的 fastq 文件压缩归档为 gz 格式 \u0026ndash;split-3 是将文件拆分为正向序列和逆向序列 如果数据比较多，就写一个 bash 脚本\n#!/bin/bash mkdir SRR mv ./SRR*/*.sra ./SRR cd SRR nohup fastq-dump --gzip --split-3 SRR*.sra 参考基因组及注释文件 植物的我一般在 Ensembl Plants 下载，用 wget 或 curl 都可以，内存不大\nwget https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-57/fasta/oryza_sativa/dna/Oryza_sativa.IRGSP-1.0.dna.toplevel.fa.gz wget https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-57/gff3/oryza_sativa/Oryza_sativa.IRGSP-1.0.57.gff3.gz 然后解压\ngzip -d Oryza_sativa.IRGSP-1.0.57.gff3.gz gzip -d Oryza_sativa.IRGSP-1.0.dna.toplevel.fa.gz 为了方便，我把两个文件分别重命名为 oryza_sativa.fa 和 oryza_sativa.gff3\nmv Oryza_sativa.IRGSP-1.0.dna.toplevel.fa oryza_sativa.fa mv Oryza_sativa.IRGSP-1.0.57.gff3 oryza_sativa.gff3 FastQc 质控 常用参数 fastqc [-o output dir] [\u0026ndash;(no)extract] [-f fastq|bam|sam] [-c contaminant file] seqfile1 .. seqfileN\n-o \u0026ndash;outdir：FastQC 生成的报告文件的储存路径，生成的报告的文件名是根据输入来定的 \u0026ndash;extract：生成的报告默认会打包成 1 个压缩文件，使用这个参数是让程序不打包 -t \u0026ndash;threads：选择程序运行的线程数，每个线程会占用 250MB 内存，越多越快咯 -c \u0026ndash;contaminants：污染物选项，输入的是一个文件，格式是 Name [Tab] Sequence，里面是可能的污染序列，如果有这个选项，FastQC 会在计算时候评估污染的情况，并在统计的时候进行分析，一般用不到 -a \u0026ndash;adapters：也是输入一个文件，文件的格式 Name [Tab] Sequence，储存的是测序的 adpater 序列信息，如果不输入，目前版本的 FastQC 就按照通用引物来评估序列时候有 adapter 的残留 -q \u0026ndash;quiet：安静运行模式，一般不选这个选项的时候，程序会实时报告运行的状况 进行质量检测 这里我们使用 fastqc [文件名] 即可\nfastqc SRR25909836_1.fastq.gz 当然，数据比较多的时候还是挂在后台批处理然后等着就行\nnohup fastqc SRR*.fastq.gz 程序运行完成后会输出一堆 html 文件和 zip 压缩包，html 是网页版报告，zip 是本地宝报告，下载到本地用浏览器打开就可以看到质量检测报告了\n左侧 Summary 部分就是整个报告的目录，整个报告分成若干个部分\n合格：绿色的√ 警告：黄色的！ 不合格：红色的× 我们一般比较关心的是下面几个部分\nBasic Statistics: 对数据量的概览 Per base sequence quality：reads 每个位置测序质量最直接的展示 Per sequence quality scores：总体 reads 测序质量趋势 Per base sequence content： ATGC 含量估计测序是否存在偏差 Sequence Duplication Levels：影响测序的因素太多，查看是否存在污染，数据处理时是否需要去冗余；现在数据量都可以满足需求，因此前期数据处理时，尽量高标准，严格质控 Basic Statistics\n每个位置的碱基的测序质量\nEncoding：指测序平台的版本和相应的编码版本号 Total Sequences：总的 reads 数 Sequence length：测序的长度 %GC：是我们需要重点关注的一个指标，这个值表示的是整体序列中的 GC 含量，这个数值一般是物种特异的，比如人类细胞就是 42%左右，如果测序原始数据的 GC 含量远远偏离这个比例，说明测序数据存在一定偏好性，如果直接用测序数据，会影响后续的 CNV 和变异检测的分析 Per base sequence quality\n横轴代表位置（第 1 到 150 个碱基） 纵轴代表 quality 红色表示中位数 黄色是 25%-75%区间 触须是 10%-90%区间 蓝线是平均数 Warning，如果任何碱基质量低于 10, 或者是任何中位数低于 25 Failure，如果任何碱基质量低于 5, 或者是任何中位数低于 20 一般要求此图中，所有位置的 10%分位数大于 20，否则切除 20 以下的碱基，从而保证后续分析的正确性\nPer tile sequence quality\n每个 tile 测序的测序质量\ntile：每一次测序荧光扫描的最小单位 横轴代表 101 个碱基的位置 纵轴是 tail 的 Index 编号 检查 reads 中每一个碱基位置在不同的测序小孔之间的偏离度，蓝色表示低于平均偏离度，偏离度小，质量好；越红表示偏离平均质量越多，质量也越差，如果出现质量问题可能是短暂的，如有气泡产生，也可能是长期的，如在某一小孔中存在残骸，问题不大，可以看到我的这个数据几乎没有瑕疵\nPer sequence quality scores\n每条序列质量得分的分布情况\n横轴是平均质量得分 纵轴收到该平均质量得分的 reads 数目 当测序质量峰值小于 27（错误率 0.2%）时报\u0026quot;WARN\u0026quot; 当峰值小于 20（错误率 1%）时报\u0026quot;FAIL\u0026quot; 假如我测的 1 条序列长度为 101bp，那么这 101 个位置每个位置 Q 值的平均值就是这条 reads 的质量值，我这个数据的质量不错，reads 大都集中在高分上，纵轴数值越大，该序列测序错误的可能就越小\nPer base sequence content\n统计 reads 每个位置 ATCG 四种碱基的分布\n横轴是 1 - 101 bp；纵轴是百分比 图中四条线代表 A T C G 在每个位置平均含量 理论上来说，A 和 T 应该相等，G 和 C 应该相等，但是一般测序的时候，刚开始测序仪状态不稳定，很可能出现上图的情况，像这种情况，即使测序的得分很高，也需要 cut 开始部分的序列信息 Per sequence GC content\n序列平均 GC 含量分布\n横轴是百分比 纵轴是每条序列 GC 含量对应的数量 蓝色的线是程序根据经验分布给出的理论值 红色是真实值 蓝红色线应该比较接近才比较好，当红色的线出现双峰，很有可能是混入了其他物种的 DNA 序列，比如我这张图\nPer base N content\n每个位置无法检测的值的比例，当测序仪无法确定是何种碱基时，用 N 表示\n当任意位置的 N 的比例超过 5%，报\u0026quot;WARN\u0026quot; 当任意位置的 N 的比例超过 20%，报\u0026quot;FAIL\u0026quot; 正常情况下，N 的比例是很小的，所以图上常常看到一条直线，但放大 Y 轴之后会发现还是有 N 的存在，这不算问题，当 Y 轴在 0%-100%的范围内也能看到“鼓包”时，说明测序系统出了问题\nSequence Length Distribution\n序列测序长度分布\n每次测序仪测出来的长度在理论上应该是完全相等的，但是总会有一些偏差，当测序的长度不同时，如果很严重，则表明测序仪在此次测序过程中产生的数据不可信，比如我的这个图中，150pb 是最主要的，其他的几乎没有，所以数据的质量还是比较高的\nSequence Duplication Levels\n统计 reads 重复水平\n横坐标是重复的次数 纵坐标是 duplicated reads 占 unique reads 总数百分比 当非 unique 的 reads 占总数的比例大于 20%时，报\u0026quot;WARN\u0026quot; 当非 unique 的 reads 占总数的比例大于 50%时，报\u0026quot;FAIL\u0026quot; 测序本身就会产生重复 reads, 测序深度越高，reads 重复数越大；如果重复出现峰值，就提示可能存在偏差（如建库过程中的 PCR duplication）\nfastqc 抽取 reads 文件前 200,000 条 reads 统计其重复情况，重复数目大于等于 10 的 reads 被合并统计，这也是为什么我们看到上图的中间那里略有上扬，大于 75bp 的 reads 只取 50bp 进行比较，由于 reads 越长错误率越高，所以其重复程度仍有可能被低估\nOverrepresented sequences\n过度重复出现的序列的统计信息，上图中没有\nAdapter Content\n衡量的是序列中两端 adapter 的情况\n如果在当时 fastqc 分析的时候-a 选项没有内容，则默认使用图例中的四种通用 adapter 序列进行统计\n上图中 adapter 都已经去除，如果有 adapter 序列没有去除干净的情况，在后续分析的时候需要先使用 cutadapt 等软件进行去接头\nTrimmomatic 过滤低质量序列 常用参数 PE：双端测序文件过滤 SE：单端测序文件过滤 -baseout：输出目录 -threads：线程数，最大是 CPU 核数 -trimlog：生成日志名 -quiet：静默模式 ILLUMINACLIP：从 reads 中剪切 adapter 和其他 Illumina 特定序列 SLIDINGWINDOW：执行滑动窗口修剪，一旦窗口内的平均质量低于阈值，则切割 LEADING：如果低于阈值质量，则在 reads 起始处剪切碱基 TRAILING：如果低于阈值质量，则在 reads 末尾处剪切碱基 CROP：将 reads 从末尾切割为指定长度 HEADCROP：从 reads 剪切后低于指定长度，则删除 MINLEN：如果 reads 低于指定长度，则删除 TOPHRED33：将质量得分转换为 Phred-33 TOPHRED64：将质量得分转换为 Phred-64 过滤低质量序列 我使用的是下面的命令，需要根据自己的文件进行调整\ntrimmomatic PE -threads 1 -phred33 SRR25909836_1.fastq.gz SRR25909836_2.fastq.gz -summary oryza_sativa.summary -baseout SRR25909836.fastq.gz LEADING:3 TRAILING:3 SLIDINGWINDOW:5:20 HEADCROP:13 MINLEN:36 解释一下这些参数\ntrimmomatic PE: 运行 Trimmomatic 的命令行接口，并指定输入文件是配对的 PE (paired-end) reads -threads 1: 指定使用 1 个线程进行处理 -phred33: 指定输入文件的 Phred 质量值编码是 Phred-33 SRR25909836_1.fastq.gz 和 SRR25909836_2.fastq.gz: 输入的配对 FASTQ 文件，SRR25909836_1.fastq.gz 是第一条 reads 的文件，SRR25909836_2.fastq.gz 是第二条 reads 的文件 -summary oryza_sativa.summary: 生成一个名为 oryza_sativa.summary 的文件，其中包含了程序运行的详细统计信息 -baseout trimmed: 输出文件的基本名称，后面会加上一些后缀来区分不同的输出文件 LEADING:3: 移除每条 reads 开头的低质量碱基，如果碱基质量低于 3，就被去除 TRAILING:3: 移除每条 reads 末尾的低质量碱基，如果碱基质量低于 3，就被去除 SLIDINGWINDOW:5:20: 对每条 reads 进行滑动窗口的质量修剪，如果窗口内的平均质量小于 20，窗口内的所有碱基就会被去除，窗口的大小为 5 HEADCROP:13: 去除每条 reads 开头的 13 个碱基 MINLEN:36: 去除所有长度小于 36 的 reads -phred33 之后的两个是正向和反向的测序文件\n会看到五个输出文件 SRR25909836_1P.fastq.gz、SRR25909836_2P.fastq.gz、SRR25909836_1U.fastq.gz、SRR25909836_2U.fastq.gz、oryza_sativa.summary\nSRR25909836_1P.fastq.gz、SRR25909836_2P.fastq.gz 这两个文件包含那些在两个末端都通过质量控制的序列配对，这两个文件是过滤后的测序数据，可以用这两个文件进行后续的测序数据分析 SRR25909836_1U.fastq.gz、SRR25909836_2U.fastq.gz 两个文件包含那些只有一端通过质量控制的序列，这就是我们说的\u0026quot;单一通过\u0026quot;（unpaired pass）输出 summary 提供了关于 Trimmomatic 运行的详细信息，它包括以下几类信息 输入的读数量 裁剪因引物/接头污染或低质量得分而去除的读数量 由于长度不足而被丢弃的读物数量 输出的读数量 hisat2 比对 hisat2 可以快速准确地将测序得到的 RNA 片段（reads）比对到参考基因组，从而确定这些 RNA 片段在基因组上的精确位置，进一步可以用于基因表达量定量，剪接位点的检测等多种 RNA-Seq 分析任务\n建立索引 hisat2 需要一个 index 索引才能进行比对，hisat2 提供了一些 index，但很少，只有人类、小鼠等基因组的，可以在下面的 ftp 地址中进行下载\nftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data\n由于这里我做的是水稻的，所以就需要自己建立索引，使用的是水稻的参考基因组序列，前面已经下载好了，使用下列命令建立索引\nhisat2-build -p 4 oryza_sativa.fa oryza_sativa -p 4 是指占用 4 线程 oryza_sativa.fa 即前面我重命名的参考基因组序列文件 oryza_sativa 就是参考基因组序列文件，fa 前面的内容 建立完成之后就可以看到系统中多了一个 oryza_sativa 文件夹，cd 进去就可以看到 8 个以 ht2 为拓展名的文件，要将参考基因组序列文件也放到这个文件夹\n常用参数 -x：参考基因组索引文件的前缀 -1：正向测序文件 -2：反向测序文件 -S：输出文件名（sam 文件） -P：线程数 -t：打印加载索引文件和对齐读取所需的时间 \u0026ndash;dta-cufflinks：出来的结果更适合 cufflinks 处理 （主要用于基因表达量的计算和差异表达基因的寻找） \u0026ndash;no-unal：不记录没比对上的 reads \u0026ndash;un-conc：在输出文件写出与参考基因组不一致的 reads 对 进行比对 我使用的命令如下\nhisat2 -x oryza_sativa/oryza_sativa -p 5 -1 trimmed_1P -2 trimmed_2P -S oryza_sativa.sam 注意-x 后跟索引文件，不加拓展名，保证 ht2 文件和 fa 文件的文件名一致即可，这里由于前面过滤后的序列是没有拓展名的，所以会提示 Warning: Unsupported file format，不影响结果\n运行完毕后便得到 sam 文件，还会输出一段信息\nz -S oryza_sativa.sam 21675765 reads; of these: 21675765 (100.00%) were paired; of these: 2281601 (10.53%) aligned concordantly 0 times 18927559 (87.32%) aligned concordantly exactly 1 time 466605 (2.15%) aligned concordantly \u0026gt;1 times ---- 2281601 pairs aligned concordantly 0 times; of these: 248174 (10.88%) aligned discordantly 1 time ---- 2033427 pairs aligned 0 times concordantly or discordantly; of these: 4066854 mates make up the pairs; of these: 2387493 (58.71%) aligned 0 times 1619885 (39.83%) aligned exactly 1 time 59476 (1.46%) aligned \u0026gt;1 times 94.49% overall alignment rate 这些输出记录包含以下信息：\n总共有 21675765 个读取序列 所有读取序列中 100.00%都成对存在（即是成对端 (read pairs) 序列） 成对端序列中 10.53%的序列没有成功比对到基因组上 87.32%的序列只比对到了基因组上的一个位置 2.15%的序列比对到了基因组上的多个位置 对于没有成功比对的成对端序列，有 10.88%者的序列不一致地（非正确配对的）比对到了基因组上一个位置 有的序列无法一致地或不一致地比对，这些序列占所有没有成功比对的成对端序列的 2033427 对，它们一共包含 4066854 个“pairs”序列 在这些“pairs”序列中， 58.71%的序列没有比对到任何地方 39.83%的序列比对到了基因组上的一个位置 1.46%的序列比对到了基因组上的多个位置 整体上的比对成功率为 94.49% 在 RNA-Seq 分析中，比对成功率是一个重要的质量控制指标， 94.49%的比对成功率表明，绝大部分读取序列都能够成功地比对到基因组上，这表示 RNA-Seq 实验和测序质量都相对较好\nsamtools 排序压缩 常用命令 samtools view：将 SAM 格式文件转换为 BAM 格式，或者执行过滤和查看操作 -b（输出 BAM 格式） -S（输入为 SAM 格式） -h（输出头文件） samtools sort：对 BAM 文件进行排序 -o（输出至文件） -n（按 read 名称排序） samtools index：为排序后的 BAM 文件建立索引 samtools faidx：为 fasta 格式的参考序列建立索引，并可以快速抽取序列 samtools tview：文本模式下查看比对结果 samtools flagstat：提供 BAM 文件的比对统计信息，如总 reads 数，映射的 reads 数等 samtools mpileup：生成 mpileup 文件用于随后的突变检测 -u（生成 BCF） -g（生成 BCF 或 VCF） -f（参考序列） 排序压缩 我使用的是以下命令\nsamtools sort -n -@ 5 oryza_sativa.sam -o oryza_sativa 运行完成后会得到一个 bam 文件\nfeatureCounts 生成基因计数表 常用参数 -a：注释文件的路径，格式为 GTF 或 GFF -o：输出文件的路径 -p：如果序列数据来自于 paired-end RNA-seq，使用此参数 -B：只保留同时映射到同一基因组特征（例如，基因或外显子）的片段 -C：不包括由基因间跨越引起的 reads -s：设置 strand-specific read 计数，如果使用 0，表示非特异性；如果使用 1，表示第一链特异性；如果使用 2，表示第二链特异性 -Q：包含比对质量达到特定阈值的 reads，默认值为 10 -g：制定 GTF 特性类型，例如，gene, transcript 等 -F：制定输入文件格式，例如，BAM, SAM 等 计数统计 我使用的是以下命令\nfeatureCounts -T 5 -t exon -g Name -a oryza_sativa.gff3 -o gene_name.counts -p oryza_sativa oryza_sativa.gff3 就是最初下载的注释文件，如果要统计多个文件的话，在-p 后面跟上就可以，会生成 gene_name.counts、gene_name.counts.summary 两个文件，\ngene_name.counts.summary 文件是计数统计情况\ngene_name.counts 文件是基因的具体信息\n我这里只有一组数据，所以数量统计也只有一列，通常做 RNA-Seq 时是需要多组数据进行分析的\n参考 RNASeq 原始数据质量控制-FastQC 20160410 测序分析——使用 FastQC 做质控 RNA-seq 转录组数据分析丨一套完整的案例流程 生信软件 | Trimmomatic （测序数据质控） SRA 文件的下载（prefetch）和解压 SRA 文件（fastq-dump） 从零开始的 RNASeq 教程（三）获得基因计数表格 转录组差异表达分析\u0026ndash;免比对工具 kallisto ","permalink":"https://yuanj.top/posts/ds89sdf/","tags":["转录组学，生物信息学"],"title":"专题：RNA-Seq 上游分析学习"},{"categories":null,"contents":"完整的基因家族鉴定流程，包含基因家族鉴定和基因家族的性质分析、基因分析、进化分析等。\n本文已在 GitHub 开源，开源地址为 Gene-family-identification\n国内镜像仓库 Gene-family-identification\n可以在仓库的 exampledata 文件夹中查看示例数据\n研究思路 前期准备工作 查找基因的结构域 搜索相关文献 基因组序列文件与注释文件下载 隐马尔可夫模型下载 基因家族鉴定 HMMER 查找 Blast 比对 进一步确定基因家族成员 结构域分析 Motif 分析 构建系统发育树 基因家族的性质分析 理化性质分析 染色体定位分析 基因家族成员的基因分析 内含子和外显子结构 基因表达量分析 基因家族的进化分析 互作蛋白网络 顺式作用元件分析 多序列比对 共线性分析 多图结合 基因家族的功能研究 GO 富集分析 KEGG 富集分析 总结 致谢 基因家族来源于同一个祖先，由同一个基因通过基因重复而产生两个或更多的拷贝而构成的一组基因，其在结构和功能上就有明显的相似性，编码相似的蛋白质产物，同一家族基因可以紧密排列在一起，形成一个基因簇，但多数时候，他们分散在同一染色体的不同位置，或存在于不同的染色体上，各自有不同的表达调控模式。\n序列高度相似的序列，互为同源基因（homologous gene），归属于一个基因家族。\n有时定义基因家族，从结构域角度来刻画。如：一类基因，其编码蛋白都含有同一个结构域，这一类基因是一个基因家族。这个定义信息更偏向功能信息，一般来说结构域决定某种功能，因为结构域序列保守，易形成稳定的三维结构。这与共同祖先的定义有些差别，很多结构域难找得到其共同祖先。另外一个基因的共同祖先定义比较复杂的，越是历史久远的祖先，因为物种的在进化过程中发生了很多丢失和增加事件。共同祖先是个相对的概念，比如植物的共同祖先，一般包括藻类及其它绿色植物，而被子植物共同祖先，根据已经测序的基因组，一般指单双子叶之前就可以。如果从共同祖先定义基因家族，很多已知的基因家族就要被分成很多个基因家族。有很多网站（数据库）专门收集结构域，比如 Pfam 和 InterPro，这两个数据库内容差不多。这些数据库以 Hmmer 算法为基础，根据 Uniprot 中包含的蛋白，进行序列连配找到保守的片段（结构域），再以这些序列使用 Hmmer 构建种子，保存这些种子。一个蛋白拿过来后，与这些种子比对，根据打分能判断出这个蛋白是不是含有这个结构域，这也是判断一个基因编码蛋白是不是属于这个家族。\n研究思路 关于基因家族的鉴定思路主要包括以下部分：\n基因家族成员鉴定\n确定研究的基因家族 家族成员的基本特征确定（参考已有物种） 参考序列集合的准备或下载该基因家族的隐马尔科夫模型 目标物种序列和注释信息的下载或准备 双向 Blast 比对或 HMMER Search 获取可能的成员 基于保守结构域进行进一步筛选 结合系统发育树、保守结构域和保守基序（motif）等确定最终的基因家族成员 基因家族成员的性质分析\n理化性质分析 染色体定位分析 基因家族成员的基因分析\n基于 motif 分析成员序列保守特征与可视化（蛋白与核酸，可用于挖掘未知，尤其是核酸水平-非编码水平的保守） 基于 domain 分析成员结构域的保守型与可视化 基因结构的外显子分析和内含子分析 转录组的基因表达量分析 基因家族成员的进化分析\n多序列比对与可视化 进化树构建与可视化 进化树+motif 分析+domain 分析+基因结构（外显子+内含子） 基因-共线性的定义与常见算法原理 物种内的共线性分析 不同物种之间的共线性分析 其它的分析\n顺式作用元件分析 GO 富集分析 KEGG 分析 前期准备工作 查找基因的结构域 首先，当我们要以一个基因为起点，展开对其整个基因家族的 Bioinfo 分析，我们首先要确定它究竟属于哪一个基因家族，以水稻中的基因 Os05g0409300 为例，我们首先要收集这个基因的蛋白质序列，通过它的蛋白质序列来搜索它的结构域\n打开 RAP-DB 网站首页的 ID converter 工具，输入基因 ID 进行转换，以 Os 开头的是 RAP ID，以 LOC 开头的是 MSU ID，这里我们要将 RAP ID 转为 LOC ID ，点击 ② 处的按钮选择 RAP ID 转为 LOC ID，点击 converter 进行转换\n我们现在可以看到下方出现一个列表，点击 RAP ID 列的 Os05g0409300 进入该基因的详情页\n再点击 Transcript variants （转录变体）下的基因名称进入该基因转录本的详情页\n下滑到最下方即可得到蛋白质序列，复制下来保存即可\n当然，也可以在 ID 转换后点击 LOC ID 列的基因名称，进入详情页后点击 Download Sequence 后下滑到最下方即可得到蛋白质序列，这两种方法得到的蛋白质序列是相同的，注意复制蛋白质序列时末尾的 * 不需要复制\n随后打开 SMART 网站 粘贴刚刚得到的蛋白质序列搜索其结构域\n搜索完成后我们可以看到，SMART 网站已经将结构域的位置等信息列出来了，下方表格中 E-value 小于十的负五次方的通常认为其可信，而 E-value 值为 N/A 的即为空值，不需要管它\n点击下方表格中的结构域名称我们可以得到该结构域的全称、描述等详细信息，可以看到我这个基因的结构域为 Cystatin，所以后面我便以水稻 Cystatin 基因家族为基础展开一系列生物信息学分析\n搜索相关文献 通过 NCBI、知网、web of science 等文献检索网站查找结构域相关的文献，看该结构域是否已经被鉴定以及关于此结构域的研究成功有哪些，我查到一篇文献已经对其进行了生物信息学鉴定，并且将该家族基因命名为 OsCY-1 的形式，所以后面我也沿用该文献的命名对其进行研究\n基因组序列文件与注释文件下载 首先使用 Ensembl Plants 网站下载物种的全部基因组序列作为参考序列，并下载 Gff3 注释文件\n隐马尔可夫模型下载 隐马尔可夫模型 (Hidden Markov model, HMM) 是用于序列标注的概率图模型，描述一个隐藏的马尔科夫链生成不可观测的状态序列，再由每个状态生成一个观测而产生一个观测序列的过程，是一个生成模型。隐马尔可夫模型在自然语言处理、语音识别、模式识别等领域都应用广泛。在自然语言处理中，基于字标注的分词、词性标注、句法分析、命名实体识别等领域都可以应用隐马尔可夫模型。在生物学领域中，可以通过大量序列数据进行深度学习后生成隐马尔可夫模型，用于预测具有某个特征的基因家族。\n简单来说，就是通过已知的同源基因序列，在算法中进行机器学习后生成一个隐马尔可夫模型，然后我们可以利用这个模型来预测其他物种中是否存在这样的同源基因序列。这样的隐马尔可夫模型其实就是 pfam 上的以 “.hmm” 为后缀的文件。我们在做基因家族鉴定的时候，用到的 hmmsearch，就必须要求输入这样的 hmm 文 件以及基因序列 fasta 文件。\n还需要下载隐马尔科夫模型，进入 pfam 官网 ——keyword search:cystatin-GO——点击 PF00031——Curation\u0026amp;model——Download 下载 hmm 模型文件，此处下载的为 Cystain.hmm\n再点击 Alignments——Fomat 选择 stockholm-gengerate 下载 Stockholm file，此处下载的文件名为 PF00031_seed.txt\n基因家族鉴定 我们要研究水稻 cystatin 基因家族，那么就需要先查找水稻中属于 cystatin 家族的基因然后对其进行鉴定和分析\nHMMER 查找 可以直接使用我的项目进行自动化鉴定，可以自动化 hmmsearch 并且提取符合阈值的基因 ID，并且提取蛋白质，项目地址\n点击此链接下载 HMMER Windows 版本 hmmer-3.0-windows.zip 将压缩包解压在任意位置，进入 HMMER 文件夹，确保当前可以看到。exe 的可执行程序\n在 Windows 资源管理器地址栏中输入 CMD 回车在此位置打开 CMD 命令行，命令与 Linux 系统下一致\n构建参考数据的隐马尔可科夫模型\nhmmbuild Cystain.hmm PF00031_seed.txt 基于隐马尔可科夫模型在整个水稻基因组的蛋白质序列中查找同源基因\nhmmsearch Cystain.hmm allprotein.fasta \u0026gt; result.out 最终得到搜索结果如下图所示，我们可以通过这两列 E-value 来判断基因是否属于 Cystain 基因家族，下图中，最后三个基因的 E-value 均小于 10 的-5 次方，但们在某些情况下，我们可以将其先保留，进行进一步判断\nHMMER 的搜索结果显示水稻中 Cystain 基因家族有下面 14 个基因\ngene gene Os01g0803200 Os01g0915200 Os01g0270100 Os05g0409300 Os05g0494200 Os04g0350100 Os03g0429000 Os03g0210200 Os03g0172700 Os03g0210100 Os09g0255200 Os02g0278600 Os03g0210000 Os01g0915401 Blast 比对 我们现在要对 HMMER 搜索到的基因进行 blast 比对，确保 HMMER 搜索结果是准确的\n首先我们要获取这 14 个基因的蛋白质序列，使用 RAP-DB 网站获取或者 TBtools 翻译 CDS 序列都可以\n然后使用 TBtools 提取基因组的全部 CDS 序列，再使用 TBtools 的 Batch Translate CDS to Protein 功能将 CDS 序列翻译为蛋白质序列，作为序列比对的参考序列\n打开 TBtools 的 Blast Compare Two Seqs 工具，输入查询序列、基因组序列并设置输出文件，将输出格式改为 Table 方便查看，然后进行比对\n得出结果后，查看 evalue 这一列，所有的值均小于 10 的-5 次方，我们现在可以认为 HMMER 搜索结果是准确的，这 14 个基因都属于 Cystain 基因家族\n这里我对以上已经基本确定的 14 个基因进行重命名，如下表，名称参考于文献 《拟南芥和水稻 cystatin 基因家族的生物信息学分析_杨泽峰》 中的命名方式\nOs ID Rename Os ID Rename Os01g0270100 OsCY1 Os03g0429000 OsCY8 Os01g0803200 OsCY2 Os04g0350100 OsCY9 Os01g0915200 OsCY3 Os05g0409300 OsCY10 Os01g0915401 OsCY4 Os05g0494200 OsCY11 Os03g0172700 OsCY5 Os09g0255200 OsCY12 Os03g0210100 OsCY6 Os02g0278600 OsCY13 Os03g0210200 OsCY7 Os03g0210000 OsCY14 进一步确定基因家族成员 结构域分析 先使用 NCBI CD Search 进行结构域的查找\n然后使用 TBtools 进行可视化\n通过 TBtools 绘制的图像可以看出，这些基因是全部具有 Cystatin 结构域的\nMotif 分析 将候选基因的蛋白质上传至 MEME 网站\n然后使用 TBtools 进行可视化\n从 TBtools 绘制的图像可以看出，这些基因的保守基序大致上也是比较相近的\n刚刚用 TBtools 做的 domain 分析和 motif 分析的图像是不太清楚、不怎么美观的，后面我们可以通过 TBtools 中多图结合的功能来将它们做的更加美观\n构建系统发育树 构建系统发育树需要使用 mega7 软件，打开此页面，填写相关信息、选择版本后下载\nhttps://www.megasoftware.net/older_versions\n将所有选定基因的蛋白质序列放在一个文件中，将拓展名改为 .fasta ，双击使用 mega7 打开\n按 Ctrl+A 全选，点击 Alignment，选择使用 ClustalW 算法进行多序列比对\n比对完成后点击左上角的 Data，选择 Phylogenetic Analysis 进行进化树分析\n进化树分析完成后，点击上方 Phylogeny，选择 NJ 算法构建进化树\n这个进化树貌似并不是很美观，我们为保证图的美观性和统一性，要把进化树中基因名字根据前文所命名的样式进行重命名，直接在比对所使用的 fasta 文件中进行修改，将 \u0026gt; 后的名称改为我们重命名的名称即可\n然后点击 File 里面的 export current tree(Newick)，点开后点 export，再点击保存图标保存进化树的结果，后面我们可以使用 evoliview 或者 iTOL 网站对保存的结果进行美化\n从其系统发育树来看，只有 Os05t0594299-01 这一个基因的发育与其它基因相差较大\n由以上步骤我们可以确定，候选基因全部属于 Cystatin 基因家族，接下来就要对其性质进行分析\n基因家族的性质分析 理化性质分析 打开 TBtools 的 Protein Paramter Calc 功能，导入蛋白质序列文件，并设置输出文件，点击 Compute 进行分析\n得到分析结果\n染色体定位分析 得到染色体位置分布图\n我们导入重命名文件，使其名称全部变为我们命名的格式\n注意重命名文件的格式\n可以在这里对颜色和字体进行简单的美化\n当然，如果你不想对它们进行统一的更改，可以点击任意一个基因名称，再点击右键对其进行单独的更改，对于染色体的名称也同样适用\n调整过后的图就好看了很多\n基因家族成员的基因分析 内含子和外显子结构 这里使用的也是 TBtools 中多图结合的插件，打开 Gene Structure View 功能，粘贴基因列表，导入注释文件后即可得到内含子和外显子的位置信息\n基因表达量分析 首先在 Rice Expression Database 中搜索基因列表\n选择 DRP000391 这个项目\n随后点击 Show data —— Export —— CSV 导出数据，由于 Chrome 和 Edge 早已不支持使用 Flash，所以这里用 360 极速浏览器导出\n用 Excel 打开数据，在 Tissue 这一列进行筛选，分别获得基因在水稻的 Callus、Leaf、Panicle、Panicle、Root、Seed、Shoot 等部位的表达数据，如果有些数据有两个，那么求平均值\n整理成如下样式\n然后对数据进行 LOG2 处理，如果出现#NUM! 字样，全部改为 0\n重新整理得到最终数据，打开 TBtools 的 Heat Map 功能，把刚刚整理的数据粘贴进去进行绘图\n得到基因家族的表达热图\n对基因进行重命名即将复制进去的表格中的基因名称进行修改即可\n然后重新制图\n也可以对图像进行美化\n基因家族的进化分析 互作蛋白网络 打开 string 数据库 ，点击 search ，输入蛋白质的 Os ID 并选择蛋白质的物种，点击 search\n搜索完成后就得到了蛋白质的互相作用网络\n点击每一个圆珠我们就可以查看其信息，包括基因 ID、物种等，圆珠直接的黑色线条表示共表达蛋白质，黄色线条表示在其他生物体中共同提及推定的同源物。\n顺式作用元件分析 顺式作用元件 (cis-acting element) 存在于基因旁侧序列中能影响基因表达的序列\n顺式作用元件包括启动子、增强子、调控序列和可诱导元件等，它们的作用是参与基因表达的调控。顺式作用元件本身不编码任何蛋白质，仅仅提供一个作用位点，要与反式作用因子相互作用而起作用\n首先要做的第一步是提取所有基因的 CDS 序列\n提取时需要在初始化后将 TBtools 的设置改为如下配置\n然后提取目标基因的启动子序列，打开 TBtools 的 Fasta Extract or Filter，设置好序列文件、输出文件、基因 ID，点击 start 开始\n打开 Sequenxe Manipulate 工具，将提取出来的所有序列复制进去，全部转为大写\n新建文本文档保存转换后的序列\n现在需要打开网站 http://bioinformatics.psb.ugent.be/webtools/plantcare/html/ 将刚刚保存的序列上传进行顺势作用元件预测\n等待一会后会收到网站发出的一封邮件，下载邮件中的附件然后解压，解压之后得到一个拓展名为 tar 的文件，再进行解压\n用 excel 打开解压出来的 tab 文件，此时 excel 中显示的就是这些基因的元件信息\n筛选我们需要的物种，这里我选择了水稻\n删除元件名称、元件序列、增减个数、加/减、物种等我们不需要的信息，然后为了保证最后的图片可看，这里需要扩大一下起始位置，较大的可以减少 20，较小的可以增大 20。并且需要将含有空白信息的项删除，不然 TBtools 会报错。最终整理成如下格式：\n下面需要再新建一个关于序列长度的文件，格式如下：\n打开 TBtools 的 Simple BioSequence Viewer 功能，导入长度信息文件和元件信息，点击 start 开始\n最终得到可视化结果\n这是我做的顺式作用元件分析的图，可以对其进行简一些美化\n多序列比对 在 CLUSTALW 网站 上传基因家族的蛋白质序列进行多序列比对，比对完成后下载比对结果的。aln 文件\n打开 ESPript ，上传刚刚的。aln 文件进行可视化\n下载结果中的 pdf 文件打开后即可得到多序列比对的图像\n与进化树相似，修改多序列比对中的基因名称直接在比对的蛋白质序列中进行修改即可\n共线性分析 共线性是指同源基因在物种内或者物种之间的分布或排列关系。我们都知道，有相当多的基因在一个物种中不是以单拷贝的形式出现，而是多拷贝，具有基因序列重复事件，也就是说能行使相同功能的同源基因在同一个物种内可能不只有一条序列，而当我们想研究这些同源基因在同一个物种内的重复事件的时候，就是物种内的共线性分析。如果我们研究同源基因在不同物种内的分布情况，就是物种间的共线性分析，物种间可以是两个物种，也可以是多个物种。\n共线性分析可以用 MCScanX 软件进行分析，但是这个软件的官网已经 404 了，而且利用命令行来进行分析比较麻烦，这里建议大家使用 TBtools 上的工具，这个软件里面集成了共线性分析的相关插件，并可以进行可视化操作，分析起来很方便。\n共线性分析最基本的原理是基于对基因序列进行 blast 比对，然后利用 MCScanX 软件对比对结果进行分析，这时候就需要有物种基因组的注释文件和比对结果，注释文件是用来分析这些基因所在的位置和数量，最后用可视化的软件把共线性分析的结果以图片形式展示出来。\nTBtools 软件、物种基因组序列、注释文件\n打开 TBtools 的 Fasta Stats 功能，导入物种基因组序列文件，设置好输出文件，获取染色体长度文件\n将 chr len.txt 文件的内容粘贴到 Excel，只保留 ID 和 length 两列的数据，删除 chr len.txt 文件中原有的数据，将 ID 和 length 两列数据保存在 chr len.txt 中\n打开 TBtools 的 One Step MCScanX 功能，这里它需要输入两个物种的基因组序列文件和注释文件，我们两个都导入拟南芥的进行物种内的共线性分析，这个过程中如果出现报错，关掉即可，不用理会\n打开 TBtools 的 Text Merge for MCScanX 功能，导入上一步分析结果（在输出目录中）中的 Collinearity 文件，将分析结果转换为 GenePairTable\n打开 TBtools 的 Text Transformat for Micro-Synteny View 功能，导入上一步获得的 GenePairTable 文件和分析结果中的以。gff 为拓展名的文件（即简化后的注释文件），获得 LinkedRegion 文件，也就是基因间的关联文件 LinkedRegion\n打开 TBtools 的 Advanced Circos 功能，依次导入 chr len.txt、GenePairTable.txt、LinkedRegion.txt 进行绘图\n这样就得到拟南芥所有基因的共线性分析 Circos 图了\n然而还没有结束，我们还需要突出显示出某些基因\n我随便抽取一些基因，打开 TBtools 的 Text Block Extract and Filter 功能，从 GenePairTable 文件中获得这些基因的对应关系，生成新的 GenePairTable 文件\n然后生成新的关联文件 LinkedRegion\n然后将新的 LinkedRegion.txt 文件的内容复制到 Excel 中，最后一列加上 RGB 色值\n随后将 Excel 中的内容合并到之前的 LinkedRegion.txt 文件中或者新建一个文本文件保存，如果不想显示全部基因的共线性，仅仅显示选中的这些基因的共线性的话，可以直接使用刚刚保存的带有 RGB 色值的 LinkedRegion.txt 文件\n我们似乎还需要显示出一些基因的名称，那就补充吧\n打开 TBtools 的 Table Row Extract or Filter 功能，导入分析结果中简化的注释文件，在弹出的窗口中选择 ID 这一列，在输入框中再输入要展示的基因的 ID（注意名称要对应），这里是需要生成一个用于展示 ID 的新的 GenePairTable 文件\n最后依次输入染色体长度文件、展示 ID 的 GenePairTable 文件、带有 RGB 色值的 LinkedRegion.txt 文件 绘图即可\n最终结果\n这里需要注意的是，TBtools 自带的 One Step MCScanX 功能分析很慢，我第一次分析水稻的共线性大概跑了四十分钟左右，这里我们可以使用 One Step MCScanX 的增强版插件，按照如下步骤进行安装\n使用方法和之前的插件一样，这个插件跑一次整个水稻的共线性分析只需要几分钟\n最终我绘制的图像是这样的\n我们还是希望使用自己命名的基因名称，对显示 ID 文件中的信息进行修改，使用记事本的查找替换功能将文件中转录本的 ID 全部替换为重命名的名称即可\n我们再对其进行一些美化，具体操作请参照 共线性分析美化\n下图是我最终美化好的\n可以看出 Cystatin 基因家族的共线性一般\n多图结合 有的时候我们需要将顺式作用元件、进化树、Motif、Domain 做在同一张图上以便更直观的查看基因家族的差异，使用之前做过的这些分析的源文件将其全部整合在一张图中\n打开 TBtools 的 Gene Structure View 功能，依次导入这些分析的文件进行绘图\n需要注意的是，我们并不需要把这些部分全部做出来，可以根据自己的需要进行删减，想要哪几部分就对应导入那几部分的文件即可\n进化树+Motif\n进化树+Motif+Domain\n进化树+Motif+Domain+显示外显子、内含子\n进化树+Motif+Domain+显示外显子、内含子+顺式作用元件\n最终得到一张信息整合的图\n这里必须要注意的问题就是关于每个文件中的基因名称格式，必须统一使用一样的格式才可以，任何一个文件的名称格式对不上 TBtools 都会报错，比如我们这里导入了水稻的注释文件，而水稻注释文件中的名称是 transcript:Os01t0803200-01 这样的，那么其它文件中的基因名称需要全部改为这一名称\n如果想对基因进行重命名，准备好重命名文件，文件格式与染色体定位分析时的一样\n在下列位置导入重命名文件\n另外，如果我们不要进化树，比如在基因很少或只有单条基因的时候，可能无法做出进化树或者进化树很稀疏，那么我们可以不用导入进化树，在 Gene Structure View 功能填写进化树信息的地方我们填入基因列表即可\n得出图像\n跟前文染色体定位分析时一样，我们可以对图像进行一些更改，这个比较复杂，具体操作请参照 TBtools 美化 进行操作\n基因家族的功能研究 功能富集分析是将基因或者蛋白列表分成多个部分，即将一堆基因进行分类，而这里的分类标准往往是按照基因的功能来限定的。换句话说，就是把一个基因列表中，具有相似功能的基因放到一起，并和生物学表型关联起来。\n为了解决将基因按照功能进行分类的问题，科学家们开发了很多基因功能注释数据库。这其中比较有名的一个就是 Gene Ontology（基因本体论，GO）和 Kyoto Encyclopedia of Genes and Genomes（京都基因与基因组百科全书，KEGG）。\n其中，GO 是基因本体论联合会建立的一个数据库，旨在建立一个适用于各种物种的、对基因和蛋白功能进行限定和描述的，并能随着研究不断深入而更新的语义词汇标准。GO 注释分为三大类，分别是：分子生物学功能（Molecular Function，MF）、生物学过程（Biological Process，BP）和细胞学组分（Cellular Components，CC），通过这三个功能大类，对一个基因的功能进行多方面的限定和描述。\n而 KEGG，大多数听说过 KEGG 的人都会把它当做一个基因通路（Pathway）的数据库，其实人家的功能远不止于此。KEGG 是一个整合了基因组、化学和系统功能信息的综合数据库。KEGG 下属 4 个大类和 17 和子数据库，而其中有一个数据库叫做 KEGG Pathway，专门存储不同物种中基因通路的信息，也是用的最多的一个，所以，久而久之，KEGG 就被大家当做是一个通路数据库了\n功能富集分析的算法有很多种，能够做功能富集分析的工具也非常多，如果大家想深入了解的话，下面是一个工具列表可供大家学习。\n在以上所有的工具中，有一个工具是最为常用，也最为权威，那就是 DAVID，DAVID 是由美国 Leidos 生物医学研究公司的 LHRI 团队开发的一个在线基因注释及功能富集网站，其网址为 https://david.ncifcrf.gov 为什么说 DAVID 它是最权威的呢？看下图就知道了：仅 DAVID 这一个软件就发表了 10 篇 sci 文章，其中 5 分以上 7 篇，累计影响因子将近 85 分。其他用 DAVID 进行分析并发表的文章就更不计其数了\nGO 富集分析 打开 DAVID 官网：https://david.ncifcrf.gov/\n点击上方功能菜单 Functional Annotation\n选择上方的 upload 选项卡，在编辑框内粘贴基因 ID 列表，选 ID 类型为 ENSEMBL_GENE_ID ，选择列表类型为基因列表，最后上传列表\n现在展示出的即富集分析结果，取消勾选上方 Check Defaults 取消全选，展开 Gene_Ontology 项，勾选 BP、CC、MF 项，点击最下方 Functional Annotation Chart 将勾选的项目以列表形式给出\n随后就会跳出一个浏览器页面，以列表的形式将上述结果展示给我们了，点击右上方 Doanload File 将新弹出窗口中的数据复制保存在 Excel 表格中，按顺序保留下列数据\n此处我解释一下 BP、CC、MF 项分别为什么意思\nGO 是 Gene Ontology 的缩写，是一种用于生物信息学和计算生物学中的术语表达的标准格式。GO 主要由三个部分组成：分子功能（Molecular Function，MF）、生物过程（Biological Process，BP）和细胞组分（Cellular Component，CC）这些术语描述了基因和蛋白质的不同功能和所处的环境\nBP（Biological Process）是指分析对象（如基因）所参与的生物学过程，通常是一组相互作用的生物学事件，这些生物学事件在时间和空间上有一定的结构和组织，比如细胞代谢、信号转导、生物合成等等\nCC（Cellular Component）是指分析对象（如蛋白质）所在的细胞组成部分，即它所在的细胞器、细胞构造和細胞組織中对应的位置。比如细胞膜、线粒体、细胞核等等\nMF（Molecular Function）是指分析对象（如基因或蛋白质）具有的分子功能，即它所扮演的特定化学活性，比如催化反应、配体结合、蛋白质结合、转录因子结合等\n第一列：富集的名字（Term）\n第二列：是 X 轴显示内容，例如 gene ratio 等（%列）\n第三列：p 值或者 fdr，即图中的颜色，根据 p 值变化（p-value 列）\n第四列：基因数，控制气泡大小（Count）\n第五列：为可选列，为分类信息，例如 BP，CC，MF 等（Category）\n在制作气泡图时，通常会对富集分析结果中的 P 值进行转换，以避免图像上 P 值的差异过分压缩的情况。常用的转换方式是将 P 值进行-log10（以对数值）的处理\n对数据进行整理，简化一下名称，最终得到如下数据\n打开微生信平台（http://www.bioinformatics.com.cn/）的富集气泡图功能进行绘图，也可以使用 R 和 Excel，R 的环境比较复杂，这里我就不放代码了。\n在这个 GO 富集分析结果中，我们可以从不同的角度来分析：\n在功能方面（GOTERM_MF_DIRECT），我们可以看到，13 个基因处于“半胱氨酸型内切酶抑制剂活性”的功能位置，这一结果的贡献值（P 值，Bonferroni、Benjamin 人为误判率）非常小，表明这 13 个基因的相似分布可能不是随机事件造成的，进而推断这些基因在相关的生物过程、疾病或免疫应答方面扮演着重要的作用\n在细胞组分方面（GOTERM_CC_DIRECT），这 13 个基因中有 11 个基因分布于“细胞外区域”，并具有非常高的显著水平和 FDR 调整系数值，表明这些基因在“细胞外区域”方面的富集并不是随机发生的，这表明这些基因可能参与了水稻的细胞外相关生理作用和功能\n在生物过程方面（GOTERM_BP_DIRECT），这 13 个基因中的所有基因均涉及到“防御反应”，且 P 值和调整后的 P 值均非常小，这表明这些基因在水稻防御反应中可能扮演一个重要的角色\n因此，结合这些结果，这些基因群应该与防御反应有关，它们在水稻中可能扮演着一种重要的保护性功能\nKEGG 富集分析 还未完成\n总结 本文原本是参考文献《拟南芥和水稻 Cystatin 基因家族的生物信息学分析_杨泽峰》知网链接 中的 Cystatin 基因家族来做的，但是最后又发现了 2 个 Cystatin 基因家族的基因。以上便是基因家族鉴定的总体流程。\n致谢 Evolview HMMER MEME 微生信平台 RAP-DB pfam DAVID Cytoscape TBtools Mega NCBI STRING plantcare Ensembl Plants CLUSTALW ESPript ","permalink":"https://yuanj.top/posts/a4559e49/","tags":["生物信息学","TBtools"],"title":"专题：基因家族鉴定"},{"categories":null,"contents":"今天有一位师姐在看到我之前的 基因家族鉴定 帖子之后，请我帮忙修改一份注释文件，他们找了公司测得的文件，格式与标准的注释文件有所差别，于是我使用 Excel 和 Notepad++对文件的格式进行了修改。\n在每一行后面的 ID 信息这一块，有一些符号似乎被转换成网址格式了？（例如网址里的空格会被自动转换成%20）\nArabis_paniculata_L_1-10k_transcript/0\ttransdecoder\tgene\t1\t7495\t.\t+\t.\tID=Gene.1::Arabis_paniculata_L_1-10k_transcript/0::g.1;Name=ORF%20type%3Acomplete%20len%3A2361%20(%2B) 使用 Notepad++批量替换：\n%20 替换成空格 %2B 替换成+ %3A 替换成： 然后在第一列，标准注释文件中是染色体，而这个文件是Arabis_paniculata_L_1-10k_transcript/0，使用 Notepad++正则匹配：\nArabis_paniculata_L_1-10k_transcript/(\\d+) 然后替换成($1)，即替换成正则表达式中括号括起来的部分，这样就会把每一个Arabis_paniculata_L_1-10k_transcript/0替换成0\n转念一想，Arabis_paniculata_L_1-10k_transcript/这里最大的数字达到了 9999，染色体怎么会有这么多？而且还有第 0 条？于是我发现，这个文件信息里貌似没有染色体位置信息 \u0026hellip; 于是失败，既然没有染色体位置信息，何谈染色体定位于共线性分析，遂失败。\n","permalink":"https://yuanj.top/posts/09dhd62x/","tags":["生物信息学"],"title":"一次修改注释文件的经历"},{"categories":null,"contents":"今天看到三体第一部，罗辑深爱上自己为给白蓉完成生日礼物而想象出来的爱人，似乎到了一种他无法自拔的地步，于是他去看了心理医生，医生说：“大部分人的爱情对象也只是存在于自己的想象之中 。他们所爱的并不是现实中的她 （他 ） ，而只是想象中的她 （他 ） ，现实中的她 （他 ）只是他们创造梦中情人的一个模板 ，他们迟早会发现梦中情人与模板之间的差异 ，如果适应这种差异他们就会走到一起 ，无法适应就分开 ，就这么简单 。你与大多数人的区别在于 ：你不需要模板 。”\n看到这里我想了一下，似乎对于我来说并不是这样，我从未想象过有一个如何如何好的爱人，因为很简单，那是想象中的，而我也认为自己是能够清楚的认识到自己究竟喜欢一个什么样的人，当她出现在我面前我便可知道。\n记得当初第一次遇见我的初恋，她一句话都没有说，我就深深地喜欢上了她，可以这就是“Love at first sight”，虽然结局很遗憾，但我仍然感谢她给我年少时光带来心动。\n越长大我越清晰地认识到，如果遇到喜欢的人，那就要勇敢地去追，但也很矛盾，我一直在努力去做一个理智的人，比如改掉坏脾气、遇事冷静、保持头脑清醒，下决定之前慎重考虑等等，即使之前的恋人与我分手也以最快的速度镇静下来，而这样长久以来，似乎发现好像内心就像一潭死水。\n我有一个多年前好友曾经给我说，我这个人最大的缺点在于心不定，如果有人能够将我的心定下来，那么我的前途就可以一帆风顺。\n我对于自己喜欢的人并没有明确的定义，我更认为这是一种感觉，当我精疲力竭的时候第一个想到的人、看遍大千世界依旧觉得最好的那个人 \u0026hellip;\n与罗辑相比，他不需要模板，我也不需要模板，而我更不需要想象。\n","permalink":"https://yuanj.top/posts/zho8s2knd8dsf/","tags":["札记"],"title":"胡思乱想"},{"categories":null,"contents":"前不久，一位江苏大学的师兄请我帮忙做 gromacs 分子动力学模拟，他们找公司测得了酶的 pdb 蛋白结构，想喊我帮忙做 MD 模拟预测柔性位点，便于后期进行改造。研究了几天，还是失败了。\n刚开始我是在超算上安装了 gromacs 准备进行，软件安装时遇到的报错是缺少 pocl 包，conda 安装上就可以了。\n在生成拓扑文件时遇到问题：\n查了文档得知，这是因为 NAI 这个残基不在 gromacs 的标准残基库中，查了一些资料，参照 计算机化学公社 上的帖子打算用 acpype 来生成 gromacs 的拓扑文件，而不是用 gromacs 自带的 pdb2gmx，但还是报错，依旧是非标准残基导致的。\n后来在 gromacs 社区查到可以自己手动补充非标准残基和力场到 gromacs 的配置中，于是参照官方文档和 Jerkwin 博客上的一篇 文章 打算手动补充，但是在创建残基的 rtp 文件时，做不下去了，不是我不想做，实在是这里需要的分子化学知识太多了，而且在创建包含残基的完整分子时，需要使用分子可视化软件手动截取一些残基的原子坐标并且进行封装，知识实在是跟不上了 \u0026hellip;\n只能暂时先放一放，后面找一下学校材化学院的老师请教一下。\n","permalink":"https://yuanj.top/posts/82hwe8re/","tags":["gromacs"],"title":"一次失败的分子动力学模拟"},{"categories":null,"contents":"蔡元培说过：“大学者，研究高深学问者也”，“大学者，囊括大典网罗众家之学府也”。\n那究竟什么是大学？\n儒家散文《大学》提出“三纲领”（明明德、亲民、止于至善）和“八条目”（格物、致知、诚意、正心、修身、齐家、治国、平天下），强调修己是治人的前提，修己的目的是为了治国平天下，说明治国平天下和个人道德修养的一致性。\n而今日之大学或许早已不是如此。\n据我的经验来看，大学里目前可大致分为四类：\n激进派：即所谓“卷王”，不仅追求学习成绩高，课余也会参加各种比赛来丰富阅历。 佛系派：即按时去上课、写作业，但课余摆烂，不追求多高成绩，但追求不挂科、不给自己找事情。 发展派：即不好好上课，时间均花在参加比赛、参加社团活动等事务，力求全面发展自身能力（成绩次要）。 摆烂派：即不认真上课、完成作业，课余时间皆在进行打游戏等娱乐活动，考试凭运气、同学和老师的“水分”。 而以上四派的比例均会因学校的水平高低有所不同，具体表现为学校越好，激进派越多；学校越差，摆烂派越多。\n那为何造成这种情况？\n因为身边常常有人说：\n等你上大学了就轻松了 没有逃过课的大学是不完整的 没有挂过科的大学是不完整的 因为有很多 B 方案：\n考试可以靠期末突击 挂科了还可以补考 毕不了业还有换证考试 因为学习途径多样化：\n老师讲过的内容网上有 老师没有讲过的内容网上也有 因为有自己的判断法则：\n对于学习有预定期望 对于老师有学术期待 对于未来有一定畅想 因为缺乏自控力、因为沉不下心学习、因为有许许多多的其他事情要做。\u0026hellip;..\n今天的大学已经不像《觉醒年代》中那样百家争鸣、尊师重道，因为时代的多样性造成了学生更乐于追求自己所崇尚的那种“道”，而今社会也似乎对学生的要求更多，纸上得来终觉浅，只会学习似乎是行不通的，而所谓的“旁门左道”似乎也是有一定的必要性的。\n如今大学的环境似乎也不是很理想，我们要忙于开各种会、打各种卡、上各种所谓素养课程，就因为社会要求我们要“全面发展”，马克思终其一生研究出的真理我们要在几节课内就掌握；少看一眼 QQ 群就能错过交作业；英语不及格我就不能毕业，哪怕我不考研、考公；我本专业成绩好才能转专业；戏剧鉴赏、影视鉴赏等这些课程我也必须去上 \u0026hellip;\n大学应该是一个升华的殿堂，里面装着无尽的知识，我们享受着迄今为止所有教育经历里配套最全、专业门类最全、教育资源最好的待遇，但我们的注意力没有放在学习上，总有事情会打扰我们，我们总在“酣睡”。\n","permalink":"https://yuanj.top/posts/smsdax7923/","tags":["随笔"],"title":"什么是大学？"},{"categories":null,"contents":"由于数据库之间的差异，使用 NCBI CDD Search 搜索结构域有时候并不能满足我们的需要，比如我们通常使用 HMMER 来鉴定同一家族的基因并且需要进行结构域可视化，但 HMMER 所使用的数据都来自 pfam，它的数据库可能与 NCBI 的不同，因此而造成结果上的差异，有的时候这种情况会影响我们后面的研究，于是，使用 hmmer 网页工具 来进行结构域分析可能会更好。\n打开 hmmer 网页工具，还是一样，上传序列，写下邮件地址，然后提交\n完成后会收到邮件\n将邮件末尾的结构域信息保存到文本文件中\n使用 TBtools 的 Visualize Pfam Domain Pattern 工具进行可视化，导入刚刚保存的结构域信息、蛋白序列（前面上传的）和基因 ID 列表，点击 start 出图即可\n保存时建议保存为 svg 格式，更加清晰，也更方便二次修改。\n","permalink":"https://yuanj.top/posts/asdh8723ko23/","tags":["生物信息学","HMMER"],"title":"使用 HMMER 网页工具进行结构域分析"},{"categories":null,"contents":"pfam 数据库更新了，原有的下载 hmm 模型与种子文件的方法需要进行一些改变。\npfam 官网已经通知，将数据迁移到 interpro 了，所以之前下载 hmm 模型的方法已经不适应了，需要进行一些改变。\n打开 interpro 网站，首页往下翻，找到 pfam\n搜索结构域\n进入结构域的详情页面，点击左栏的 Alignment，选择 seed 然后下载种子文件，下载后是一个压缩包，解压后是 SEED.ann 文件，与之前旧版数据库里的 PFseed_xxxx.txt 是一样的。\n接着再点击左栏的 Curation，下载 hmm 模型文件。\n之后的 HMMER 的使用就和之前一样，没什么变化了。\n","permalink":"https://yuanj.top/posts/hmmd234csda/","tags":["生物信息学","HMMER"],"title":"最新版 HMMER 查找同源基因"},{"categories":null,"contents":"写博客这么久了，还是挺有感触的，记录一下写博客的一些经历。\n开始 自大一开始，我就开始写博客了，但前面很多的时间都花在寻找一个合适的博客上面，最初我使用的是博客园，虽然博客园的界面看上去比较古老，但它却实在是国内技术论坛中的一股清流，当 CSDN 等大肆塞入广告、会员机制的时候，博客园始终如一，所以大一的时候我将使用 Linux 的经历和学习 Python 的笔记都放在上面了，但后来发现，还是有一些弊端，后来使用华为云开发者社区、腾讯云开发者社区等，都有同样的一些问题：\n文章需要审核 界面无法自定义个性化（博客园可以自定义 css） 无法设置自定义域名 只能在网页上写，且体验一般 于是乎，就走上了自建博客之路。\nHexo 博客 在一位计算机学长的推荐下，第一次使用了 Hexo 博客框架，最初使用的是一款仙人掌主题 hexo-theme-cactus，简约大气，但还是有一些问题：\n评论系统只有 disqus 和 utterances 加载速度很慢（当时不会自己加速静态资源） 代码高亮很丑 当时为了加载速度快，我使用的是 gitee pages，每次都要自己手动刷新网页，很不爽，而且速度貌似也不是那么的快，如果静态资源太多，还是依旧的慢。\n后来又用了一段时间的 stellar 和 keep 主题，但似乎加载速度都不是很如意，加上当时水平差，不会对一些 css、js 文件进行加速，导致问题无法解决。不过一个进步就是，从最初的 gitee pages 换成了 GitHub+Vercel+自定义域名。\n再到后来就是 Butterfly 主题了，从最初只会改默认配置到后面逐渐学会自己写 css 修改样式、自建了图床保证稳定性、使用国内 npm 镜像源对静态资源进行加速等，学会了很多东西，也将博客收录到百度、必应和谷歌，到现在这个博客仍未下线，还可以打开，不过过段时间还是要下线了，在 Blog 还能查看。不过这个博客还是有一些不如意的地方：\n运维困难，每篇文章都有一个封面图+顶部图，感觉麻烦 hexo 编译速度很慢 hexo 本地调试每次都需要 hexo cl \u0026amp;\u0026amp; hexo g \u0026amp;\u0026amp; hexo s，不能实时预览 不够极简 版本依赖严重，更换 cdn 时版本号有一点点差别都不能用 综合以上原因，我放弃了 hexo 博客。\nGitHub issue 博客 看到 GitHub 上一位用户使用了 GitHub issue 的方式写博客：gitblog，然后使用 GitHub 的 API 及 Action 自动将标题添加到 README，感觉思路很不错，主要的优点有：\nGitHub issue 搜索权重高 不需要额外准备图床 不需要本地环境 但是由于 GitHub 被墙的原因，它的缺点也很突出，那就是不开梯子很难打开，我自己日常也不太喜欢一直开着梯子，so 只能再想办法了。\nHugo 博客 在看到少数派的一位作家写的文章 浅谈我为什么从 HEXO 迁移到 HUGO 之后，我试了一下 hugo 博客，使用的是 LoveIt 主题，感觉很不错，自己修改了一些个样式，让其保证极简，评论系统用的是 waline，个人认为 hugo 的优点有下面几个\n编译速度快，得益于 go 语言 不依赖 nodejs 网页的速度也比较快（个人感觉） 界面简洁大方 各式的模板很好用 综合以上特点，我最终使用了 hugo 博客。\n博客的框架为极狐 Gitlab 代码托管+Vercel 部署+Cloudflare 域名解析，由于国内 GitHub 被墙，经常 push 不上去，我也不常开梯子，所以用极狐 Gitlab 的 CI/CD 功能，部署博客到 Vercel，CI/CD 的配置文件.gitlab-ci.yml内容如下\ndefault: image: ubuntu:latest vercel_deploy: stage: deploy only: - main script: - sed -i \u0026#39;s@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g\u0026#39; /etc/apt/sources.list - apt-get update \u0026amp;\u0026amp; apt-get install -y hugo curl - curl -sL https://deb.nodesource.com/setup_18.x | bash - - apt-get update \u0026amp;\u0026amp; apt-get install -y nodejs build-essential - npm install --global vercel - vercel link --project=homepage --yes --token=$VERCEL_TOKEN - vercel pull --yes --environment=production --token=$VERCEL_TOKEN - vercel build --prod --token=$VERCEL_TOKEN - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN 2023/10/09更新\nVercel 似乎已经被墙，国内使用问题很大，于是迁移到 Netlify，并且不再使用 Gitlab CI/CD 进行部署，而是使用 Gitlab 把仓库镜像到 GitHub，再导入 Netlify 进行更新部署。\n博客主题使用了更加简洁的 cocoa 主题，并且进行了一些自定义，删掉了友链页面，域名也由 hieroglyphs.top 换成了 yuanj.top。\n碎碎念 这个博客也不是什么大佬的技术博客，只是我个人的一些记录、感想及碎碎念，如果其中有一些内容能够帮助到大家，那我自然也很开心，我也乐意去帮助大家。最后，欢迎各位与我讨论各种问题，在各种问题中共同进步，也欢迎各位向我提出意见、问题、建议，我会很乐意解决。\n","permalink":"https://yuanj.top/posts/ioas7a6/","tags":["随笔"],"title":"关于博客更新的三两事"},{"categories":null,"contents":"我们知道蛋白质是生命活动的主要承担者，而结构往往决定着功能，因此对蛋白质的研究具有十分重要的意义，不仅有助于我们了解蛋白质如何行使其生物学功能，也可以有助于我们发现功能未知或者新发现的蛋白质。最开始丹麦科学家 Linderstram 将蛋白质分子划分为一级、二级和三级结构，随后英国的 Bernal 增加了四级结构来命名蛋白质结构，但是随着科学不断进步，超二级结构、结构域等相继被发现，这预示着蛋白质具有丰富又复杂结构层次。\n一级结构（primary structure） 蛋白质的一级结构就是指氨基酸残基在肽链上的排列顺序，也就是蛋白质的序列，例如下面的黑麦草中的一个基因的蛋白一级结构\n\u0026gt;KYUSt_chr1.28019 MHASVRLLRRLSSSSSPRSLRRLPFHPSPLPSPHPLPLPILRTRAPLPRLAGRRFSTISCASTPSLRLGECGALGTPAIPEVEKSEGEEEVDSLAARHDTDAFAAVELALDSVVKVFTVSSGPNYFLPWQNKSQRESMGSGFVISGRRIITNAHVVADHTFVLVRKHGSPTKYKAEVQAVGHECDLALLTVESEEFWEGMNSLDLGDIPFLQEAVAVVGYPQGGDNISVTKGVVSRVEPTQYAHGATQLMAIQIDAAINPGNSGGPAIMGDKVAGVAFQNLSGAENIGYIIPVPIINRFISGVEESGKYSGFCSLGISCQATENIQIRECFGMRPEMTGVLVSRINPLSDAYKVLKKDDILLEFDGVPIANDGTVPFRNRERITFDHLVSMKKPEETSVIKVLRDGKEHELTVTLRPLQPLVPVHQFDKVPSYYIFAGFVFIPLSQPYLHEFGEDWYNTSPRRLCERALRELPKKAGQQLVILSQVLMDDINVGYERLAELQVKKVNGVEVENLKHLCSIVEGCTEENLRFDLDDERVIVLKFQNAKLATSRILKRHRIPSAMSNDLFDEQGSNDAEGRGLPGALHWLRRLLFG 蛋白质的一级结构是后面所有高级结构的基础，也是决定更高层结构的主要因素。天然蛋白质中常见的氨基酸大概有 20 种，这些氨基酸个体通过肽键共价结合。如果两个不同的蛋白质具有相似的一级结构，那么我们可以称这两个蛋白质彼此同源（homology）。\n二级结构（secondary structure） 蛋白质的二级结构指多肽链的主链原子在氢键作用下沿一维方向排列成具有周期性的结构构象，这是多肽链局部的空间（结构）构象。主要有α螺旋、β折叠、β转角、无规则卷曲等形式。\nα螺旋（α-helix） 蛋白质中最常见、最典型、含量最丰富的结构元件，是一种重复性结构。由于肽链中的全部肽键都可形成氢键，故α-螺旋十分稳定。\n其结构特征为：\n主链骨架围绕中心轴形成右手结构 螺旋每上升一圈为 3.6 个氨基酸残基，螺距为 0.54nm 相邻螺旋圈之间形成氢键 侧链基团位于螺旋外侧 不利于α螺旋形成的原因有：\n侧链基团存在较大的氨基酸残基 连续存在带相同电荷的氨基酸残基 存在脯氨酸残基 β折叠（β-pleated sheet） 折叠一般有两种形式，一种为平行式，另一种自然为反平行式。两者的区别就如字面意思一样，平行β折叠即相邻肽链是同向的，反平行式为逆向的。\n其结构特征为：\n若干条肽链或肽段平行或者反平行排列成片 所有肽键的 C=O 和 N-H 形成链间氢键 侧链基团分别交替位于片层的上、下方 β转角（β-turn） 通常发生在多肽链 180°回折时的转角上，通常由 4 个氨基酸残基构成，借助第一和第四残基之间形成氢键，从而形成一个紧密的环。已经发现的蛋白质的抗体识别、磷酸化、糖基化和羟基化位点经常出现在转角和紧靠转交。\n无规卷曲（random coli） 无规卷曲就是指主链骨架无规律排列形成的构象，也泛指那些不能归入明确的二级结构的多肽区域。常出现在α螺旋与α螺旋、α螺旋与β折叠、β折叠与β折叠之间。\n二级结构预测 下面的三个网站都可以用于蛋白质二级结构预测\nPsipred Novopro Prabi 以 Novopro 网站为例，上传前面所提到的那个黑麦草的序列，得到下面的结果\n输出结果中，粉色块代表α螺旋，白色块代表卷曲，黄色块代表β折叠。还有一个更加形象的图：\n超二级结构和结构域 超二级结构（supersecondary structure）和（domain）是介于二级和三级结构之间的空间构象。\n超二级结构为那些相邻的二级结构单元体组合在一起，排列形成具有规则的、能够在空间结构上辨识的二级结构组合体，同时又可以充当三级结构的功能部件，常见的形式由αα、ββ、βαβ等。\n结构域就是在超二级结构的基础上形成的三维局部折叠区域，通常相对独立并且具有一定的生物学功能。一个较大的蛋白质分子通常具有多个结构域。\n此外我们常说的模体（motif）或者模序，它是结构域的亚单位，长度从几个氨基酸残基到几十个氨基酸残基不等，相当于超二级结构，一般为α螺旋、β折叠和环（loop）。\n我们通常在基因家族鉴定中会做 domain 分析和 motif 分析实则就是将其可视化，更便于查看，可以通过 NCBI CDD tool 搜索结构域，使用 MEME 网站 查询 motif。\n另外，如果使用 hmmer 做基因家族成员鉴定的话，也是通过结构域进行建模和搜索，最终初步确定家族成员的。\n三级结构（tertiary structure） 三级结构就是指整条多肽链的三维结构，这就包括了主链骨架以及侧链在内的所有原子的空间结构。它是在二级结构的基础上进一步盘旋、折叠形成的具有一定规律的三维结构。三级结构主要通过氨基酸侧链间的疏水相互作用、氢键、范德华力、静电相互作用等来维持。假设一个蛋白质仅由一条多肽链构成，那么三级结构就为它的最高结构层次。\n例如血红蛋白，由四个子单元合成的一个蛋白质\n三级结构的预测可以使用 Swiss-model，还是使用前面的黑麦草基因为例，可以自己找到与目标序列同源的已知结构作为模板（目标序列与模板序列的一致度要 ≥ 30%）建模或者直接使用模板，时间可能会比较长，留下邮箱，完成后会发送邮件通知。\n可以滑动查看、放大查看或者对其进行一些编辑。\n四级结构（Quaternary structure） 在生物体内有许多蛋白质含有 2 条或 2 条以上多肽链，才能全面地执行功能。每一条多肽链都有其完整的三级结构，称为亚基（subunit），亚基与亚基之间呈特定的三维空间分布，并以非共价键相链接，这种蛋白质分子中各亚基的空间排布及亚基接触部位的布局和相互作用，即寡聚蛋白中各亚基的空间排布，称为蛋白质的四级结构（Quaternary structure）。\n参考资料 百度百科\n如何预测蛋白质三维结构（SWISS-MODEL）\n什么是蛋白质的一级结构，以胰岛素为例，描述其结构特征？\n如何理解未折叠蛋白反应在细胞内充当的「质量控制系统」角色？\n蛋白质的结构组织层次\n","permalink":"https://yuanj.top/posts/proeiwhf89/","tags":["生物信息学"],"title":"蛋白质的结构组织层次"},{"categories":null,"contents":"使用 Python 实现水稻 OS ID 与 LOCs ID 互相转化、提取序列等功能。\n用法 GitHub 仓库：OStools 还在不断更新中。\n安装 Python 后，Windows 系统运行start.exe，Linux 系统运行main.py。\n实现 主体程序是在一个 while 循环中，定义了两个函数ID_converter与extract_id\ndef ID_converter(ID): with open(\u0026#34;./ID.txt\u0026#34;, \u0026#34;r+\u0026#34;) as file: ID_corresponding_list = file.readlines() for ID in ID_corresponding_list: if gene in ID: print(\u0026#39;RAP ID:{}\u0026#39;.format(ID.split(\u0026#39;\\t\u0026#39;)[0])) print(\u0026#39;MSU ID:{}\u0026#39;.format(ID.split(\u0026#39;\\t\u0026#39;)[1])) global OS_ID OS_ID = ID.split(\u0026#39;\\t\u0026#39;)[0] break else: continue else: print(\u0026#34;sorry, ID not found!\u0026#34;) ID_converter函数从 ID.txt 中读取 ID 对应关系，这个文件是从 RAP-DB 上下载的，RAP-DB 也是我们最常用的水稻 ID 转换工具，对应关系如下面的格式：\nOs01g0100100\tLOC_Os01g01010.1,LOC_Os01g01010.2 Os01g0100200\tLOC_Os01g01019.1 Os01g0100300\tNone 逐行读取 ID 的对应关系之后，for 循环内嵌 if 判断在每一行 ID 中搜索包含输入的 ID，找到对应的行之后根据制表符（\\t）进行分割，前面的是 RAP ID，后面的是 MSU ID，分开进行输出，最后再将 RAP ID 定义为全局变量以便于下一个函数调用。\ndef extract_id(): if OS_ID == \u0026#39;None\u0026#39;: print(\u0026#34;can\u0026#39;t\u0026#34;) return else: pass id_list = [] Processed_ID = OS_ID.replace(\u0026#39;g\u0026#39;, \u0026#39;t\u0026#39;) Processed_ID_0 = Processed_ID + \u0026#39;-00\u0026#39; Processed_ID_1 = Processed_ID + \u0026#39;-01\u0026#39; id_list.append(Processed_ID_0) id_list.append(Processed_ID_1) print() print(\u0026#34;Protein:\u0026#34;) with open(\u0026#34;./os.protein.fasta\u0026#34;, \u0026#34;r\u0026#34;) as protein: seq = protein.readlines() for protein_id in id_list: for i in range(len(seq)): if protein_id in seq[i]: print(seq[i], end=\u0026#39;\u0026#39;) print(seq[i+1]) break else: print(\u0026#34;\u0026gt;{}:Unable to find protein sequence\u0026#34;.format(protein_id)) extract_id函数传入上一个函数中的 RAP ID，并且将其转换为两个转录本的形式 -00、 -01，再从蛋白质序列文件中进行搜索。\n下面的这段代码主要是修改 ID 的格式，对应关系中水稻的 ID 是Os01g0100466这样的格式，而蛋白质序列文件中每一个基因可能包含多个转录本，如Os01t0538000-01、Os01t0538000-02、Os01t0538000-03，但我们通常所使用的蛋白质是转录本 -00 和-01，所以将 ID 转换成这两个转录本提取序列。\nProcessed_ID = OS_ID.replace(\u0026#39;g\u0026#39;, \u0026#39;t\u0026#39;) Processed_ID_0 = Processed_ID + \u0026#39;-00\u0026#39; Processed_ID_1 = Processed_ID + \u0026#39;-01\u0026#39; 蛋白质序列文件中每个基因有两行，一行是 ID，另一行是序列，所以下面的这段代码在找到转录本所在行之后输出该行（ID）与下一行（序列）。\nfor i in range(len(seq)): if protein_id in seq[i]: print(seq[i], end=\u0026#39;\u0026#39;) print(seq[i+1]) 拓展 如果要用于其它物种，更换 ID 对应关系和蛋白质序列，修改输出信息代码和对 ID 进行更改的代码即可。\nprint(\u0026#39;RAP ID:{}\u0026#39;.format(ID.split(\u0026#39;\\t\u0026#39;)[0])) print(\u0026#39;MSU ID:{}\u0026#39;.format(ID.split(\u0026#39;\\t\u0026#39;)[1])) Processed_ID = OS_ID.replace(\u0026#39;g\u0026#39;, \u0026#39;t\u0026#39;) Processed_ID_0 = Processed_ID + \u0026#39;-00\u0026#39; Processed_ID_1 = Processed_ID + \u0026#39;-01\u0026#39; TODO GUI 界面程序 增加选择项 ID 对应关系与蛋白质序列更新程序 批量转换与提取 ","permalink":"https://yuanj.top/posts/asdifhu9a8d/","tags":["Python"],"title":"用 Python 实现水稻 ID 转换程序"},{"categories":null,"contents":"图文结合解读Vmware虚拟机三种网络模式的区别与优缺点。\nBridged（桥接模式） 虚拟机与宿主机处于同一网段，能够与同一网段下的其它主机（包括外部主机与虚拟主机）通信，但由于同一网段最多只有255个IP，所以容易造成IP冲突。\nNAT（地址转换模式） 虚拟机拥有独立的虚拟网卡，会在宿主机产生一个同一网段下的新IP，与宿主机构成独立的通信网络，并且虚拟机可以通过宿主机的IP代理访问宿主机网络内的其它主机，但外部网络无法直接访问虚拟机（没有代理），不造成IP冲突。\nHost-Only（仅主机模式） 虚拟机为独立的系统，其实就是NAT模式去除了虚拟NAT设备，使用虚拟网卡、虚拟交换机来与虚拟机进行网络访问。\n","permalink":"https://yuanj.top/posts/adsf98asdf/","tags":["网络"],"title":"虚拟机三种网络模式的区别"},{"categories":null,"contents":"今天打算完成环境科学与工程进展课老师布置的作业，即翻译两篇 SCI2 区以上文献，先从新污染物入手。但是在下载文献的时候有点问题，浅浅记录一下。\n那么什么是新污染物？\n从改善生态环境质量和环境风险管理的角度看，新污染物是指那些具有生物毒性、环境持久性、生物累积性等特征的有毒有害化学物质。\n这些有毒有害化学物质对生态环境或者人体健康存在较大风险，但尚未纳入环境管理或者现有管理措施不足。\n目前，国际上广泛关注的新污染物有四大类：一是持久性有机污染物，二是内分泌干扰物，三是抗生素，四是微塑料。\n我选择了微塑料为主题，于是在 NCBI 搜索关键词Microplastics，筛选符合以下条件的文献\nSCI2 区及以上 最新的文献 环境科学与工程相关 影响因子尽量高 这里显示文献相关信息使用了 easyscholar 插件\n跳转到 sciencedirect 查看全文并且下载 pdf\n但点击 View PDF 后一直是空白页，网上找到的方法也不行，我想到用学校的 VPN 进入 sciencedirect 数据库\n搜索关键词，选择符合我所需要的条件的文献，选中全部下载\n文献下载一直是一个痛点，比较麻烦，市面上也有很多付费帮忙下载的，但自己要是掌握了方法的话就可以任意下载了，靠高校的数据库下载也会很容易的，尤其外文文献，中文文献貌似只有知网比较全面，但是期刊比较多，学校没有购买对应期刊的数据库的时候又该怎么办？不过一般比较顶尖的论文都发在英文期刊吧，SCI 英文文章一般质量较高，有一定的创新性，科学性和严谨性，有点什么重大研究的，首先想到的都是发国际期刊，而中文期刊貌似从英文期刊也“借鉴”了不少？掌握英文文献的下载实在是太重要了~\n","permalink":"https://yuanj.top/posts/scnredh8u/","tags":["论文期刊"],"title":"如何优雅地在 sciencedirect 下载文献？"},{"categories":null,"contents":"利用 Python 计算国家环境噪声监测技术规范中的等效声级。\nimport math with open(\u0026#34;./data.txt\u0026#34;) as noise_data: lines = noise_data.readlines() number_string = \u0026#39;\\t\u0026#39;.join(lines) number = number_string .split(\u0026#39;\\t\u0026#39;) number = [x.strip() for x in number if x.strip()!=\u0026#39;\u0026#39;] number.pop(0) number.pop(200) # number.pop(400) def L_number(order): for i in number[:order]: l = 0 l = l + (1/order)*pow(order, (0.1)*float(i)) L_10 = 10*math.log(10,l) for i in number[:order+40]: l = 0 l = l + (1/(order + 40))*pow(order, (0.1)*float(i)) L_50 = 10*math.log(10,l) for i in number[:order+80]: l = 0 l = l + (1/(order + 80))*pow(order, (0.1)*float(i)) L_90 = 10*math.log(10,l) L_eq = L_50 + ((L_10 - L_90)**2)/60 从 data.txt 中导入 200 个数据进行计算，分别求得 L10、L50、L90，最后计算 Leq\n","permalink":"https://yuanj.top/posts/ar90trgsjkl/","tags":["Python"],"title":"Python 计算等效 A 声级"},{"categories":null,"contents":"最近在学习 Pyhotn，突然想到实验课作业里需要几百个噪音的数据，于是使用 Pyhton 生成随机数来模拟一下。\nimport random import os def noise(location, number): result = \u0026#34;\u0026#34; if location == \u0026#39;library\u0026#39;: result += \u0026#34;图书馆噪声数据：\u0026#34; result += \u0026#39;\\n\\n\u0026#39; if location == \u0026#39;lab\u0026#39;: result += \u0026#34;实验楼噪声数据：\u0026#34; result += \u0026#39;\\n\\n\u0026#39; if location == \u0026#39;dormitory\u0026#39;: result += \u0026#34;寝室噪声数据：\u0026#34; result += \u0026#39;\\n\\n\u0026#39; for i in range(10): for i in range(10): noise_figure = number + random.uniform(0,6) result += str(\u0026#34;{:.5}\u0026#34;.format(noise_figure),) + \u0026#39;\\t\u0026#39; result += \u0026#39;\\n\u0026#39; result += \u0026#39;\\n\u0026#39; with open(\u0026#34;./data.txt\u0026#34;, \u0026#34;a\u0026#34;) as data: data = data.write(result) data = \u0026#34;./data.txt\u0026#34; file = open(data, \u0026#34;w\u0026#34;) file.close() if os.path.getsize(data) != 0: os.remove(data) else: pass noise(\u0026#39;library\u0026#39;, 45) noise(\u0026#39;lab\u0026#39;, 50) noise(\u0026#39;dormitory\u0026#39;, 60) ","permalink":"https://yuanj.top/posts/ad90adf/","tags":["Python"],"title":"Python 生成随机数例子"},{"categories":null,"contents":"之前那一篇文章主要讲的是一些知识与工具的用法，这次用六组数据进行分析，得到基因表达矩阵。\n还是先从 NCBI 搜索数据，查看数据是双端测序的数据之后，多选条目，直接 Accession list\n我使用的是下列数据\nSRR25907783 SRR25907784 SRR25907785 SRR25907786 SRR25907787 SRR25907788 使用 sra-tools 批量下载数据，并且使用 nohup 把程序挂在后台下载\nnohup prefetch --option-file acc_list.txt 再使用脚本进行拆分\n#!/bin/bash mkdir SRR mv ./SRR*/*.sra ./SRR cd SRR nohup fastq-dump --gzip --split-3 SRR*.sra 这里千万不要在程序没有运行完成的时候就进行下一步操作，使用 top 可以查看后台进程\n当程序运行完成后便可看到后台任务中已经没有前面运行的程序了\n同一目录下的 nohup.out 文件中是后台进程的运行记录\n拆分完成后就需要进行质量检测，使用通配符批量检测，并且将检测报告放在单独一个文件夹以便后面进行压缩\nmkdir fastqc_report fastqc SRR2590778*.fastq.gz -o ./fastqc_report 完成之后，将检测报告进行压缩，以便下载查看\nzip -r fastqc_report.zip fastqc_report/*.html 依据检测报告对序列进行过滤，参数之前已经讲过，这里数据比较多，写一个 bash 脚本的 for 循环\n#!/bin/bash for i in {3..8} do trimmomatic PE -threads 1 -phred33 SRR2590778${i}_1.fastq.gz SRR2590778${i}_2.fastq.gz -summary oryza_sativa_${i}.summary -baseout SRR2590778${i}.fastq.gz LEADING:3 TRAILING:3 SLIDINGWINDOW:5:20 HEADCROP:15 MINLEN:36 done 下载水稻的参考基因组和注释文件进行 hisat2 比对\nwget https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-57/fasta/oryza_sativa/dna/Oryza_sativa.IRGSP-1.0.dna.toplevel.fa.gz wget https://ftp.ensemblgenomes.ebi.ac.uk/pub/plants/release-57/gff3/oryza_sativa/Oryza_sativa.IRGSP-1.0.57.gff3.gz 把下载的文件解压后重命名，方便使用\ngzip -d Oryza_sativa.IRGSP-1.0.dna.toplevel.fa.gz mv Oryza_sativa.IRGSP-1.0.dna.toplevel.fa oryza_sativa.fa gzip -d Oryza_sativa.IRGSP-1.0.57.gff3.gz mv Oryza_sativa.IRGSP-1.0.57.gff3 oryza_sativa.gff3 先构建 hisat2 索引\nhisat2-build oryza_sativa.fa oryza_sativa 构建完成之后开始将 reads 比对到参考基因组，还是写成脚本进行\n#!/bin/bash for i in {3..8} do hisat2 -x hisat2_index/oryza_sativa -p 5 -1 SRR2590778${i}_1P.fastq.gz -2 SRR2590778${i}_2P.fastq.gz -S oryza_sativa_${i}.sam done 比对完成后要进行排序压缩，到这里时我的 samtools 一直报错，Google 了一下才发现是 samtools 版本的一个 bug，安装指定版本就没问题了，于是新建 conda 环境进行安装（如果没有报错直接使用即可）\nconda create -n samtools python=3.10 conda search samtools conda install samtools=1.9 #指定安装 1.9 安装完成继续进行，还是写成 bash 脚本一键进行，这里我将每次排序的结构按照 1-6 分别命名\n#!/bin/bash for i in {3..8} do samtools sort -n -@ 5 oryza_sativa_${i}.sam -o oryza_sativa_${i} done 最后一步 featureCounts 生成基因计数表\n#!/bin/bash bam_files=(*.bam) if [ ${#bam_files[@]} -gt 0 ]; then featureCounts -T 5 -t exon -g Name -a Lolium_perenne.gff3 -o gene.counts -p \u0026#34;${bam_files[@]}\u0026#34; else echo \u0026#34;No BAM files found in the current directory.\u0026#34; fi 至此完成，拿到矩阵\n个人习惯完成分析后把文件进行一下归类\n最后将数据下载到本地进行下游分析\n","permalink":"https://yuanj.top/posts/kjasdf98/","tags":["转录组学，生物信息学"],"title":"RNA Seq 上游分析实践"},{"categories":null,"contents":"Python 使用正则表达式的一些知识。\nPython 调用正则表达式 Python 中使用正则表达式需要先导入 re 模块并且定义正则表达式然后再进行通过 re 模块的函数调用\n\u0026gt;\u0026gt;\u0026gt; import re \u0026gt;\u0026gt;\u0026gt; p = r\u0026#39;\\w+@gmail\\.com\u0026#39; \u0026gt;\u0026gt;\u0026gt; email = \u0026#39;hieroglyphs@gmail.com\u0026#39; \u0026gt;\u0026gt;\u0026gt; m = re.match(p, email) \u0026gt;\u0026gt;\u0026gt; print(m) \u0026lt;re.Match object; span=(0, 21), match=\u0026#39;hieroglyphs@gmail.com\u0026#39;\u0026gt; 返回非空的 Match 对象则说明匹配成功，返回 None 则匹配失败\nPython 中 re 模块常用的函数（p 为正则表达式，string 为字符串）：\nsearch(p, string) 查找字符串，返回非空的 Match 对象则说明匹配成功，返回 None 则匹配失败 findall(p, string) 查找字符串，如果找到会返回所有匹配到的字符串列表，如果找不到则返回 None sub(p, repl, string, count=0) 字符串替换，repl 是用于替换的新字符串，string 是要被替换的字符串，count 是要替换的最大数量，默认为 0，表示不限制数量 split(p, string, maxsplit=0) 字符串分割，maxsplit 表示最大分割次数，默认为 0，表示不限制次数 正则表达式语法 限定符\na* a 出现 0 次或多次 a+ a 出现 1 次或多次 a? a 出现 0 次或多次 a{6} a 出现 6 次 a{2,6} a 出现 2-6 次 a{2,} a 出现 2 次以上 或运算符\n(a|b) 匹配 a 或 b (ab)|(cd) 匹配 ab 或 cd 字符类\n[abc] 匹配 a 或 b 或 c [a-c] 匹配 a 或 b 或 c [a-fA-F0-9] 匹配所有小写字母、大写字母及数字或它们的组合 [^0-9] 除了数字其它都匹配 元字符\n\\d 匹配数字字符（0-9） \\D 匹配非数字字符 \\w 匹配单词字符（英文、数字、下划线） \\W 匹配非单词字符 \\s 匹配空白符（包括换行符、Tab 制表符） \\S 匹配非空白符 . 匹配任意字符（换行符除外） \\bword\\b \\b 标注字符的边界（全字匹配） ^ 匹配行首 **$**匹配行尾 贪婪/懒惰匹配\n\u0026lt;.+\u0026gt; 默认贪婪匹配“任意字符” \u0026lt;.+?\u0026gt; 懒惰匹配“任意字符” 例子 匹配下列文本中的 IP 地址\n255.255.255.1 255.255.0.1 256.256.255.1 256.256.255 abcd.efg.hig.c giduihda 19216801 192.16801 192.168.0.1 10.32.14.754 4.2.2.1 正则表达式\n\\b((25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\b Python 运行程序\n在 Python 正则表达式中，括号是用来捕获组的，只有通过括号捕获的部分才会被 findall 函数返回，所以需要先把括号展开再查找字符串\nimport re p = r\u0026#39;\\b(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\b\u0026#39; string = \u0026#39;\u0026#39;\u0026#39; 255.255.255.1 255.255.0.1 256.256.255.1 256.256.255 abcd.efg.hig.c giduihda 19216801 192.16801 192.168.0.1 10.32.14.754 4.2.2.1 \u0026#39;\u0026#39;\u0026#39; print(re.findall(p,string)) ","permalink":"https://yuanj.top/posts/psdafh23h/","tags":["Python"],"title":"正则表达式"},{"categories":null,"contents":"不得不说，Ruby 的安装实在坑太多，Debian 上安装了老半天才成功，记录一下安装过程，安装的是 3.2.2 版本。\n#!bin/bash # Download Ruby binary package wget https://cache.ruby-china.com/pub/ruby/3.2/ruby-3.2.2.tar.gz # Decompress Ruby binary package tar -vxf ruby-3.2.2.tar.gz mv ruby-3.2.2 ruby mv ruby ~/ cd ~/ruby # Install the required dependencies for Ruby first sudo apt-get install libyaml-dev libssl-dev libedit-dev libffi-dev # Compile and installation ./configure make sudo make install # Bundler and gem swapping sources gem sources --add https://mirrors.tuna.tsinghua.edu.cn/rubygems/ --remove https://rubygems.org/ gem install bundler bundle config mirror.https://rubygems.org https://mirrors.tuna.tsinghua.edu.cn/rubygems ","permalink":"https://yuanj.top/posts/oar34fdgs/","tags":["Ruby","Linux"],"title":"Ruby 的安装"},{"categories":null,"contents":"转录组的研究对象为特定细胞在某一功能状态下所能转录出来的所有 RNA 的总和，其原始数据便是测序文件，因而了解测序技术对进行转录组学分析具有重要的意义。\n第一代测序技术 1975 年由 Frederick Sanger 所提出的链终止法以及 1977 年由 Walter Gibert 所发明的链降解法被称为第一代测序技术。\n1977 年，Walter Gilbert 和 Frederick Sanger 发明了第一台测序仪，并应用其测定了第一个基因组序列，噬菌体 X174，全长 5375 个碱基。Walter Gilbert 和 Frederick Sanger 也因在测序技术中的贡献获得了 1980 年诺贝尔化学奖。\n第一代测序技术大体上是仿照 DNA 合成的原理来进行的，正常的 DNA 合成主要分为以下几个步骤\n高温变性、退火 引物与 DNA 单链结合 dNTP（脱氧核糖核酸）与引物借助 DNA 聚合酶结合形成单链 合成双链 Sanger 测序技术大致分为以下几个步骤\n高温变性、退火 引物与单链（目标序列）结合 在 DNA 聚合酶的作用下 ddNTP、dNTP 与引物相结合形成不同长度的 DNA 片段 通过电泳技术将不同长度的 DNA 片段分开 根据不同长度片段的最后一个碱基拼接得到完整序列信息 实际上 Sanger 测序的核心在于形成不同长度的 DNA 片段。在四个容器中分别加入 DNA 合成所需要的模板链、四种 dNTP、引物和一种 ddNTP，由于 ddNTP 和 dNTP 一样，可以与 dNTP 结合，但 ddNTP 在与 dNTP 结合后便不能再与 dNTP 结合，并且与 ddNTP 结合的位点是随机的，那么在一个容器中放入大量的反应物（ddNTP 只放入一种）便可以得到许多不同长度的序列片段，四个容器分别放入四种不同的 ddNTP 并且分别加入一定比例带有放射性同位素标记的 ddNTP。\n随后通过凝胶电泳和放射自显影后可以根据电泳带的位置确定待测分子的 DNA 序列。\n补充：\n由于区分长度差距在 1 到几 bp 的 DNA 链，因此需要使用使用高分辨率变性丙烯酰胺凝胶 只需设计一个 5\u0026rsquo;端引物，在模板 DNA 双链解开后与其中的一条单链的 5\u0026rsquo;端结合，保证序列能够从特定模板单链的 5\u0026rsquo;端到 3\u0026rsquo;端方向延伸 优点：\n精准度高：Sanger 测序具有很高的精确度，可以达到 99.99%的准确度 可靠稳定：其结果是有可重复性和可验证的 大片段测序：它可以测序长达 900 到 1000 个碱基对的 DNA 片段 较高的数据质量：Sanger 测序可以产生长的读取长度和高质量的序列 缺点：\n一个反应只能得到一条序列，因此测序通量很低 成本和速度：与新一代高通量测序技术相比，Sanger 测序的成本更高，速度也较慢 不能进行大规模并行分析：Sanger 测序无法达到新一代测序技术的并行分析规模 难以检测某些复杂的基因重排和突变：比如某些结构变异和长串联重复序列 需要大量的 DNA 样本：对样品的数量和质量有较高的要求 第二代测序技术 高通量测序技术 (High-throughput sequencing, HTS) 是对传统 Sanger 测序技术革命性的变革，可以一次对几十万到几百万条核酸分子进行序列测定，因此也称其为下一代测序技术 (Next Generation Sequencing, NGS)，高通量测序技术的出现使得对一个物种的转录组和基因组进行细致全貌的分析成为可能。\n了解第二代测序技术需要先了解几个必要的概念\n基因簇：基因簇（gene cluster）指基因家族中的各成员紧密成簇排列成大串的重复单位，位于染色体的特殊区域 cDNA：cDNA 是指互补（有时称拷贝）DNA。特指在体外经过逆转录后与 RNA 互补的 DNA 链。与平常我们所称谓的基因组 DNA 不同，cDNA 没有内含子而只有外显子的序列 二代测序主要分为以下几个步骤\n样品制备（预处理） 文库制备 上机测序 数据分析 二代测序的原理也因测序平台的不同而略微有所不同，主要有以下平台\n454 焦磷酸法平台 - 边合成边测序技术 Solexa 基因组分析仪（Illumina 测序仪） - 克隆单分子阵列技术 SOLiD 高通量测序仪 - SOLiD 测序技术 HeliScope 测序仪 - 循环芯片测序+单分子测序 二代测序的主要过程：\n在对所选样品提取核酸（DNA 或 RNA）后，通过标准方法 QC 检查。如果样品为 RNA，转录为 cDNA。采用酶处理或超声处理，将 cDNA 或 DNA 片段化。优化过程需参考部分片段样本的电泳情况。这些片段会被修复并连到更短的通用 DNA 片段或适配体上。适配体序列适用于测序平台，可在多重测序中识别。在一次运行中，可以同时测序大量带有适配序列的 DNA 片段，也称为测序库。\n接下来，通过凝胶电泳或磁珠选择合适大小的片段，以优化测序性能。然后使用 PCR 扩增文库。在涉及乳化 PCR 的技术中，每个片段都与一颗乳化珠结合，为测序簇打下基础。扩增后进行清理步骤，去掉不必要的片段，提高测序效率。\n最后，用 qPCR 检查文库以确认 DNA 质量和数量，确保测序样品合适。在加载到测序仪前，或在测序仪上进行文库片段的克隆扩增，具体取决于所选的平台和化学方法。最后根据所选择的平台对序列进行检测和报告。\n优点：\n高通量：二代测序技术能够在短时间内生成超过各种分析的大量序列 较低的成本：由于大规模并行处理，二代测序技术的成本远低于第一代技术 应用广泛：二代测序的应用广泛，包括 SNP 检测、变异检测、表观基因组学、转录组表达分析等 数据丰富：能够提供关于每个读取深度和质量的信息，它对揭示复杂基因组以及发现稀有/新的转录事件至关重要 缺点：\n阅读长度限制：尽管随着技术的进步，阅读长度已经增加，但仍然比第一代测序短 偏差和错误：所有的测序技术都是有偏的，会在特定的序列上产生错误 数据处理：二代测序生成的数据量大，需要大量的计算资源和专业的生物信息学技能进行处理 长显性遗传无法测定：由于读取长度的限制，对于大片段的插入、缺失或结构重排的检测存在困难 第三代测序技术 第三代测序技术是指单分子测序技术。DNA 测序时，不需要经过 PCR 扩增，实现了对每一条 DNA 分子的单独测序。第三代测序技术也叫从头测序技术，即单分子实时 DNA 测序。\n第三代测序技术原理主要分为两大技术阵营：\n单分子荧光测序\n代表性的技术为美国螺旋生物 (Helicos) 的 SMS 技术和美国太平洋生物 (Pacific Bioscience) 的 SMRT 技术。脱氧核苷酸用荧光标记，显微镜可以实时记录荧光的强度变化。当荧光标记的脱氧核苷酸被掺入 DNA 链的时候，它的荧光就同时能在 DNA 链上探测到。当它与 DNA 链形成化学键的时候，它的荧光基团就被 DNA 聚合酶切除，荧光消失。这种荧光标记的脱氧核苷酸不会影响 DNA 聚合酶的活性，并且在荧光被切除之后，合成的 DNA 链和天然的 DNA 链完全一样。\n纳米孔测序\n代表性的公司为英国牛津纳米孔公司。新型纳米孔测序法（nanopore sequencing）是采用电泳技术，借助电泳驱动单个分子逐一通过纳米孔 来实现测序的。由于纳米孔的直径非常细小，仅允许单个核酸聚合物通过，而 ATCG 单个碱基的带电性质不一样，通过电信号的差异就能检测出通过的碱基类别，从而实现测序。\n优点：\n它实现了 DNA 聚合酶内在自身的反应速度，一秒可以测 10 个碱基，测序速度是化学法测序的 2 万倍 它实现了 DNA 聚合酶内在自身的延续性，一个反应就可以测非常长的序列。二代测序可以测到上百个碱基，但是三代测序就可以测几千个碱基 精度高，达到 99.9999% 直接测 RNA 的序列，既然 DNA 聚合酶能够实时观测，那么以 RNA 为模板复制 DNA 的逆转录酶也同样可以，RNA 的直接测序，将大大降低体外逆转录产生的系统误差 直接测甲基化的 DNA 序列。实际上 DNA 聚合酶复制 A、T、C、G 的速度是不一样的。正常的 C 或者甲基化的 C 为模板，DNA 聚合酶停顿的时间不同。根据这个不同的时间，可以判断模板的 C 是否甲基化 缺点：\n错误率高：相较于第二代测序，单个读取的准确度降低，错误率较高 成本问题：设备投入的成本高，每次测序的费用也相对较高 数据分析困难：由于测序后得到的读段长、分布广泛，使得数据分析处理难度增加 测序深度问题：相对于其他类型的测序技术，第三代测序技术实现同样深度的覆盖需要更高的成本 测序技术与 RNA-seq RNA-Seq 是一种高通量测序技术，它利用测序技术对组织或细胞中的 RNA 反转录成 cDNA 文库进行测序。这种技术可以测量不同 RNA 的表达量，发现新的转录本，并通过将转录本映射回基因组来确定转录本的位置，了解剪切情况等遗传信息。RNA-Seq 在生物学研究、医学研究、临床研究和药物研发等领域得到了广泛应用。\nRNA-seq 不仅可以用于识别新的转录本、检测剪接位点的变异和新的剪接事件、分析基因的表达差异等，同时也可以与其他生物信息学分析技术（如功能预测、文献挖掘等）结合使用，以发现新的生物学规律和潜在的疾病标志物。\n在选择测序技术时，二代测序（如 Illumina 公司的测序平台）因其高通量和低价，常被选为研究转录本的测序技术。而三代测序（如 PacBio 和 Oxford Nanopore 等平台）因其更长的读取长度，可以直接获取完整的转录本信息，尤其适合发现新的转录本，对于研究长的非编码 RNA 和复杂剪接事件具有巨大优势，可以通过对 RNA 样本进行深度测序，可以全面了解基因在转录水平上的表达情况。\n参考资料 第一、第二、第三代测序原理 桑格法测序——第一代测序技术 一代、二代、三代测序技术原理与比较 基因测序技术发展历史及一、二、三代测序技术原理和应用 百度百科 - 基因簇 百度百科- cDNA 可逆终止子 – Illumina 统治 NGS 行业十数载的核心 技术 | 一文读懂二代测序 第二代测序原理的详细解析！ 百度百科 - 第三代测序技术 第三代测序技术（Nanopore Sequencing）简述 转录组测序技术的应用及发展综述 ","permalink":"https://yuanj.top/posts/ia87asdf52/","tags":["转录组学","生物信息学"],"title":"转录组学分析基础——测序技术"},{"categories":null,"contents":"整理一些学习 Python 过程中遇到的一些知识。\n标识符 标识符的命名规则：\n区分大小写 首字符可以是下划线和字母，但不能是数字 除首字符外的其他字符必须是下划线、字母和数字 关键字不能作为标识符 不要使用 Python 的内置函数作为标识符 关键字 False、def、if、raise、None、del、import、return、True、elif、in、try、and、else、is、lambda、with、as、except、while、assert、finally、nonlocal、yield、break、for、not、class、from、or、continue、global、pass\n位运算符 运算符 名称 例子 ~ 位反 ~x \u0026amp; 位与 x\u0026amp;y | 位或 x|y ^ 位异或 x^y \u0026raquo; 右移 x \u0026laquo; a x 右移 a 位，高位用符号补位 \u0026laquo; 左移 x \u0026laquo; a x 左移 a 位，低位用 0 补位 运算符优先级：算术运算符\u0026gt;位运算符\u0026gt;关系运算符\u0026gt;逻辑运算符\u0026gt;赋值运算符\n容器类型数据 字符串 切片 [start: end :step]\n切片包括 start 位置的元素但不包括 end 位置的元素 start 和 end 可以省略 切片从零开始 str.split(sep=None, maxsplit=1)\n使用 sep 子字符串切割 str 字符串 maxsplit 是最大分割次数，如被省略则表明不限分割次数 查找字符串\nstr.fing(sub[, start[, end]]) 在 start 和 end 之间查找子字符串 sub\nstr.find(\u0026lsquo;i\u0026rsquo;,4,6) 在 4，6 位置之间查找 i，4、6 可以省略\n列表 方法 用法 append(x) 末尾追加一个元素 extend(x) 末尾追加多个元素 insert(i,x) 在 i 位置插入元素 x list[1]=80 将列表 list 中的元素 1 替换为 80 remove(x) 删除元素 x 元组 元组不可更改\n方法 用法 tuple(item) 创建元组，item 可以是字符串、列表、元组、集合、字典等 / 直接使用 () 将元素括起来便可直接创建元组 / 使用变量分别对应元素内的每个元素便可拆包，元素被赋值给变量 集合 集合可迭代、无序、不能包含重复元素\n方法 用法 set(item) 创建集合，item 是可迭代对象字符串、列表、元素、集合、字典等 / 直接使用{}将元素括起来便可直接创建集合 add(x) 添加元素 remove(x) 删除元素 clear() 清除集合 字典 字典可迭代，通过键来访问元素\n方法 用法 dict(item) 创建字典 / {key1:value1,key2:value2,\u0026hellip;.}直接创建字典 items() 返回字典的所有键值对 keys() 返回字典的键 values() 返回字典的值 转义字符 字符表示 Unicode 编码 说明 \\t \\u0009 水平制表符 \\n \\u000a 换行 \\r \\u000d 回车 \u0026quot; \\u0022 双引号 ' \\u0027 单引号 \\\\ \\u005c 反斜线 format 格式化 占位符 eg：\na = 1 b = 2 abc = \u0026#39;{}{}\u0026#39;.format(a,b) # abc=12 print(abc) {}为占位符\n控制符 控制符 说明 s 字符串 d 十进制整数 f、F 十进制浮点数 g、G 十进制整数或浮点数 e、E 科学计数法表示浮点数 o 八进制整数 x、X 十六进制整数，x 为小写表示，X 为大写表示 使用方法\na = int(1) b = int(2) abc = \u0026#39;{:g}{}\u0026#39;.format(a,b) # abc=12 print(abc) 异常处理 # 异常捕获与资源释放 i = input(\u0026#39;请输入数字\u0026#39;) n = 8888 try: result = n / int(i) print(result) print(\u0026#39;{0}除以{1}等于{2}\u0026#39;.format(n, i, result)) except ZeroDivisionError as e: print(\u0026#34;不能处理 0，异常：{}\u0026#34;.format(e)) except ValueError as e: print(\u0026#34;输入的数字是无效数字，异常：{}\u0026#34;.format(e)) finally: print(\u0026#34;资源释放。..\u0026#34;) # try-except 语句嵌套 i = input(\u0026#39;请输入数字\u0026#39;) n = 8888 try: i2 = int(i) try: result = n / i2 print(\u0026#39;{0}除以{1}等于{2}\u0026#39;.format(n, i2, result)) except ZeroDivisionError as e1: print(\u0026#34;不能处理 0，异常：{}\u0026#34;.format(e1)) except ValueError as e2: print(\u0026#34;输入的数字是无效数字，异常：{}\u0026#34;.format(e2)) finally: print(\u0026#34;资源释放。..\u0026#34;) # 手动触发异常 class ChufaException(Exception): def __init__(self, message): super().__init__(message) # 异常捕获与资源释放 i = input(\u0026#39;请输入数字\u0026#39;) n = 8888 try: result = n / int(i) print(result) print(\u0026#39;{0}除以{1}等于{2}\u0026#39;.format(n, i, result)) except ZeroDivisionError as e: raise ChufaException(\u0026#39;不能除以 0\u0026#39;) except ValueError as e: raise ChufaException(\u0026#39;输入的是无效数字\u0026#39;) finally: print(\u0026#34;资源释放。..\u0026#34;) 数学计算模块 # 数学计算模块 import math print(math.ceil(10.332)) # 返回大于或等于 x 的最小整数 print(math.floor(21.4654)) # 返回小于或等于 x 的最小整数 print(math.sqrt(4)) # 返回平方根 print(pow(10, 3)) # 返回 10 的三次方 print(math.log(10, 3)) # 求对数 print(math.sin(30)) # 返回弧度的三角正弦 print(math.degrees(120)) # 将弧度转换为角度 print(math.radians(30)) # 将角度转换为弧度 ","permalink":"https://yuanj.top/posts/pyd23ds/","tags":["Python"],"title":"一些 Python 基础知识"},{"categories":null,"contents":"计划一下大三第一学期需要做的事，尽可能完成吧~\n六级证书 至少参与 4 篇文章 至少读 5 本书（当然，教科书除外） 计算机二级证书 导游证 能用 R 熟练地绘制目前自己做生信需要的图 Python 基本操作达到熟练 三创国奖 不挂科！ 至于能够完成多少，期末再看~\n","permalink":"https://yuanj.top/posts/sd23iw/","tags":["随笔"],"title":"立下大三第一学期的 flag"},{"categories":null,"contents":"暑假快结束的时候去了一趟西安，第一次去，拍了一些照片，也看到了一些不一样的东西，在这里也见到了很久未见的老朋友，记录一下旅途。\n到达 经过一天的路程，最终到了西安，奈何运气不好，西安今日下雨（或者说是准备不充分没有提取看天气预报）。不过还是与一位许久未见的朋友见面了，此人在陕西考古研究院实习，据说领导挺不错。\n入住酒店后，与朋友聊了许多，多半是讲述最近大家的近况，不禁感叹时间过得真快，有人在考公务员，有人在实习，有人已经凭借一己之力买下了一台二手车，貌似只有我还在浑浑噩噩地读书，心里暗自决心这一年一定要更加努力。\n午饭吃了一碗驴蹄子面，味道还不错（刚开始找不到卫生间，跑了好远，但后来发现隔壁商城二楼就有。），感觉与敦煌的面差别不是很大，在四川很少能吃到地道的手工面，学校食堂的刀削面是一家天水人开的，但感觉还是加入了不少四川风味。\n饭后逛了逛就回酒店与朋友一起打游戏，不得不说，一个人时一个月都不打开一次的游戏，跟朋友一起玩多了太多快乐。\n雪花啤酒公园 由于下午我睡过头了。去兵马俑的计划只能放到第二天。\n晚饭在雪花啤酒公园吃烧烤喝啤酒，由于酒店在经济开发区，位置比较偏所以只能就近解决，没想到酒店旁边的啤酒公园看上去像是啤酒专场，实则内里有乾坤，烧烤和炒菜都不错。\n借着啤酒的劲也与朋友聊了很多，继续感叹时光飞逝，感觉前不久还在敦煌一起吹牛皮，现在就已经天各一方，啤酒好似也不禁喝，很快就没有了。\n下过雨的西安很清爽，当然，也与现在是秋季有关。宜宾的天气实在恼火，每年八月底返校时，仍然高温，去校门口拿个外卖回来衣服后背就已经被汗浸湿了。\n这个时候正是敦煌葡萄成熟的时候，昼夜温差大，葡萄能够积累更多糖类，白天强烈的紫外线使葡萄的表面覆盖上一层薄膜，让葡萄看起来黄灿灿的，使人胃口大增。再过不久就要收获了，这个时候农民最怕的就是雨天，一旦下雨就会有很多葡萄坏掉，通常不是全部坏，而是一两颗果粒坏了，如果不即时清理，其他的也会逐渐坏掉，但有的时候那几粒坏掉的葡萄在内部，这样的葡萄只能整串剪下来扔掉，如果去剪那些坏掉的，其他的多多少少会沾上一点汁水，导致其他的也就坏掉了，唉，农民靠天吃饭，老天爷不给力谁也没法。据说前几天下过雨后有些果农看到大量坏掉的葡萄，只能坐在地上痛哭\u0026hellip;\n秦岭野生动物园 今天睡得比较晚，一位朋友被辅导员叫去上课了😂只能我们剩下两个人一起玩。兵马俑没有票了，就改变计划去动物园。\n秦岭野生动物园其他都挺好，就是路实在远（半小时地铁+一个半小时公交），从城北跑到城南了，差点没赶上。匆匆忙忙逛了一下，这个动物园也并不是很大，差不多两个小时就看的差不多了。\n看到了很多以前没有看到过的动物，对于一些丹顶鹤、天鹅、猴子、小熊猫、大熊猫、鹦鹉、羊驼、梅花鹿之类的看过之后其实并无太大的感觉，最让人印象深刻的是一些两栖类动物\u0026hellip;\n我平生最怕这种蜥蜴、蛇之类的，看着就膈应人😂\n缅甸蛇，原来不仅缅北恐怖，缅甸蛇也让人害怕\u0026hellip;\n记得小时候看过书上和电视上说犀牛很稀有，很灭绝的差不多了，但看到地图上说这里居然有犀牛，跑去结果没出来，不知道是休假了还是咋地了。\n黑豹感觉挺帅，只是\u0026hellip; 原本我以为黑豹是纯黑，结果是毛发黑色，还有一些更黑的斑点。\n不知道是哪个游客没有公德心，丢进去个瓶子让堂堂美洲狮啃着玩，也不怕它一口吞下去消化不了🤔\n小狐狸还是蛮可爱的，难怪有狐狸精这个词\u0026hellip;\n钟楼 回去的路上，地铁正好经过钟楼，就下去看了看，奈何实在走不动了，就没逛多久。\n关于钟楼，有一段小故事，我直接引用查到的文章上的\n朱元璋建立明朝，定都南京，西安城不再是帝都的所在地，更多的是作为军事藩镇起着防御作用。当时朝中有大臣认为西安在政治、军事上的地位非常重要，就上奏皇帝建议迁都。\n其实，明太祖早有迁都关中的打算。早在 1370 年，监察御史胡子祺已有陈奏，告诉朱元璋西安与洛阳相比在地理位置上的优势更佳。这一建议当时就得到明太祖的赞许。虽然后因时事多艰，这一建议被搁置起来，但这事却一直萦绕于太祖心怀。没过多久，朱元璋派太子朱标“巡视关中”，并告诉他，“天下山川，惟秦中号为险固，向命汝弟（太子二弟、朱元璋第二子秦王朱樉）分封其地，已十余年，汝可一游，以省观风俗，慰劳秦民。”于是，太子朱标就奉旨来西安实地考察。西安的风土人情和自然风貌深深地吸引了朱标。同年十月，朱标返回南京向太祖复命，进献了自己带人绘制的《陕西地图》，还详细介绍了西安各方面的优势，大力推荐迁都西安。迁都的事情得到朱元璋的肯定，朝廷便开始紧锣密鼓地张罗迁都的事，西安钟鼓楼也进入了设计施工阶段。没想到天有不测风云，没过多久太子就一病不起，第二年春天就病逝了。作为一位遭受晚年丧子之痛的父亲，太祖皇帝悲痛不已，为之罢朝。更令人痛心的是，太子朱标在弥留之际还向朱元璋上书建言“筹划建都西安的事情”。然而西安却成为太祖皇帝的伤心地，建都西安这一原本可行的方案就此被永远束之高阁，搁置到尘封的史册之中了。而按照皇家建筑标准修建的西安钟鼓楼已经落成了。\n我特别喜欢这种历史建筑，想起看过的史书上的一些场景描述，就不由自主地将一些人物放进这些建筑。我好像看到了朱元璋在那栋高楼上宣布大明帝国的建立，楼下是那些名臣名将，李善长、刘基、汤和、蓝玉\u0026hellip;（记得没错的话，徐达和常遇春外出打仗去了）他们誓要忠于朱元璋，忠于明帝国；又好像看到了于谦走出了那扇门，背负起保卫北京的使命；还看到崇祯看着眼前的锦绣江山，不甘地自尽\u0026hellip;\n人生一世，哪怕再光辉的过去、再伟大的人、再庞大的帝国终究只是历史上的一段文字、一个篇章，我们短短看过的一本书，便是一个王朝的建立、衰败。江山如此多娇，引无数英雄尽折腰！被人们永远记住的，才是不朽英魂\u0026hellip;\n除了西安市中心的那个地标性的钟楼外，旁边还有一个\n楼上的牌匾有四个大字“声闻于外”，关于这四个字，还有一个故事。\n传说女皇武则天亲自题写了这四个字。这四个字取自《诗经》中的名句“鹤鸣九皋，声闻于天”。当时，狄仁杰在武则天赐酒后想出了这个主意，于是大臣们请求武则天亲自写下“声闻於天”四个字。当时有些微醺的武则天在“於”字上少写了一点，但没有人注意到。这块匾额随后便被挂了起来。一天，女皇路过宫门附近的鼓楼，抬头看见匾额上的“於”字上少了一点，便询问身边的大臣原因。身边的大臣面面相觑，谁也不敢开口。武则天于是命人取来笔墨，蘸上墨，用一支箭射到匾额上，恰好射中了原来少的那一点，补全了“於”字，众臣欢呼雀跃。\n但现在挂于鼓楼北面的匾额为“声闻于天”，而非“声闻於天”。这是怎么回事呢？\n解放前有一个传闻：“武则天是女性，女性怎么能够执政呢？‘声闻於天’是武则天写的，这听起来不太好，于是在清朝重修鼓楼时，将其改为‘声闻于天’，不再使用原匾额中的‘於’字。”另外有人说，这块匾额是乾隆皇帝所书，而更多的说法是清代陕西巡抚张楷模仿乾隆的书法所刻。\n当然，这些都只是传说故事，可以听听就好。这块匾额后来历经明、清、民国时期，一直完好无损，直到抗战时期。遗憾的是，在“文革”时期，疯狂的红卫兵将其砸坏并焚烧了。2005 年，西安钟鼓楼保管所对鼓楼上的巨型匾额进行了仿制复原，才让我们再次看到了它们过去的辉煌。\n旁边的回民街也是人潮拥挤\n感受 去过几个大城市，我感觉实际上这些城市看上去差别已经不怎么大了，仅在一些特殊的地方（如景点）有差别，成都主要是自然风光好、娱乐活动多；西安历史遗迹众多；兰州少数民族特色美食多，等等。还有一个比较明显的区别就是在老城区上，成都、宜宾这些城市潮湿雨多，比较久的房子上会有霉斑，而敦煌、嘉峪关这些西北城市比较干旱，多戈壁滩和沙漠，刮风的时候老是会有很多扬沙，房屋上的尘土比较多。而城市里的美食\u0026hellip; 实话说到处可见兰州拉面、成都火锅、西安肉夹馍、湖南湘菜\u0026hellip;\n希望城市化迅速发展的同时，城市的特色不要被抹杀。\n离开 明天就要去成都了，简单来说此次西安行还不错，不过旅游是真的累🤣，才去了没几个地方就累了。明天下午约了黄老师吃饭，所以就先去成都咯~\n","permalink":"https://yuanj.top/posts/uaf9a23/","tags":["随笔"],"title":"西安行"},{"categories":null,"contents":"记录我入坑生信的经历。\n参加竞赛 2022 年的 12 月，由于疫情原因，甘肃的学生一直没有返校 \u0026hellip; 包括我，快到期末的时候终于能够返校了，考虑到要考四级，还有很多学科考试，我就毅然决然地踏上了返校路程，然而返校后隔离八天 \u0026hellip;\n隔离期间，我正好看到黄进老师在之前他建的一个群里发通知，说是他的课题组在组织参加生命科学竞赛，我也就去参加了，另外他也号召宜宾校区（成理有两个校区，我是宜宾校区的，黄老师课题组在成都校区）的参加他的课题组，我也参加了。其实主要还是想参加生命科学竞赛，丰富简历，奈何我没有被选上，只能暂时留在课题组。\n黄老师要求课题组人员每天都要在企业微信写汇报，包括昨天所做的事、今天所做的事及自己的感想，我每天写完之后都会去看一看其他人写的什么，有一天我发现有些原本没有参加生命科学竞赛的人后来参加了，于是乎，我就去问了吴龙英师姐，她说可能是那些人找黄老师说想要参加了，她说她所带的队伍正好差一个人，我就去跟黄老师说了，黄老师同意我参加，于是让吴龙英师姐跟我讲了一下项目的大概情况，并且让我考虑好是否要参加。其实当时也没多想，想着反正有时间，不如做点事，于是我就参加了。\n开始做生信 我们队的项目是关于水稻 OsSGL2 基因的，项目的实验流程中，第一部分就是生信分析，当时由于我在宜宾校区无法参加线下实验，于是吴龙英师姐便让我负责生信部分，做完之后，黄老师和师姐对我所做的结果评价还不错，于是又让我做了更多的分析。当时课题组是研究生轮转带本科生，跟吴龙英师姐做了两周后我又轮转到姜南师兄组，也是做生信分析，越做越上头 \u0026hellip; 在姜南师兄组做了两个礼拜后，黄老师和师兄对我那两周所做的结果也是评价不错，于是乎，后面就一直做生信分析。\n在这期间，我也对生信分析表现出了极大的兴趣，我以前不知道，在一串序列的背后能够发掘出那么多信息 \u0026hellip;\n贴几张我做的图片~\n开始写博客 当我掌握了一些基础的分析之后，黄老师和吴龙英师姐希望我也可以教其他人做一些基础的分析，于是乎，便有了如今的博客。\n基因家族鉴定那篇原本是黄老师安排我和杜志烨师兄一起写的，当时 \u0026hellip; 有一天放假睡不着，我就起来写，写到凌晨五点居然写完了，经过师兄和老师的几番修改，就有了如今的教程，我还会不断地更新，以期达到更好的效果，帮助更多的同学入生信。我本身其实是环境科学与工程专业的，入生信可以说是零基础，所以入门的一些坑我很清楚，所以写的比较通俗易懂，也收到了一些同学的好评。关于一些很复杂或者难懂的步骤，我录了一些视频，在哔哩哔哩，也收到一些好评。\n新博客的底部留了联系方式，需要的同学可以联系我，欢迎反馈意见、问题、建议，也欢迎与我讨论生信相关的问题（😏其他方面问题也可以，哈哈）。\n收获 黄老师在这一路帮了我许多，应该算是我的贵人吧😂\n我认为我的收获不仅仅是比赛获了奖，有了论文挂名，或是会了一些分析，我更大的收获在于发现了这门我愿投入心血去做的学科，发挥我的能力，帮助更多的同学。希望以后可以做得更好！给自己加个油！\n","permalink":"https://yuanj.top/posts/iwe898wf/","tags":["随笔"],"title":"记录我入坑生信的经历"},{"categories":null,"contents":"今天又回南湖了，感觉每次回来的感觉都不太一样，每次回来的时候心里都有一些小紧张😂\n暑假快结束了 大二下学期的这个暑假感觉过的非常快，是我过的最快的一个暑假，与朋友商量好 26 号启程，于是乎，抓紧最后的两天时间回乡下与爸妈待一会。\n总结了这个暑假，感觉并没有做很多事，更多的都是在混日子，主要做了的事情有：\n搭建了新的博客，之前使用的是 hexo，感觉太花里胡哨，丢失了我写博客的本意，而且也需要花很多时间去维护。最后折腾几天，使用了 hugo 框架及 LoveIt 主题搭建了如今的博客 为课题组搭建了主页，还是用 hugo，水平实在有限\u0026hellip; 赚了小点点钱，先是在敦煌的鸣沙山景区搭帐篷做工，后来到我哥朋友的饭店门口摆摊卖水果，最后是在天河大酒店做客房服务员 写了 auto-hmmer 的项目，在大佬看来可能很垃圾，但对于我自己确实是方便了很多 与朋友小聚几次，喝了几次酒\u0026hellip; 写了一些公众号推文与博客文章 完成了许淑霞老师的书籍撰写任务 又结识了几位朋友 感受 南湖其实是旧称，现在叫阳关镇，是一个距离敦煌市区 70 多公里的小镇\n这里的一草一木我都很熟悉，但年龄越大感觉越陌生。我从小一直在这里，直到上高中才去市区，还记得我高二那一次分手非常伤心，第二天就回来了，感觉这里的人和这里的事物总能抚慰我的心，这片土地像是我复杂心灵中的一块世外桃源，在这里我不需要在意很多，因为最重要的人还在我身边。\n我早就下定决心，以后一定会带着最爱的人来这里，跟她讲述我的故事，我在这里的经历，带她去见小学门口的大叔，带她去看小时候奔走的草地。\n但愿这里的一切能够慢一些被改变\n离去 明天又要回市区了，买了后天的票，打算去西安耍\n26 号出发，晚上到兰州 27 号中午到西安，打算去看看西安那些我考不上的高校😏，再感受感受西安的风土人情~ 预计 29/30 号出发去成都，与课题组的老师和师兄师姐吃个饭（如果他们有时间的话） 31 号差不多回学校 ","permalink":"https://yuanj.top/posts/gif8gf/","tags":["随笔"],"title":"近乡情更怯"},{"categories":null,"contents":"使用 TBtools 的 Fasta Stats 和 Sequence Manipulate 工具帮助我们迅速地统计信息及序列操作，简单介绍一下操作。\nFasta Stats 该工具可获取 Fasta 序列的以下信息：\nTotal_Len（序列总长） Total_Seq_Num（染色体数） Total_N _Counts（未测通的碱基数） Total_LowCase_Counts（重复序列的标志） Total_GC_content（GC 含量） Minimum Len（最小序列长度） Maximum Len（最大序列长度） Mean Len（平均序列长度） Median Len（序列中位数长度） N50 打开工具，输入序列并设置输出目录即可查看信息\n输出目录下会有一个 excel 文件，显示序列长度与描述\nSequence Manipulate 该工具可以对序列进行以下操作（可勾选多个组合使用）：\nReverse（反向） Complement（互补） RNA（序列对应的 RNA 序列） UpperCase（大写） LowerCase（小写） Only IDs（只显示序列 ID） Only Seqs（只显示序列信息） Seq in one Line（序列显示在一行） Bases per Line（每一行的碱基数，设置需要取消勾选 [Seq in one Line]） 直接粘贴序列，选择操作选项即可\n","permalink":"https://yuanj.top/posts/76asdja/","tags":["生物信息学","TBtools"],"title":"TBtools 序列信息统计及序列操作"},{"categories":null,"contents":"一般情况下，植物基因组 DNA 序列及注释文件可以在 ensembl 网站直接下载到，但蛋白质序列貌似不是很好下载，各处下载的序列文件格式、ID 等都有很大的不同，NCBI 上的也比较杂乱，所以还是自己翻译为好，这里依旧使用 TBtools。\n数据下载 其实在 ensembl 网站 可以下载到 DNA 序列、蛋白质序列及注释文件，但蛋白质序列的 ID 格式比较乱\n我比较喜欢由 ID 直接对应序列的\n先从 ensembl 网站 下载 DNA 序列及注释文件\n打开 ensembl 网站 后，直接在首页的物种列表里选择物种，我们课题组主要做水稻，我就以水稻为例\n点击物种详情页的 Download DNA sequence 就会跳转到 DNA 序列的 ftp 页面\n以 dna.toplevel 结尾的就是基因组的全部 DNA 序列，其他的是各条染色体上的基因的 DNA 序列\n回到详情页，点击 Gene annotation 下的 GFF3 下载注释文件\n下载整个基因组的注释文件，而不是各条染色体的\n再回到详情页，点击 Gene annotation 下的 FASTA\n跳转到 ftp 页面之后我们可以看到这里有 DNA、ncrna、cDNA、CDS 及蛋白质（pep）\n打开 pep 文件夹下载所有蛋白质序列\n但这个蛋白质序列的 ID 很长，所以我们自己制备蛋白质序列\n蛋白质序列制备 打开 TBtools 的 GTF Sequences Extract 工具，导入注释文件和 DNA 序列\n点击 Initalize 进行初始化，然后会弹出一个弹窗，关掉即可，Feature Tag 选择 CDS，Feature ID 选择 Parent，设置好输出文件后开始\n这里我们是为了提取 CDS 序列，为什么不直接下载呢？还是 ID 的原因。.. 下图可以自己看看\n顺便解释一下这里选择标签的理由\n初始化之后弹出的弹窗，事实上用户辅助用户选择 Feature Tag 和 Feature ID\nFeature Tag，一般是 CDS, Exon, mRNA, Transcript, Gene 等，用户往往已经知道自己要提取什么，不需要辅助\nFeature ID，以 CDS 和 mRNA 为例，我们很清楚，真核生物中，大多数基因均是断裂基因，即 Exon-Intron-Exon\u0026hellip; CDS 即 Exon 的部分，所以 CDS 本身在基因序列的尺度上，也是被 Intron 所分隔，当我们需要提取 CDS 的时候，往往我们说的并不是提取 一截 CDS，而是把某个转录本对应的几截甚至几十截 CDS 按照正确的顺序和方向连接起来之后的真实的 CDS 全长\nGFF3 注释文件中，同一个转录本拥有几截 CDS，这些 CDS 可以以 Parent 这个 Feature ID 来归组，并组合成的 CDS 全长，事实上，这个文件比较简单，因为 CDS 并没有更多的 Feature ID 可以选择，在其他物种中，常常会出现各种各种的 Feature ID，比如直接是 ID=\n可以看到图片中还有 mRNA，在这个注释文件中，每一个 mRNA 基友 ID= 也有 Parent=，前者事实上是这个 mRNA 独有的标签，后者则记录了这个 mRNA 属于是哪一个基因的转录本之一，此时，如果是要提取这个 mRNA 的序列【包括 Exon 和 Intron】，那么设置 Feature ID 为 ID 则是正确的，如果选择 Feature ID 为 Parent，则只会得到不理想的结果，一个基因多个转录本会有完全相同的 Parent 便签，这些转录本会按顺序串联起来，这并不没有生物学意义\n等待一会提取完成后，我们先对提取的 CDS 序列文件进行一些处理\n可以看到其实序列对应的 ID 已经很简单了，但是还是有些不需要的，比如 transcript: 和后面的+ - ，使用 Notepad++或记事本之类的编辑器，全部替换为空\n现在就是最后一步了，使用 TBtools 的 Batch Translate CDS to Protein 工具把 CDS 翻译成蛋白质序列\n","permalink":"https://yuanj.top/posts/ka87as/","tags":["生物信息学","TBtools"],"title":"植物基因组蛋白质序列的制备"},{"categories":null,"contents":"在做生信分析的时候，很多情况下都会用到 Linux 环境，而大多数人的电脑都是 Windows 环境，目前 Windows 下使用 Linux 最主流的两种方法就是服务器和虚拟机，但服务器的价格比较高，并且在文件传输等方面不太方便；虚拟机对电脑的要求比较高，并且占用也很大、启动时间长且配置较为麻烦，现如今，在 Windows 上已经有 WSL 了，使用它做生信分析极大地提高了效率，避免了很多问题。\nWSL 的优点 安装、配置方便，Windows10/11 原生集成，可迅速安装配置 启动速度快，配合 VScode 可迅速进入工作状态 占用低，可以通过 .wslconfig 来限制占用的硬件资源 文件传输方便，可以直接打开 Windows 下的文件 WSL2 已支持图形界面 与 Windows 系统互相独立互不干扰 可以备份恢复，便于迁移 WSL 的缺点 由于 WSL2 与 Windows 通过网络协议互相访问，导致直接访问 Windows 系统下的文件时速度会下降 Windows 自带的 openssh 版本低，导致 VScode 会与 WSL 断开连接 WSL 下使用 Windows 代理时需要配置 默认安装在 C 盘，但可以自行下载安装包解压后安装在其他盘 WSL 的安装 参考我的文章 Windows10 \u0026amp; 11 安装 WSL2\nWSL 的配置 此处默认以 Debian 系为例，我使用的是 Debian11\n换源 直接参考各大开源软件镜像站的文档即可，推荐中科大的，一行命令即可换源\nUSTC Mirror Help\n清华开源软件镜像站使用帮助\n阿里巴巴开源镜像站\n常用软件的安装 下载器\nsudo apt-get install wget curl Git\nsudo apt-get install git conda\n参考文章 Linux 下安装 conda\noh-my-zsh\n更加美观、便捷的终端，使用清华镜像安装（需要先安装 Git）\ngit clone https://mirrors.tuna.tsinghua.edu.cn/git/ohmyzsh.git cd ohmyzsh/tools REMOTE=https://mirrors.tuna.tsinghua.edu.cn/git/ohmyzsh.git sh install.sh Nodejs\nDebian 系发行版自带的 Nodjes 版本较低，使用 NodeSource 维护的 PPA 安装指定版本的 Nodejs（需要先安装 curl），修改版本号即可\ncurl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - sudo apt-get update sudo apt-get install nodejs Neofetch\n系统信息查看工具\nsudo apt-get install neofetch 输入 neofetch 即可查看系统版本、CPU、内存等信息\n其他\nLinux 下安装 BUSCO\n连接 VScode 安装最新版的 Vscode，然后在 VScode 的插件商店搜索并安装名为 WSL 的插件\n插件安装完成后在 WSL2 的终端中输入code .，等待下载相关文件后 VScode 便会自动打开，后面直接打开 VScode 就会自动启动 WSL2\n使用 Git 的 openssh 由于 Windows 自带的 openssh 版本较低，可能会导致 WSL 与 VScode 断开连接，所以我们使用最新版 Git 的 openssh\n先使用 淘宝镜像 下载安装最新版的 Git\n在 Windows 系统的开始菜单搜索编辑系统环境变量，以此点击环境变量——系统环境变量里的Path——编辑——新建\n将 Git 路径下的usr\\bin添加进去，例如我的 Git 安装在默认路径，这里就写C:\\Program Files\\Git\\usr\\bin\n然后点击上移，将刚刚添加的 Git 的路径移动到%SYSTEMROOT%\\System32\\OpenSSH\\之上，代表优先使用 Git 的 openssh\n最后打开 powershell 或 cmd，输入下列命令关闭 WSL2，再次启动 WSL2 即可\nwsl --shutdown 限制 WSL2 的内存 进入 wsl，输入下列命令建立 .wslconfig 文件\nvi \u0026#34;$(wslpath \u0026#34;C:\\Users\\YourUsername\\.wslconfig\u0026#34;)\u0026#34; 把 yourUsername 换成自己的 Windows 用户名\n然后输入下列内容\n[wsl2] memory=1GB processors=1 swap=1GB 这些内容分别指定了 WSL2 实例的最大内存为 1GB、占用核心为 1 核心和交换分区为 1GB\n保存后打开 power shell，输入 wsl \u0026ndash;shutdown 关闭 wsl，再重新进入即可\n扩展使用 在指定目录打开终端 默认情况下，VScode 中终端会在用户根目录下打开，即~目录，但~下有很多软件和系统的配置文件等，会影响我们的视野，我采用的方法是在根目录下建立一个work目录，然后 cd 到该目录，再输入code .打开 VScode，这样每次打开终端都会再work目录下打开，将所需要的文件放进去，会方便很多\n在 Windows 下查看 Linux 下文件 在终端中输入\nexplorer.exe . 就会在当前目录打开 Windows 的文件资源管理器，但很多文件无法在 Windows 下直接编辑，没有权限，建议还是使用 VScode 编辑文件\nWSL 直接访问 Windows 下的文件 Windows 下的各个盘全部默认挂载在 WSL/目录下的/mnt目录中，例如 C 盘的路径为/mnt/c，这样我们就可以直接在 WSL 中访问 Windows 下的文件，但需要注意的是，WSL 为 Linux 系统，与 Windows 系统的文件系统不同，例如 Linux 下的文件及文件夹名称大小写不同，不能包含空格，所以这里使用的时候需要注意\ngit clone 后没有权限 输入下列命令将克隆的文件与文件夹的所有者改为指定用户\nsudo chown -R username ~/work/xxxx WSL 的备份与导入 导出 WSL\nwsl --export \u0026lt;Distribution Name\u0026gt; \u0026lt;FileName\u0026gt; 导入 WSL\nwsl --import \u0026lt;Distribution Name\u0026gt; \u0026lt;InstallLocation\u0026gt; \u0026lt;FileName\u0026gt; 将指定 tar 文件导入和导出为新的发行版 选项包括：\n\u0026ndash;vhd：指定导入/导出发行版应为 .vhdx 文件，而不是 tar 文件 \u0026ndash;version：（仅导入）指定将发行版导入为 WSL 1 还是 WSL 2 发行版\nWSL 的卸载 wsl --unregister \u0026lt;DistributionName\u0026gt; 参考资料 使用 WSL 在 Windows 上安装 Linux\nWSL 的基本命令\n","permalink":"https://yuanj.top/posts/jdksf7d9/","tags":["WSL","生物信息学"],"title":"WSL 搭建生信分析环境"},{"categories":null,"contents":"基因功能注释质量好坏取决于数据库质量高低，是否全面。于是，本地化进行基因功能注释，需要收集尽可能多的数据库（这个其实很不实际），也需要有较好的计算资源。通过使用网页服务工具，可以克服这个问题。我们可以一直使用最新最全的数据库，同时不需要消耗本地计算资源。\neggNOG-mapper 大名鼎鼎，是一款非常全面，高效，准确，且一直在更新的软件，对应的，该团队提供了网页接口，任何人可以提交蛋白序列文件，在极短的时间内（一般几分钟）完成基因功能注释，包括：具体功能描述信息、Gene Onotoloy 注释信息、KEGG 注释信息、PFAM 注释信息以及其他\u0026hellip;\neggNOG-mapper 注释 打开 eggNOG-mapper 主页 上传序列文件并输入邮箱，参数一般就使用默认即可，一般使用蛋白质序列\n随后就可以看到右键提示\n点击 Click to manage your job，启动工作\n任务完成后，点击 Access your job files here 查看文件\n只需要下载 out.emapper.annotations 这个文件\n可以用 Excel 打开文件查看信息\n结果很全面，只是还是不能满足我们的需求\neggNOG-mapper Helper 接下来我们便使用 TBtools 的 eggNOG-mapper Helper 插件来整理结果\n很快就能完成，完成后就可以查看整理好的信息\n输出文件中，大家可能最关注的有四个：\nout.emapper.annotations.description.txt，对应的功能文本描述 out.emapper.annotations.GO.txt，对应的是 GO 注释结果，可直接用于 TBtools GO 富集分析，当注释背景文件 out.emapper.annotations.KEGG_Knum.txt，对应的是 KEGG 注释结果，可直接用于 TBtools KEGG 富集分析，当背景注释文件 out.emapper.annotations.pfam.domain.txt，对应的是 PFAM 结构域注释，注意，这个注释结果是定性的，即有无某结构域，如果一个序列有多个相同结构域，只会显示一个 ","permalink":"https://yuanj.top/posts/sdh623d/","tags":["生物信息学","TBtools"],"title":"TBtools 快速完成基因功能注释"},{"categories":null,"contents":"官网说 BUSCO 直接可以用 conda 安装，但\u0026hellip; 我从来没有成功过，经过多次的实践，总结了能够成功安装 BUSCO 的方法\u0026hellip;\nBenchmarking Universal Single-Copy Orthologs (BUSCO) 是用于评估基因组组装和注释的完整性的工具 通过与已有单拷贝直系同源数据库的比较，得到有多少比例的数据库能够有比对，比例越高代表基因组完整度越好\n可以评估三种数据类型：\n组装的基因组 转录组 注释到的基因对应的氨基酸序列 使用需要评估的生物类别所属的数据库（从 busco 数据库下载）比对，得出比对上数据库的完整性比例的信息\nBUSCO 官网 BUSCO v5 数据库 BUSCO 官网上介绍说可以直接使用 conda 安装，但据我实践，是不可以的，需要手动安装诸多依赖\n安装 conda conda 的安装参考 Linux 下安装 conda\n安装所需依赖 先创建一个 Python3.7 或 3.6 的环境\nconda create -n busco python=3.7 激活刚刚创建的环境\nconda activate busco 升级环境内的 pip 并且换源\npython -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade pip pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple 安装所需依赖\npip install sepp conda install pandas conda install biopython==1.7 安装 BUSCO 我们需要使用刚刚创建的虚拟环境中的 Python 来编译安装 BUSCO，所以一定要先激活对应的环境\n下载 BUSCO 安装包\nwget https://gitlab.com/ezlab/busco/-/archive/5.4.5/busco-5.4.5.tar.gz 如果没有 wget，使用 curl 也可以，或者安装 wget\n编译安装 BUSCO\ncd busco-5.4.5 python setup.py install 至此便安装完成了，输入下列命令可以查看 BUSCO 的帮助信息，也可以验证 BUSCO 是否安装完成\nbusco -h 后面使用某些命令时可能会提示缺少模块，缺少哪个模块，搜索一下模块的包名，然后使用 conda 安装，如果 conda 不能按照，那就使用 pip 安装\nconda install package.name pip install package.name ","permalink":"https://yuanj.top/posts/24ed802/","tags":["Linux","生物信息学"],"title":"Linux 下安装 BUSCO"},{"categories":null,"contents":"最近将代码全部迁到极狐的 Gitlab 了，极狐与原生的 Gitlab 几乎一模一样，不过对国内开发者的支持更好，Cli/CD 也不需要验证信用卡可以直接使用。但 Vercel 默认可以直接导入的仓库只有 GitHub、原生 Gitlab、Bitbucket 和 Azure，本来我是通过镜像仓库把仓库同步发到 GitHub 再用 Vercle 部署的，今天看到 Vercel 的文档说可以使用 Cli/CD 将项目部署到 Vercel，尝试了一下。\n自动部署博客到 Vercel 先到 Vercel 的 token 设置 中创建一个 token，加在 Gitlab 仓库 Cli/CD 的环境变量里面，变量名为VERCEL_TOKEN\n然后在本地仓库创建.gitlab-ci.yml配置文件\n内容如下\ndefault: image: node:16.16.0 deploy_preview: stage: deploy except: - main script: - npm install --global vercel - vercel pull --yes --environment=preview --token=$VERCEL_TOKEN - vercel build --token=$VERCEL_TOKEN - vercel deploy --prebuilt --token=$VERCEL_TOKEN deploy_production: stage: deploy only: - main script: - npm install --global vercel - vercel pull --yes --environment=production --token=$VERCEL_TOKEN - vercel build --prod --token=$VERCEL_TOKEN - vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN 直接 push 到远程仓库，项目名称会由 Vercel 自动创建，默认与仓库名是一致的\n部署过程比较慢，大概三四分钟就可以在 Vercel 的控制台看到项目了\n自动发布 npm 包 先在本地登录、初始化、发布包\n然后再到 npm 官网创建一个 token，添加到 Cli/CD 的环境变量中\n本地创建.gitlab-ci.yml配置文件\n内容如下\nimage: node:latest stages: - deploy deploy: stage: deploy script: - echo \u0026#34;//registry.npmjs.org/:_authToken=\\${NPM_TOKEN}\u0026#34;\u0026gt;.npmrc - npm install - npm publish environment: production NPM_TOKEN要与环境变量里的变量名一致\n然后依次执行下列命令发布包\ngit add . git commit -m \u0026#34;npm publish\u0026#34; ## 提交信息，可自定义 npm version patch ## 更新版本号 git push 后面每次发布新版本的包也是上面的命令\n使用 Cloudflare Workers 部署站点 需要先克隆 仓库 中的文件，并且修改 wrangler.toml 中的信息\ndefault: image: ubuntu:latest CF_Workers_deploy: stage: deploy only: - main script: - sed -i \u0026#39;s@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g\u0026#39; /etc/apt/sources.list - apt-get update \u0026amp;\u0026amp; apt-get install -y hugo curl - curl -sL https://deb.nodesource.com/setup_18.x | bash - - apt-get update \u0026amp;\u0026amp; apt-get install -y nodejs build-essential - hugo - npm config set registry https://registry.npmmirror.com/ - npm install wrangler -g - npm install @cloudflare/kv-asset-handler - wrangler deploy variables: CLOUDFLARE_API_TOKEN: $CF_API_TOKEN CLOUDFLARE_ACCOUNT_ID: $CF_ACCOUNT_ID 需要绑定两个变量 CF_API_TOKEN 和 CF_ACCOUNT_ID\n参考文档 发布 npm 包 | Gitlab\nHow can I use GitLab Pipelines with Vercel?\n","permalink":"https://yuanj.top/posts/56d5b593/","tags":["Gitlab"],"title":"自托管 Gitlab and 极狐 Gitlab 自动化 CI/CD 实践"},{"categories":null,"contents":"Mega 默认导出的图片比较枯燥，并且展示的信息不够，本文讲述基因进化树的美化以及图片所展示的信息的一些处理。\n什么是进化树 系统发育进化树 (Phylogenetic tree)： 一般也叫系统进化树，进化树。它可以利用树状分支图形来表示各物种或基因间的亲缘关系。\n分支系统发育分析 (Molecular phylogenetic analysis)： 是用来研究物种或序列进化和系统分类的一种方法。一般研究对象是碱基序列或氨基酸序列，通过数理统计算法来计算生物间进化关系。最后，根据计算结果，可视化为系统进化树\n制作进化树 制作进化树的步骤参照视频 进化树分析\n这里我着重讲一下美化的操作\n导出进化树 美化 这里我使用的是 evolview 网站，先导入进化树，也就是我们刚刚保存的 nwk 的文件，项目名称随便写\n先更改树的形状，一般大都是圆形，如果基因很多的话，圆形会比较好看也更加直观\n下面我们主要调整的就是 import 这里这一排的选项\n先给树叶加上背景色\n生成一个颜色配置模板然后上传\n默认的颜色是随机的，我们需要对配置文件进行一些改写，点击右边控制面板上的铅笔图标进行编辑\n下面是配置文件的写法\nOs01t4727000-01\tyellow Os05t0568600-01\tyellow Os05t0568800-01\tyellow Os01t0639600-01\tyellow Os05t0578100-01\tyellow Os01t3976000-01\tyellow Os05t0959000-01\tblue Os02t0134200-01\tblue Os07t0619500-01\tblue Os02t0761300-00\tblue Os06t0215100-01\tred Os03t0303100-01\tred Os11t0672900-01\tred Os12t0556900-00\tred 实际上就是基因与颜色对应，中间用一个制表符（按一下 tab 键）隔开，后面的 ad、prefix 这些不用管，直接删掉\n而对于每个树叶，也就是基因名称的字体颜色与这个写法是一样的，我不再赘述\n下面比较重要的一个就是对基因整体加上注释，也就是最外围一圈可以自定义一些分类名称什么的\n我写的配置文件如下\n##style 1\tleaf_name\ttext=sub iii,color=red,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed ##style 2-5\tleaf_name\tbkcolor=#BE4144,text=mammal,textorientation=vertical,linewidth=4,fontsize=16 Os01t4727000-01\ttext=sub i,color=yellow,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os05t0568600-01\ttext=sub i,color=yellow,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os05t0568800-01\ttext=sub i,color=yellow,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os01t0639600-01\ttext=sub i,color=yellow,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os05t0578100-01\ttext=sub i,color=yellow,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os01t3976000-01\ttext=sub i,color=yellow,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os05t0959000-01\ttext=sub ii,color=blue,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os02t0134200-01\ttext=sub ii,color=blue,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os07t0619500-01\ttext=sub ii,color=blue,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os02t0761300-00\ttext=sub ii,color=blue,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os06t0215100-01\ttext=sub iii,color=red,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os03t0303100-01\ttext=sub iii,color=red,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os11t0672900-01\ttext=sub iii,color=red,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed Os12t0556900-00\ttext=sub iii,color=red,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed 实际上与之前颜色的写法是差不多的，就是基因名称对应配置信息，text 就是显示的文字，color 是颜色，textorientation 控制字体水平还是垂直，linewidth、fontsize、linestyle 是控制字体和外围线条的尺寸和样式\ntext=sub i,color=yellow,textorientation=vertical,linewidth=4,fontsize=16,linestyle=dashed 不过这样每一个后面都显示分类或者家族的名称不太美观，所以我一般习惯把 text 全部留空，然后用 PPT 加上名称\n到这里其实大部分也就没了，evolview 不能更改字体，所以也需要借助 PPT 来进行\n这里还能给基因名称前添加一些形状，① 处是规则图形，如正方形、圆形等，② 处是一些小的图形\n下面是 ① 处的配置文件，也是基因名称对应形状和形状的颜色，可以添加多个图形\n##single decoration shape ##double decoration shapes seperated by tab space ##leaf_name\tshape,fill_color ##leaf_name\tshape,fill_color:border_color Os01t4727000-01\tstar,white:red\ttriangle,white:green Os05t0568600-01\trect,red\tcheck,green Os05t0568800-01\tstar,white:red\ttriangle,white:green Os01t0639600-01\trect,red\tcheck,green Os05t0578100-01\trect,red\tcheck,green Os01t3976000-01\tcircle,white:green Os05t0959000-01\tstar,red Os02t0134200-01\tstar,red Os07t0619500-01\trect,red\tcheck,green Os02t0761300-00\tcircle,white:green Os06t0215100-01\tcircle,white:green Os03t0303100-01\tstar,red Os11t0672900-01\tstar,red Os12t0556900-00\tstar,red 例如star,red就是一个红色的实心五角星，triangle,white:green是绿色边框、内部白色的三角形，可以对一些着重需要注意的基因加上图形进行标注\n② 处引入的是外链图标，也就是图标库的一些矢量图，可以从 tutorialspoint 网站上找，然后再 src 后面填上图标的外链\nOs01t4727000-01\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os05t0568600-01\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os05t0568800-01\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os01t0639600-01\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os05t0578100-01\tsrc= Os01t3976000-01\tsrc= Os05t0959000-01\tsrc= Os02t0134200-01\tsrc= Os07t0619500-01\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os02t0761300-00\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os06t0215100-01\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os03t0303100-01\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os11t0672900-01\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg Os12t0556900-00\tsrc=https://www.tutorialspoint.com/videotutorials/images/coding_ground_home.jpg 个人认为这样有点过于花哨，并不是太美观\n下面这一项是对树枝颜色进行更改\n配置文件的写法和树叶的是一样的，基因名称对应颜色，可以直接把前面的配置文件拿来用\n导出图像 导出图像可以用多种格式，svg 文件可以进行二次编辑，不过语法比较麻烦，我一般是放到 PPT 加上家族的分类名称\nPPT 二次处理 使用 PPT 主要是加上亚家族的分类名称，再对照原先的进化树加上 bootstrap 值，bootstrap 值怎么来的我在视频里也讲了\n","permalink":"https://yuanj.top/posts/8c3c2e59/","tags":["生物信息学","Evolview"],"title":"基因进化树的制作及其美化"},{"categories":null,"contents":"使用 TBtools 制作基因表达热图实在是方便，美化起来也很简单，本文以水稻的一组基因为例，讲述基因表达数据的获取、处理并使用 TBtools 出图。\n数据准备 基因表达量数据一般由实验得来，对于一些物种也会有相对的数据库提供各种条件下实验得来的数据，我们课题组做的大都与水稻有关，我就以水稻的为例\nRED 数据库提供了多数水稻基因在不同条件下的表达量数据，输入基因名称进行搜索，这里使用 RAP ID 或者 MUS ID 都可以，只不过貌似 RAP ID 的要全一点，很多 MUS ID 的都找不到\n搜索完成后，这里有很多的 Project，每个 Project 对应不同的实验条件，例如 DRP000391 就是正常状况下的表达量\n从 Project 的详情页的可以看到该项目的实验条件\n点击Show Data然后导出数据，这里要注意一下，导出数据是需要 flash 支持的，但 21 年开始 chrome、edge 这些浏览器已经不支持 flash 了，可以使用 360 浏览器或者搜狗浏览器这些，我提供一个绿色版的 360 浏览器便携版，解压之后打开360chrome.exe直接使用\n导出之后对数据进行处理，使用 Excel 的筛选功能，将数据整理成基因名称与各个项目的数据相对应的形式\n对数据进行 Log2 处理，报错的值一律改为 0 即可\n绘图 打开 TBtools 的 Heatmap 功能，把数据表格粘贴进去，start 出图\n美化 默认的图颜色并不是很美观，我们可以对它进行调整点击 Show Control Dialog 打开控制面板，具体的参数注释如下\n一般就是先对其进行聚类，然后调整颜色，我个人一般把 0.00 作为分界线改为白色，图形改为圆形，将上下限改为一样的数值，那么中心值自然就是 0.00 了\n然后修改字体，个人一般喜欢新罗马字体\n导出图形 最好选 600dpi 的，这个像素要高一些，更加清晰\n","permalink":"https://yuanj.top/posts/81ccbfae/","tags":["生物信息学","TBtools","热图"],"title":"TBtools 制作基因表达热图详解"},{"categories":null,"contents":"String 数据库默认的图片并不是太美观，使用 Cytoscape 软件可以对其数据进行一些简单修改并对图片进行美化。\n软件安装 首先要安装 Cytoscape，而 Cytoscape 又需要 Java 环境，可以从下面的链接进行下载，先安装 Java，再安装 Cytoscape 即可\nJava：https://www.123pan.com/s/JYtA-QeW0v.html\nCytoscape：https://www.123pan.com/s/JYtA-EeW0v.html\n准备数据 数据还是来自于 String 数据库，获得蛋白互作网络之后，以 tsv 格式导出\n进行美化 先将数据导入到软件中\n我们可以先对每个蛋白的形状和字体进行一定的调整，点击左边栏的 style 选项卡，选择 node（node 就是蛋白，edge 就是蛋白之间的连接线），在 shape 栏中选择图形应用，一般的话都是圆形\n选了圆形之后我们发现它变成了椭圆，这实际上是因为软件为了使图形与名称对应，在左侧调整图形的宽度和高度，两个值设为一样的数字就变成圆形了\n高度和宽度的数值大小我们可以先改一个数字，后面把其它属性调整好之后再改\n再来调整字体，点击左上方的 proerites，勾选 Label Font Face\n点击 A 图标，选择字体后应用，一般我个人比较喜欢新罗马字体\n现在再调整连接线，切换到 edge 选项卡\n点击 width 这里第二个框，Column 选择 combined_score，Mapping Tyep 选择 Continuous Napping，可以看到右边的图形已经变化了，这是根据蛋白之间作用强度的关系来规定连接线的粗细，但是它貌似太粗了，我们可以调整一下上下限\n双击左边的图形，在弹出的窗口中调整上下限，这时候就根据自身情况进行调整，怎么样好看怎么样来\n我这个图中，蛋白的形状有点大，我将它调整小一点，然后把字体再放大一点\n然后我们可以使用软件自带的一些布局调整蛋白的位置摆放，点击菜单栏中的 Layout，下面有一些可以选择的布局，可以自己调整着试一试\n另外，这里还有一些样式可以参考，不过个人认为不是很好看，所以我就用默认的\n我们还可以对形状的颜色、蛋白的名称进行调整\n调整颜色在左边 Fill color 这一栏，第一个框内是对整体颜色进行调整\n对单独几个蛋白的颜色进行调整的时候，按住 shift 键，再用鼠标左键可以多选蛋白，然后再 Fill color 第三个框内选择颜色确定即可\n重命名、添加 在下栏，可以对蛋白进行重命名，选中一个蛋白，在下栏修改名称\n在空白处点击右键，Add 选择 node 可以添加蛋白\n选中刚刚添加的蛋白，点击右键，Add 选择 edge 再选择要与这个蛋白相连接的蛋白可以为此蛋白与其它蛋白添加连接线\n导出 点击菜单栏的 File，Export as Image 即可导出图片\n","permalink":"https://yuanj.top/posts/2eef5da0/","tags":["生物信息学","Cytoscape"],"title":"蛋白互作网络美化"},{"categories":null,"contents":"在 WSL2 中使用 git clone 下载 GitHub 上的项目时由于网络原因经常会失败，使用 Windows 侧的代理可以避免此类问题。\nWSL1 和 WSL2 的区别 WSL1 和 WSL2 的网络主要有以下几个区别\nWSL1 使用的是和 Windows 主机相同的网络栈，因此和 Windows 共享同一网络接口、IP 地址和 DNS 信息，但性能较差。\nWSL2 使用了 Hyper-V 虚拟化技术，因此网络栈和 Windows 主机是隔离的，需要单独配置网络。WSL2 使用了虚拟化网络，每个 WSL2 实例对应一个虚拟交换机和虚拟网卡，该虚拟交换机相当于一个软件路由器，将 WSL2 的网络流量通过 Windows 主机的物理网卡转发到物理网络上。因此 WSL2 性能更好、更稳定，但需要单独配置网络，也可能存在一些网络配置上的问题。\nWSL2 支持 Windows 本地主机的 SSH 连接，可以通过 SSH 连接 WSL2 中的 Linux 系统，而 WSL1 不支持此功能。\n总体来说，WSL2 相较于 WSL1 更为出色，其虚拟网络技术能够提供更好的性能和更高的隔离性，同时对 SSH 的支持也更加完善。\nWSL1 代理 由于 Linux 子系统和 Windows 共享了网络端口，所以访问 Windows 的代理非常简单。例如 Windows 的代理客户端监听了 8000 端口，那么只需要在 Linux 子系统中执行如下命令，就可以让当前 session 中的请求通过代理访问互联网。\nexport ALL_PROXY=\u0026#34;http://127.0.0.1:8000\u0026#34; WSL2 代理 有两个关键步骤：\nWSL2 中配置的代理要指向 Windows 的 IP； Windows 上的代理客户端需要允许来自本地局域网的请求；\n由于 Linux 子系统也是通过 Windows 访问网络，所以 Linux 子系统中的网关指向的是 Windows，DNS 服务器指向的也是 Windows，基于这两个特性，我们可以将 Windows 的 IP 读取出来。 例如，我使用的是 Debian 子系统，通过 cat /etc/resolv.conf 查看 DNS 服务器 IP。\n## This file was automatically generated by WSL. To stop automatic generation of this file, add the following entry to /etc/wsl.conf: ## [network] ## generateResolvConf = false nameserver 172.27.144.1 可以看到 DNS 服务器是 172.19.80.1，通过环境变量 ALL_PROXY 配置代理\nexport ALL_PROXY=\u0026#34;http://172.25.144.1:37507\u0026#34; 37507 是 Windows 上运行的代理客户端的端口，记得要在 Windows 代理客户端上配置允许本地局域网请求\n一键配置 将上面的过程写入终端配置文件，就可以一直使用代理\n#!/bin/bash host_ip=$(cat /etc/resolv.conf |grep \u0026#34;nameserver\u0026#34; |cut -f 2 -d \u0026#34; \u0026#34;) export ALL_PROXY=\u0026#34;socks5://$host_ip:37507\u0026#34; 脚本通过 cat /etc/resolv.conf 来获取 DNS 服务器，也就是 Windows 的 IP，再将其中的 IP 部分截取出来，加上代理客户端的端口（我的是 37507，可以根据自己实际情况修改），使用 export 写入环境变量中\n","permalink":"https://yuanj.top/posts/d177c0aa/","tags":["WSL"],"title":"WSL 使用 Windows 侧代理"},{"categories":null,"contents":"WSL2 现在已经是我离不开的工具了，实在是太好用了。.. 但安装方法与官网的略微不同，本文记录本人亲身实践的最好的安装方法。\n什么是 WSL？ 适用于 Linux 的 Windows 子系统可让开发人员按原样运行 GNU/Linux 环境 - 包括大多数命令行工具、实用工具和应用程序 - 且不会产生传统虚拟机或双启动设置开销\n简单理解，WSL 为用户提供了一个基本完整的 GNU/Linux 环境，用户无需安装虚拟机或者双系统即可使用 GNU/Linux 中的软件\nWSL1 是最初发行的版本，但是比较鸡肋，I/O 性能很差，并且没有 Linux 内核，所以有很多 Linux 程序都无法云效，比如 Docker，WSL1 更像是基于 Windows 内核的一个翻译层，实际上工作的还是 Windows 而不是 Linux\nWSL2 是 WSL1 的升级版，提供了更好的文件系统性能和更完全的 Linux 系统内核支持，WSL2 使用虚拟化技术在轻量级虚拟机 (VM) 中运行 Linux 内核，同时保留了 WSL1 的操作体验，可以把通过 WSL2 启动的 Linux 系统认为是虚拟机中的一个 Linux 系统，因此，相对于通过用户模式和内核模式组件构成兼容性底层来运行 Linux 的 WSL1 来说，WSL2 的 Linux 系统更完整，功能更完善。例如，WSL1 不支持 Docker，而 WSL2 可以以原生的方式运行 Docker\n更多关于 Linux 的内容参考此文章 《什么是 Linux？它和 Windows 有什么区别呢？》\n检查 Windows 版本 打开 Windows 设置——系统——关于——操作系统内部版本\n需要内部版本为 18362 或更高，版本号为 1903 或更高，也就是说 LTSC2019（1809）是无法使用 WSL2 的\nWSL2 的安装 以管理员身份打开 Powershell ，分别运行下列两行代码\ndism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart 等待功能启用完成后重启电脑，重启完成之后再打开 Powershell，运行下列代码\nwsl --update 将 WSL 更新至最新版\n安装发行版 点击 此处 打开微软商店安装 Ubuntu22.04LTS，当然，也可以安装其他的发行版\n安装完成之后打开 Ubuntu22.04LTS，输入用户名和密码\n注意：密码需要输入两次，且输入时不会显示密码\n配置（可选） 换源 由于大多数 Linux 发行版的默认软件仓库在国外，所以我们需要将软件源更换为国内的以提高下载速度，以 Ubuntu 为例\n输入下列命令使用中科大软件源\nsudo sed -i \u0026#39;s@//.*archive.ubuntu.com@//mirrors.ustc.edu.cn@g\u0026#39; /etc/apt/sources.list 更多细节和其他发行版配置可以查看 中科大软件源配置 和 清华软件源使用帮助\n更新系统 换源完成后输入下列命令更新系统和软件包\nsudo apt upate \u0026amp;\u0026amp; sudo apt upgrade Ubuntu 常用命令 Ubuntu 中安装和卸载软件包使用的是 apt 软件包管理器，下面是一些常用的命令\n## 查看一些可更新的包 sudo apt update ## 升级安装包 sudo apt upgrade ## 安装指定软件包 sudo apt install \u0026lt;package_name\u0026gt; ## 卸载指定软件包 sudo apt remove \u0026lt;package_name\u0026gt; ## 查找软件包 apt search \u0026lt;package_name\u0026gt; ## 列出可更新的软件包 apt list --upgradeable ## 清理不再使用的依赖和库文件 sudo apt autoremove 关于 conda 的安装可以参考此文章 《Linux 下安装 conda》\n","permalink":"https://yuanj.top/posts/309de741/","tags":["Windows"],"title":"Windows10 \u0026 11 安装 WSL2"},{"categories":null,"contents":"功能富集分析是将基因或者蛋白列表分成多个部分，即将一堆基因进行分类，而这里的分类标准往往是按照基因的功能来限定的。换句话说，就是把一个基因列表中，具有相似功能的基因放到一起，并和生物学表型关联起来。\n何为 GO 和 KEGG? 为了解决将基因按照功能进行分类的问题，科学家们开发了很多基因功能注释数据库。这其中比较有名的一个就是 Gene Ontology（基因本体论，GO）和 Kyoto Encyclopedia of Genes and Genomes（京都基因与基因组百科全书，KEGG）。\n其中，GO 是基因本体论联合会建立的一个数据库，旨在建立一个适用于各种物种的、对基因和蛋白功能进行限定和描述的，并能随着研究不断深入而更新的语义词汇标准。GO 注释分为三大类，分别是：分子生物学功能（Molecular Function，MF）、生物学过程（Biological Process，BP）和细胞学组分（Cellular Components，CC），通过这三个功能大类，对一个基因的功能进行多方面的限定和描述。\n而 KEGG，大多数听说过 KEGG 的人都会把它当做一个基因通路（Pathway）的数据库，其实人家的功能远不止于此。KEGG 是一个整合了基因组、化学和系统功能信息的综合数据库。KEGG 下属 4 个大类和 17 和子数据库，而其中有一个数据库叫做 KEGG Pathway，专门存储不同物种中基因通路的信息，也是用的最多的一个，所以，久而久之，KEGG 就被大家当做是一个通路数据库了\n如何做功能富集分析？ 功能富集分析的算法有很多种，能够做功能富集分析的工具也非常多，如果大家想深入了解的话，下面是一个工具列表可供大家学习。\n在以上所有的工具中，有一个工具是最为常用，也最为权威，那就是 DAVID，DAVID 是由美国 Leidos 生物医学研究公司的 LHRI 团队开发的一个在线基因注释及功能富集网站，其网址为 https://david.ncifcrf.gov 为什么说 DAVID 它是最权威的呢？看下图就知道了：仅 DAVID 这一个软件就发表了 10 篇 sci 文章，其中 5 分以上 7 篇，累计影响因子将近 85 分。其他用 DAVID 进行分析并发表的文章就更不计其数了\n获取富集数据 打开 DAVID 官网：https://david.ncifcrf.gov/\n点击上方功能菜单 Functional Annotation\n选择上方的 upload 选项卡，在编辑框内粘贴基因 ID 列表，选 ID 类型为 ENSEMBL_GENE_ID ，选择列表类型为基因列表，最后上传列表\n现在展示出的即富集分析结果，取消勾选上方 Check Defaults 取消全选，展开 Gene_Ontology 项，勾选 BP、CC、MF 项，点击最下方 Functional Annotation Chart 将勾选的项目以列表形式给出\n随后就会跳出一个浏览器页面，以列表的形式将上述结果展示给我们了，点击右上方 Doanload File 将新弹出窗口中的数据复制保存在 Excel 表格中，按顺序保留下列数据\nBP、CC、MF 此处我解释一下 BP、CC、MF 项分别为什么意思\nGO 是 Gene Ontology 的缩写，是一种用于生物信息学和计算生物学中的术语表达的标准格式。GO 主要由三个部分组成：分子功能（Molecular Function，MF）、生物过程（Biological Process，BP）和细胞组分（Cellular Component，CC）这些术语描述了基因和蛋白质的不同功能和所处的环境\nBP（Biological Process）是指分析对象（如基因）所参与的生物学过程，通常是一组相互作用的生物学事件，这些生物学事件在时间和空间上有一定的结构和组织，比如细胞代谢、信号转导、生物合成等等\nCC（Cellular Component）是指分析对象（如蛋白质）所在的细胞组成部分，即它所在的细胞器、细胞构造和細胞組織中对应的位置。比如细胞膜、线粒体、细胞核等等\nMF（Molecular Function）是指分析对象（如基因或蛋白质）具有的分子功能，即它所扮演的特定化学活性，比如催化反应、配体结合、蛋白质结合、转录因子结合等\n处理数据 第一列：富集的名字（Term） 第二列：是 X 轴显示内容，例如 gene ratio 等（%列） 第三列：p 值或者 fdr，即图中的颜色，根据 p 值变化（p-value 列） 第四列：基因数，控制气泡大小（Count） 第五列：为可选列，为分类信息，例如 BP，CC，MF 等（Category）\n在制作气泡图时，通常会对富集分析结果中的 P 值进行转换，以避免图像上 P 值的差异过分压缩的情况。常用的转换方式是将 P 值进行-log10（以对数值）的处理\n对数据进行整理，简化一下名称，最终得到如下数据\n绘图 打开微生信平台（http://www.bioinformatics.com.cn/）的富集气泡图功能进行绘图，也可以使用 R 和 Excel，R 的环境比较复杂，这里我就不放代码了。\n结果分析 在这个 GO 富集分析结果中，我们可以从不同的角度来分析：\n在功能方面（GOTERM_MF_DIRECT），我们可以看到，13 个基因处于“半胱氨酸型内切酶抑制剂活性”的功能位置，这一结果的贡献值（P 值，Bonferroni、Benjamin 人为误判率）非常小，表明这 13 个基因的相似分布可能不是随机事件造成的，进而推断这些基因在相关的生物过程、疾病或免疫应答方面扮演着重要的作用\n在细胞组分方面（GOTERM_CC_DIRECT），这 13 个基因中有 11 个基因分布于“细胞外区域”，并具有非常高的显著水平和 FDR 调整系数值，表明这些基因在“细胞外区域”方面的富集并不是随机发生的，这表明这些基因可能参与了水稻的细胞外相关生理作用和功能\n在生物过程方面（GOTERM_BP_DIRECT），这 13 个基因中的所有基因均涉及到“防御反应”，且 P 值和调整后的 P 值均非常小，这表明这些基因在水稻防御反应中可能扮演一个重要的角色\n因此，结合这些结果，这些基因群应该与防御反应有关，它们在水稻中可能扮演着一种重要的保护性功能\n","permalink":"https://yuanj.top/posts/8db4bee4/","tags":["生物信息学"],"title":"GO\u0026KEGG 富集分析"},{"categories":null,"contents":"常见论文期刊索引分类。\n英文期刊 SCI\n科学引文索引 美国科学信息研究所创建 主要聚焦于自然科学领域 收录文献作者、题目、源期刊、摘要、关键词 分区方式： JCR 分区（常用）： Q1:0-25% Q2:26-50% Q3:51-75% Q4:76-100% 中科院分区： Q1:0-5% Q2:6-20% Q3:21-50% Q3:51-100% SSCI\n社会科学引文索引 美国科学信息研究所创建 主要聚焦于社会科学领域 EI\n工程索引 由美国工程师学会联合会所创办的大型综合文献检索工具 主要收录工程技术领域的重要文献 类型： JA：EI 源刊，发表在 EI 收录的正式出版的学术期刊上的论文，周期更长，难度更大 CA：EI 会议。指在 EI 收录的会议上发表或者被会议论文集收录的论文 CPCI（ISTP）\n最早设立于 1978 年 由美国科学情报研究所编辑出版 2008 年基于 web of science 更名为 CPCI 收录范围：生命科学、物理与化学、农业、生物和环境科学、工程技术和应用科学等 形式有一般性会议、座谈会、研究会、讨论会、发表会等 中文期刊 南大核心（CSSCI）\n一般所说的核心指 CSSCI 中国社会科学引文索引 由南京大学投资建设，南京大学中国社会科学研究评价中心开发研制的人文社会科学引文数据库 用来检索中文人文社会科学领域的论文收录和被引用情况 国内目前认可度最高的核心 北大核心\n北京大学图书馆《中文核心期刊要目总览》 难度：南大核心\u0026gt;北大核心 CSCD 中国科学院文献情报中心的中国科学以引文数据库 创立于 1989 年 收录范围：数学、物理、化学、天文学、地学、生物学、农林科学、医药卫生、工程技术、环境科学的中英文科技期刊和优秀期刊\nCSTPCD\n中国科学技术信息研究所，中国科技论文统计源期刊 CHSSCD\n中国社会科学院文献信息中心，中国人文社会科学核心期刊 RCCSE\n武大核心 武汉大学中国科学评价研究中心 其它期刊 中国人文社会科学学报学会，中国人文社科学报核心期刊 万方数据股份有限公司中国核心期刊遴选数据库\n发表难度 SSCI≈SCI\u0026gt;EI 源刊\u0026gt;EI 会议\u0026gt;CPCI 南大核心正刊\u0026gt;南大核心扩展期刊\u0026gt;北大核心\u0026amp;CSCD\u0026gt;其他几类索引期刊\u0026gt;普刊 SSCI≈SCI≥南大核心正刊和扩展期刊≥EI 源刊≈北大核心＞EI 会议＞CPCI＞其他普刊 ","permalink":"https://yuanj.top/posts/ef7fdb64/","tags":["论文期刊"],"title":"常见论文期刊索引分类"},{"categories":null,"contents":"吐槽一下国产厂商\u0026hellip;\u0026hellip;及本人一些应对的小措施。\n问题 目前国内的手机主要面临的问题有​下面几个：\n系统臃肿，自带了很多看似很有用实则大部分人到手机报废也用不到的功能 广告太多，已经不仅仅是软件有广告，很多系统内也有不少的广告 限制太多，比如获取 root 权限比以前难了很多，甚至很多机型无法 root 软件臃肿，大家都懂，国内的大部分软件几乎都可以刷视频、聊天 隐私问题，例如抖音后台一直监听手机听筒 吐槽 吃相已经难看到无力吐槽\u0026hellip;\u0026hellip;\n国内的大多数用户实际上对安卓系统是有一定能更多的误解的，原生的安卓系统是非常好用的，流畅、没有广告且干净清爽，但是国内的厂商对其进行二次开发后得到的 MIUI、ColorOS 等等是被国内的厂商根据自家手机的硬件条件进行了优化并且塞入了各种各样的服务和软件，美其名曰提供更好的服务。\n原生的安卓系统确实是不太符合国人使用习惯，如 GooglePlay 服务无法使用等问题，但是我认为可能也没有必要加入那么多功能。国内用户手机用一段时间后卡顿其实很大程度上是由于软件臃肿，系统带不动所造成的。举个例子，我第一次玩王者荣耀这个游戏的时候它才 200mb，但是过了不到三年，8GB 的手机不下载任何其他软件才能勉强玩，到如今已经突破了 20GB，这是国内软件的通病，支付宝中的理财功能、生活圈、余额宝还有各种银行等功能我也是从来不用，但是\u0026hellip;\u0026hellip; 又有什么办法呢？\n如果国内的互联网企业能够”专心“一点，不往软件中塞入没用的功能，那么软件的运行内存占用和存储空间占用都会大大降低，手机换代的速度也会降低不少。而安卓原生系统上的软件都是需要在 Play 商店下载的，Play 商店上的应用都是经过审核的，所以存在的问题也没有那么离谱，系统的负担也没有那么重，但安卓原生系统运行国内的软件时，很容易发生内存泄漏、权限监管不到位的问题，因为人家本身并不需要管这些事，应用上架 Play 商店时这些问题都会进行一定的审核。国内手机上的应用市场虽说也会进行”审核“，不过效果貌似很一般，之前我父亲的手机上的拼多多居然卸载不掉，原因是拼多多弄了一个”假“图标，实际上的拼多多还在手机里\u0026hellip;\u0026hellip; 而广告关不掉、诱导用户点击广告等问题一直存在。\n所以每次换手机或者手机系统刷机之后我首先要做的事就是卸载那些没用的软件，我现在的手机是荣耀 X20，今天刷机之后我就将自带的所有能卸载的软件一律卸载了，能用其它软件替代的一律换掉，系统内置的一些华为视频、华为音乐这些毒瘤系统原生无法卸载，我使用 adb 命令行将其全部卸载掉，说是卸载\u0026hellip;\u0026hellip; 实际上还在系统内，恢复出厂设置之后又会回来，没法真正卸载。而相册、文件管理、应用市场这些和系统深度绑定，卸载了之后指不定什么功能又用不了了。\n替代方案 具体的方案如下：\n华为音乐、华为视频，自带广告都快把屏幕占满了\u0026hellip;\u0026hellip; 用 KMPlayer 替代 华为浏览器，也是到处的广告\u0026hellip;\u0026hellip; 用 kiwiBrowser 替代 智慧搜索、智能助手等所谓的”智慧“服务，一律卸载，没什么用 华为钱包、华为阅读、游戏中心等，没有任何用处，一律卸载 华为主题，直接删掉，默认主题就不错 SIM 卡应用，都 5G 时代了，谁拿 5G 手机用 2G 服务？ 高德地图，使用某站下载的定制版，仅保留了地图服务，打车用微信小程序滴滴出行 QQ，就拿来发个消息传个文件需要用小世界、装扮？用 TIM 替代 微信，无解了，用 Play 商店版 哔哩哔哩，用 Play 版，清爽无广告，去除不必要功能 支付宝，也是无解，用 Play 商店版 看电子书，用开源阅读，太香了~ 拼多多、京东、美团，直接用微信小程序凑合凑合也能用 企业微信，用原版，这玩意是真的良心，还能用腾讯会议，只是少数功能没有 输入法，自带的百度输入法实在一言难尽，用谷歌拼音代替 搜题，用小猿搜题微信小程序，很鸡肋，实在不行咱自个做！ 出行买票，高铁火车用 12306（相信国家！）机票用携程小程序 听音乐，我一般是下载下来本地听，KMPlayer 足矣 这样一套搞下来，手机”轻快“了不少，只有支付宝、微信等少数软件有广告，舒服多了~\n顺便来一套卸载内置软件的教程\n卸载安卓内置应用 使用电脑连接手机 由于电脑缺失大部分手机连接驱动，所以要下载对应的手机助手，比如我的是荣耀，就下载荣耀手机助理，根据手机助手给出的方案连接手机\n打开 USB 调试 在手机设置中的开发人员选项中打开 USB 调试，如果开发人员选项没有打开，在关于手机中对着版本号一直点，就会提示你输入密码打开开发人员选项\n使用软件 下载地址：https://www.123pan.com/s/JYtA-rPW0v.html 提取码：8VAE\n点击刷新，这时手机上会提示给授权使用 USB 调试，一定要点允许\n连接成功后软件中就会出现手机系统软件中的列表，这时我们需要在手机上下载一个 ES 文件浏览器来查看软件包名，打开 ES 文件浏览器后首页的应用，选择系统应用项即可，点击软件即可查看包名\n在上图②处搜索包名，在右侧的快速查询框中双击要卸载的软件包包名，按空格选中，然后在左侧框内任意处点击右键卸载选中软件即可\n","permalink":"https://yuanj.top/posts/511c5255/","tags":["随笔"],"title":"今天“调教”了一下我的手机"},{"categories":null,"contents":"做生信的话，conda 应该是必要的软件之一吧？记录一下安装过程以及源的配置。\n什么是 conda？ Conda 是适用于任何语言的软件包、依赖项和环境管理系统\u0026ndash;包括 Python，R，Ruby，Lua，Scala，Java，JavaScript，C / C ++，FORTRAN 等\nConda 是在 Windows、macOS 和 Linux 上运行的开源软件包管理系统和环境管理系统。Conda 可以快速安装、运行和更新软件包及其依赖项。Conda 可以轻松地在本地计算机上的环境中创建，保存，加载和切换。它是为 Python 程序创建的，但可以打包和分发适用于任何语言的软件\nConda 作为软件包管理器，可以帮助您查找和安装软件包。如果您需要一个能够使用不同版本 Python 的软件包，则无需切换到其他环境管理器，因为 conda 也是环境管理器。仅需几个命令，您就可以设置一个完全独立的环境来运行不同版本的 Python，同时继续在正常环境中运行喜欢的 Python 版本\n在默认配置下，conda 可以安装和管理来自 repo.anaconda.com 仓库的 7,500 多个软件包，该仓库由 Anaconda 生成，审查和维护\nConda 也可以与 Travis CI 和 AppVeyor 等持续集成系统结合使用，以提供对代码的频繁，自动化测试\n所有版本的 Anaconda， Miniconda 和 Anaconda 存储库均包含 conda 软件包和环境管理器 。Conda 也被包含在 Anaconda Enterprise 中，该公司为 Python，R，Node.js，Java 和其他应用程序堆栈提供现场企业包和环境管理。Conda 还可以在社区频道 conda- forge 上获取 。当然，也可以在 PyPI 中获取 Conda，但是通过这种方法可能不是最新的\n下载安装包 使用下列命令来下载 miniconda3 的安装包\nwget https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py38_4.12.0-Linux-x86_64.sh 如果系统提示找不到命令“wget”，那么使用下列命令安装 wget\n#Debian 系，如 Ubuntu、Debian、deepin、Linuxmint sudo apt install wget #CentOS 系，如 CentOS 7 sudo yum install wget #Fedora 系统 sudo dnf install wget #Arch 系，如 manjaro、Arch sudo pacman -S wget 安装 miniconda3 下载完成之后，使用下列命令安装 miniconda3\nbash Miniconda3-py38_4.12.0-Linux-x86_64.sh 安装过程中会遇到下列几个问题\n#需要阅读开源协议，一直按回车键即可 Welcome to Miniconda3 4.7.12 In order to continue the installation process, please review the license agreement. Please, press ENTER to continue \u0026gt;\u0026gt;\u0026gt; =================================== Miniconda End User License Agreement #是否接受开源协议，输入 yes do you accept the license terms? [yes|no] [no] \u0026gt;\u0026gt;\u0026gt; Please answer \u0026#39;yes\u0026#39; or \u0026#39;no\u0026#39;:\u0026#39; \u0026gt;\u0026gt;\u0026gt; #指定安装位置，按回车使用默认位置即可 ## Miniconda3 will now be installed into this location: ## /root/miniconda3 ## ## - Press ENTER to confirm the location ## - Press CTRL-C to abort the installation ## - Or specify a different location below [/home/USER_NAME//miniconda3] \u0026gt;\u0026gt;\u0026gt; #安装完成，是否进行初始化，输入 yes installation finished. Do you wish the installer to initialize Miniconda3 by running conda init? [yes|no] [no] \u0026gt;\u0026gt;\u0026gt; yes 更换清华源 由于 conda 默认的源在国外，经常会出现网络问题而导致下载失败，所以我们需要换源\n可以参照清华大学开源镜像站的说明 https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/\n安装完成之后输入下列命令编辑 conda 源\nsudo nano ~/.condarc 同样，如果系统提示找不到命令“nano”，那么使用下列命令安装 wget\n#Debian 系，如 Ubuntu、Debian、deepin、Linuxmint sudo apt install nano #CentOS 系，如 CentOS 7 sudo yum install nano #Fedora 系统 sudo dnf install nano #Arch 系，如 manjaro、Arch sudo pacman -S nano 在编辑窗口中粘贴下列内容\nchannels: - conda-forge - bioconda - defaults show_channel_urls: true default_channels: - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2 custom_channels: conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud auto_activate_base: false 按 Ctrl+S 保存后按 Ctrl+X 退出\n创建虚拟环境 使用下列命令\nconda create -n env1 python=3.7 #-n 后面是虚拟环境的名称，自己指定 #python=3.7 说明创建一个 3.7 版本的 python 环境，根据自己的需要可以更换 等待一小会之后会列出创建此环境所需的软件包，输入 y 确定即可\n安装软件 先激活虚拟环境\nconda activate env1 #以上一步创建的环境为例 如果我要搭建一个生信分析环境，那么需要安装 hmmer、samtools 等工具，激活环境后使用 conda install 命令安装\nconda install hmmer samtools hisat2 同样，列出所需软件包之后输入 y 回车确定\n退出环境 使用完成之后需要退出环境\nconda deactivate ","permalink":"https://yuanj.top/posts/1d0dd329/","tags":["Linux"],"title":"Linux 下安装 conda"},{"categories":null,"contents":"共线性分析可以用 MCScanX 软件进行分析，但是这个软件的官网已经 404 了，而且利用命令行来进行分析比较麻烦，这里建议大家使用 TBtools 上的工具，这个软件里面集成了共线性分析的相关插件，并可以进行可视化操作，分析起来很方便。\n概念 共线性是指同源基因在物种内或者物种之间的分布或排列关系。我们都知道，有相当多的基因在一个物种中不是以单拷贝的形式出现，而是多拷贝，具有基因序列重复事件，也就是说能行使相同功能的同源基因在同一个物种内可能不只有一条序列，而当我们想研究这些同源基因在同一个物种内的重复事件的时候，就是物种内的共线性分析。如果我们研究同源基因在不同物种内的分布情况，就是物种间的共线性分析，物种间可以是两个物种，也可以是多个物种。\n原理 共线性分析最基本的原理是基于对基因序列进行 blast 比对，然后利用 MCScanX 软件对比对结果进行分析，这时候就需要有物种基因组的注释文件和比对结果，注释文件是用来分析这些基因所在的位置和数量，最后用可视化的软件把共线性分析的结果以图片形式展示出来。\n所需工具及文件 TBtools 软件、物种基因组序列、注释文件\n获取染色体长度文件 打开 TBtools 的 Fasta Stats 功能，导入物种基因组序列文件，设置好输出文件，获取染色体长度文件\n将 chr len.txt 文件的内容粘贴到 Excel，只保留 ID 和 length 两列的数据，删除 chr len.txt 文件中原有的数据，将 ID 和 length 两列数据保存在 chr len.txt 中\n共线性分析 打开 TBtools 的 One Step MCScanX 功能，这里它需要输入两个物种的基因组序列文件和注释文件，我们两个都导入拟南芥的进行物种内的共线性分析，这个过程中如果出现报错，关掉即可，不用理会\n获得关联文件 打开 TBtools 的 Text Merge for MCScanX 功能，导入上一步分析结果（在输出目录中）中的 Collinearity 文件，将分析结果转换为 GenePairTable\n打开 TBtools 的 Text Transformat for Micro-Synteny View 功能，导入上一步获得的 GenePairTable 文件和分析结果中的以。gff 为拓展名的文件（即简化后的注释文件），获得 LinkedRegion 文件，也就是基因间的关联文件 LinkedRegion\n可视化 打开 TBtools 的 Advanced Circos 功能，依次导入 chr len.txt、GenePairTable.txt、LinkedRegion.txt 进行绘图\n这样就得到拟南芥所有基因的共线性分析 Circos 图了\n还没有结束 然而还没有结束，我们还需要突出显示出某些基因\n我随便抽取一些基因，打开 TBtools 的 Text Block Extract and Filter 功能，从 GenePairTable 文件中获得这些基因的对应关系，生成新的 GenePairTable 文件\n然后生成新的关联文件 LinkedRegion\n然后将新的 LinkedRegion.txt 文件的内容复制到 Excel 中，最后一列加上 RGB 色值\n随后将 Excel 中的内容合并到之前的 LinkedRegion.txt 文件中或者新建一个文本文件保存，如果不想显示全部基因的共线性，仅仅显示选中的这些基因的共线性的话，可以直接使用刚刚保存的带有 RGB 色值的 LinkedRegion.txt 文件\n还差一些东西 我们似乎还需要显示出一些基因的名称，那就补充吧\n打开 TBtools 的 Table Row Extract or Filter 功能，导入分析结果中简化的注释文件，在弹出的窗口中选择 ID 这一列，在输入框中再输入要展示的基因的 ID（注意名称要对应），这里是需要生成一个用于展示 ID 的新的 GenePairTable 文件\n最后依次输入染色体长度文件、展示 ID 的 GenePairTable 文件、带有 RGB 色值的 LinkedRegion.txt 文件 绘图即可\n最终结果\n","permalink":"https://yuanj.top/posts/f44e9fb8/","tags":["生物信息学","TBtools"],"title":"物种内共线性分析"},{"categories":null,"contents":"使用 HMMER 查找同源基因比 blast 更加准确，速度也更快，但使用方法很少有文章讲清楚，本文记录我使用 HMMER 的操作。\nHMMER HMMER 是基于隐马尔可夫模型，用于生物序列分析工作的一个非常强大的软件包，它的一般用途是识别同源蛋白或核苷酸序列和进行序列比对。与 BLAST、FASTA 等序列比对和数据库搜索工具相比，HMMER 更准确\n从功能基因研究的角度来讲，相关的搜索，比如从序列数据库中，找同源的序列，或者对一个新的基因功能进行鉴定，使用 HMMER 比使用 blast 有着更高的灵敏度以及更高的搜索速度，但其应用远没有 blast 普及\n所需工具 Linux 系统环境、HMMER 软件、pfam 网站（http://pfam-legacy.xfam.org/）\n下载隐马尔科夫模型 我以拟南芥的 SBP 家族为例 打开 pfam，输入基因家族的 pf 号点击 go 进行查询\n也可以通过查询关键字来查找\n查询到之后，点击左边的 Curation \u0026amp; model 下载 hmm 文件\n再点击 Alignments 选择 stockholm，点击 gengerate 后会自动下载一个 txt 文件\n安装 HMMER 在 Linux 系统环境下，推荐使用 conda 安装 HMMER，conda 的安装配置教程请参照此文章 《Linux 下安装 conda》\n#创建 Python3.7 的虚拟环境 conda install -n bioinfo python=3.7 #激活虚拟环境 conda activate bioinfo #安装 hmmer conda install hmmer 构建 hmm 模型 在工作目录下执行命令\nhmmbuild [xxx.hmm] [xxx.txt] #构建 hmm 模型（使用我们再 pfam 网站下载的 hmm 文件和 txt 文件，要保证文件都在同一工作目录下 进行比对 在工作目录下执行命令\nhmmsearch [hmm 文件] [待比对物种 fasta 文件] \u0026gt; [输出文件名] #输出文件名以。out 结尾 #fasta 文件即整个物种的氨基酸序列 (fasta 文件名的缩写为 fa) 比对完成之后使用 cat 命令查看比对的结果\ncat result.out 进一步筛选 随后我们可以通过各种数据库如 NCBI、TBtools 的比对工具等，进行进一步筛选，并用 MEME、CD-Search 进一步鉴定，排除“假阳性“。\n","permalink":"https://yuanj.top/posts/de3b1544/","tags":["生物信息学","HMMER"],"title":"使用 HMMER 查找基因的同源序列"},{"categories":null,"contents":"顺式作用元件 (cis-acting element) 存在于基因旁侧序列中能影响基因表达的序列。\n顺式作用元件包括启动子、增强子、调控序列和可诱导元件等，它们的作用是参与基因表达的调控。顺式作用元件本身不编码任何蛋白质，仅仅提供一个作用位点，要与反式作用因子相互作用而起作用。\n所需工具及文件 Gff3 注释文件、基因组全部序列、TBtools、plantcare 网站\n提取启动子区域 首先要做的第一步是提取所有基因的 CDS 序列\n提取时需要在初始化后将 TBtools 的设置改为如下配置\n然后提取目标基因的启动子序列，打开 TBtools 的 Fasta Extract or Filter，设置好序列文件、输出文件、基因 ID，点击 start 开始\n转换大小写 打开 Sequenxe Manipulate 工具，将提取出来的所有序列复制进去，全部转为大写\n新建文本文档保存转换后的序列\n上传至 plantcare 网站 现在需要打开网站 http://bioinformatics.psb.ugent.be/webtools/plantcare/html/ 将刚刚保存的序列上传进行顺势作用元件预测\n等待一会后会收到网站发出的一封邮件，下载邮件中的附件然后解压，解压之后得到一个拓展名为 tar 的文件，再进行解压\n整理网站返回信息 用 excel 打开解压出来的 tab 文件，此时 excel 中显示的就是这些基因的元件信息\n筛选我们需要的物种，这里我选择了水稻\n删除元件名称、元件序列、增减个数、加/减、物种等我们不需要的信息，然后为了保证最后的图片可看，这里需要扩大一下起始位置，较大的可以减少 20，较小的可以增大 20。并且需要将含有空白信息的项删除，不然 TBtools 会报错。最终整理成如下格式：\n新建序列长度文件 下面需要再新建一个关于序列长度的文件，格式如下：\n可视化 打开 TBtools 的 Simple BioSequence Viewer 功能，导入长度信息文件和元件信息，点击 start 开始\n最终得到可视化结果\n","permalink":"https://yuanj.top/posts/6c282499/","tags":["生物信息学","TBtools"],"title":"顺式作用元件分析"},{"categories":null,"contents":"Recommend Ethan.Tzy 安知鱼 Fomalhaut🥝 张洪 Heo 雨临 Lewis 的博客 杜老师说 轻笑 Chuckle 小冰博客 Akilar の糖果屋 Startly Partner Ariasaka の小窝 Black Flies CC 康纳百川 LrcShare Yang\u0026rsquo;s Harbor 又见苍岚 YuZhangWang 的领域 探人间 小 N 同学 Adil Add me name: UncleCAT4 link: https://yuanj.top avatar: https://yuanj.top/images/avatar.png descr: 思绪来得快去得也快，偶尔会在这里停留 siteshot: https://yuanj.top/images/siteshot.png Join me name=\u0026#34;blog\u0026#39;s name\u0026#34; url=\u0026#34;blog\u0026#39;s url\u0026#34; ","permalink":"https://yuanj.top/links/","tags":null,"title":"友链"},{"categories":null,"contents":"个人信息 焦元/男 英语：CET-4 成都理工大学/环境科学与工程/2021 级本科 20 岁/2003 年 Github: UncleCAT4 微信：Hieroglyphicss 博客：https://yuanj.top 公众号：猫四叔 邮箱：hieroglyphs@foxmail.com 个人技能 熟练使用 Git、GitHub 等代码工具 熟悉 Windows/Linux 操作系统的使用 熟悉基本的生物信息学分析 掌握 AutoCAD、Office 等常用软件的使用 掌握 Python 的基本使用 掌握 RNA-seq 上游分析部分 掌握简单的 HTML/CSS 实践经历 2022.05-2022.06 宜宾市 SYB 创新创业培训 2022.09-Now 创立并运营公众号 “猫四叔” 2022.12-2023.06 全国大学生生命科学竞赛（科学探究类）/国二 2022.12-Now 成都理工大学黄进课题组成员 2023.01-2023.05 全国大学生市场调查与分析大赛/国三 2023.01-2023.05 全国大学生电子商务“创新、创意及创业”挑战赛/省二 2023.01-Now 搭建并运营博客 “UncleCAT4” 2023.04-Now 搭建并运营 “黄进课题组” 主页 GitHub HJLab: 黄进课题组主页 Gene-family-identification: 基因家族鉴定教程 auto-hmmer: 自动化基因家族鉴定 hexo-theme-hieroglyphs: 极简 Hexo 主题 resume: 个人简历模板 OStools：简易的水稻基因工具箱 ","permalink":"https://yuanj.top/resume/","tags":null,"title":"履历"},{"categories":null,"contents":"2023/10/31 天气阴 RNA-seq 下游的分析主要依靠 R 语言来完成，盯着视频和文档敲了很久代码，老是遇见问题，让我记忆犹新的是这一句：\ncounts = as.matrix(counts[rownames(samples)]) 总是报错说没有定义列变量，搞了半天没解决，眼看 WSL 的 1GB 内存不够了，于是调到 2GB，又从头运行了一遍，居然成功了🤣有点玄学。\n没有 R 基础还是难受，但目前需要早点出结果便于其他人开展后面的工作，于是只能在边学边写 R 的同时，使用其它的工具（TBtools，Hiplot 等）先完成部分绘图，后面接着慢慢学了。\n总算是把 RNA-seq 上游跑完了，基因表达矩阵似乎也是符合预期的，唯一有问题的就是 hisat2 把 reads 比对到参考序列组的时候，只有 64%左右匹配成功，看了一下作者的原文章的叙述\nComparative transcriptomic analysis was performed on the Illumina RNA-Seq platform at different concentrations of Cd-treated (0, 50 and 500 mg·kg–1 soil) ryegrasses. In total, 62.53 Gb of clean data were obtained by the transcriptomic analysis of nine samples, and the percentage of Q30 base in each sample was more than 94.47% (Table S4). After removing low-quality reads, the transcriptome was assembled into 118,443 unigenes, producing an average length of 754 bp. A detailed summary of the Illumina transcriptome sequencing is provided in Table S5. The lengths of all the assembled unigenes and transcripts were calculated, and most of the assembled sequences 56% (unigenes) and 48% (transcripts) sequences in each sample were less than 500 bp, respectively (Figure S2). The clean reads were mapped to the assembled unigenes, and the mapped ratio \u0026gt; 71% could map to the unigenes (Table S6).\nAfter the assembly, annotations for the assembled unigenes were performed by BLAST in six public databases (NR, Swiss-Prot, Pfam, COG, GO and KEGG) with a cut-off E-value of 1.0 × 10–5. In total, 52,373, 32,703, 32,907, 48,414, 43,497 and 20,654 unigenes were aligned, respectively (Table S7). Additionally, 53,550 unigenes were annotated in the database, accounting for 45.21% of all unigenes. The unigene assemblage was annotated with NR, and the proportion of species in the assemblage was as follows: Triticum urartu (4589, 23.66%); Triticum aestivum (3031, 15.54%); Oryza sativa (2446, 12.61%); and Zea mays (1010, 5.21%), respectively.\n似乎是组装了多个物种的测序数据，暂时先这样吧。\n2023/10/30 天气晴 今天下载好数据开始跑 RNA-seq，在低质量序列过滤（trimmomatic）时，总是遇到 nohup 后台任务终端的情况，于是就根据样本写了一个 bash 脚本：\n#!/bin/bash for i in {0,50,500} do for j in {1,2,3} do trimmomatic PE -threads 4 -phred33 C${i}_${j}.R1.fastq.gz C${i}_${j}.R2.fastq.gz -summary Lp_${i}.summary -baseout C${i}_${j}.fastq.gz LEADING:3 TRAILING:3 SLIDINGWINDOW:5:20 HEADCROP:15 MINLEN:36 done done 然后使用命令nohup bash filterate.sh \u0026amp;挂在后台，才算是解决了问题。后来又遇到 wget 从 Ensembl Plants 下载数据经常中断，其实就是网络原因，还是老办法，上传到腾讯云 cos 后再下载到超算，但这也不是个办法，想起前不久黄老师为课题组买了 NAS，于是找了黄老师要 NAS 账号，后面把之前的实验数据等整理一下上传到 NAS 做个备份吧。\n2023/10/29 天气阴 今天黄老师将黑麦草暴露在镉下的测序数据要到了，抽时间就可以开始进行分析了，但是 \u0026hellip; 没想到数据居然存在百度云盘，只能借了朋友的会员全部下载到我的电脑上，共 30GB，然后传到腾讯云的存储桶，最后写了脚本挂在超算下载，腾讯云 cos 每 GB 外网下行流量是 0.5 元，15 块钱下载这个数据，有点小心疼😭\n关于黄老师提到的基因筛选的这一流程，我已经有大概的思路，其实就是先对几个基因家族进行常规生信分析（进化树、蛋白互作、结构域分析、motif、顺式作用元件等），再进行转录组分析，看看镉处理下黑麦草的表达量比起正常状况下有多少区别，初步设想是进行 RNA-Seq 上游分析，然后进行表达量分析、差异表达分析、GO 富集分析等，这些就需要使用 R 语言进行了。\n未来的路还很远，继续加油！\n今天参考网络上的代码，成功用 R 语言绘制了 GO 富集分析的图片：\nlibrary(dplyr) library(ggplot2) library(ggrepel) GO_data \u0026lt;- read.table(\u0026#39;./data.txt\u0026#39;, header = TRUE, sep = \u0026#39;\\t\u0026#39;) GO_data \u0026lt;- arrange(GO_data, GO_data[,3]) GO_data$Term \u0026lt;- factor(GO_data$Term, levels = rev(GO_data$Term)) mytheme \u0026lt;- theme( axis.title = element_text(face = \u0026#34;bold\u0026#34;, size = 14, colour = \u0026#34;black\u0026#34;), axis.text = element_text(face = \u0026#34;bold\u0026#34;, size = 14, colour = \u0026#34;black\u0026#34;), axis.line = element_line(size = 0.5, colour = \u0026#34;black\u0026#34;), panel.background = element_rect(colour = \u0026#34;black\u0026#34;), legend.key = element_blank() ) p \u0026lt;- ggplot( GO_data, aes( x = Fold.Enrichment, y = Term, colour = 1*log10(PValue), size = Count ))+ geom_point()+ scale_size(range = c(2, 8))+ scale_colour_gradient(low = \u0026#34;blue\u0026#34;, high = \u0026#34;red\u0026#34;)+ theme_bw()+ ylab(\u0026#34;Terms\u0026#34;)+ xlab(\u0026#34;Fold.Enrichment\u0026#34;)+ labs(color = expression(-log[10](PValue)))+ theme(legend.title = element_text(margin = margin(r = 50)), axis.title.x = element_text(margin = margin(t = 20)))+ theme(axis.text.x = element_text(face = \u0026#34;bold\u0026#34;, colour = \u0026#34;black\u0026#34;, angle = 0, vjust = 1)) plot \u0026lt;- p + mytheme plot ggsave(plot, filename = \u0026#34;GO.png\u0026#34;, width = 10, height = 6, dpi = 300) 但其中大部分代码还是没有理解，只是照搬了人家的代码，尤其 ggplot 绘图那部分，还需要好好研究一下。\n2023/10/27 天气阴 今天学习 R 语言绘制热图（pheatmap），其实昨天就开始了，一直很顺利，直到添加列注释的时候：\nannotation_row \u0026lt;- data.frame( GeneClass = sample(c(\u0026#34;oncogene\u0026#34;, \u0026#34;tumor suppressor\u0026#34;), size = 20, replace = TRUE) ) rownames(annotation_row) \u0026lt;- paste0(\u0026#34;Gene\u0026#34;, 1:20) 总是报错说注释长度与数据长度不同：\nError in names(annotation_colors[[names(annotation)[i]]]) \u0026lt;- l : \u0026#39;names\u0026#39; attribute [2] must be the same length as the vector [1] 一直解决不掉，后面不用 sample 函数，直接使用元素重复：\nannotation_row \u0026lt;- data.frame( GeneClass = c(rep(\u0026#34;nano\u0026#34;, 11), rep(\u0026#34;nano2\u0026#34;, 5)) ) rownames(annotation_row) \u0026lt;- rownames(data) 成功解决问题，但是对于具体基因对应注释，还是需要建一个比较完整的对应关系。另外，关于clustering_method参数可选的各种聚类方法，也需要详细地了解一下。\n最近从 VScode 启动 WSL 又会经常断连 \u0026hellip; 不知道怎么说了，之前用 Debian 的时候就会经常断开，解决方法就是在 powershell 关机wsl --shutdown，后重新从 VScode 启动 WSL 就可以，有些时候就需要删掉 WSL 内的.vscode-server文件夹，但删了之后插件又要重装 \u0026hellip; 不知道微软什么时候能把这个弄的完善一些。\n还有，WSL 断开连接的时候，有可能会导致 git 存储库错误：\nerror: object file .git/objects/1b/3ccfd55d764df9e94bdfa1af73d23a9c4957f1 is empty fatal: could not parse HEAD 这个问题也出现过好多次了 \u0026hellip; 我通常的解决方法就是把存储库删掉然后重新 clone 存储库。\n2023/10/26 小雨转大雨 今天比较冷，一直在下雨，晚上跟朋友商量了五粮液管道除垢项目，决定了要参加创新创业比赛，只是要快点安排人员了~\n出去买了炸土豆，雨是真的大，也很冷。\n要添衣了。\n2023/10/25 天气阴 近来总有很多失败，江苏大学那位师兄请我做的分子动力学模拟失败了，昨天一位师姐请我帮忙改注释文件格式也没有成功，😔挫败感，继续加油吧。\n近来总是感觉到精神不振，应该还是没有睡好的缘故 \u0026hellip; 一直睡不够，奈何三创赛马上要开始了，科创菁英的两个项目也要开始了，五粮液管道项目老师也在催，似乎没有哪一件是能够迅速完成的。11 月中旬考导游证，12 月考六级，压力有点大 \u0026hellip;\n今天有两个会议，开完之后先分配三创赛的计划书和 PPT 撰写，科创菁英那边我也不是负责人，所以等待有数据之后直接开始生物信息学分析即可，其余的精力还是放在导游证上吧，明天早上的第一节课可以不去，睡个好觉吧~\n2023/10/20 多云转晴 今天从早上起来开始，眼睛将一直很痛，我猜测可能是前一天晚上没有睡好，于是上完课，做完黄老师让我讲解的黑麦草 HIPP 基因家族鉴定的 PPT 之后，就立马躺下睡觉了，但是一直睡不着 \u0026hellip; 翻来覆去就是睡不着，最近的事情可能有点多，有一些焦虑吧，睡觉的时候听了一下 AppleMusic 的雨声电台，还是很不错的。\n躺了一会之后就起来，发现今天的太阳还不错，于是拿了瑜伽垫到天台上躺着晒了一会太阳，很舒服~\n宜宾总是阴雨天，经常见不着太阳，尤其是冬天，很多时候是晒不到太阳的，如果明天还是晴天，就把衣服拿出去晾了，沾沾“朝气”。\n明天有一整天的时间了，打算拿一天所有时间（可以说是“闭关”哈哈）来解决 gromacs 补充非标准残基和力场的问题，如果解决了的话，和江苏大学那边可能会有一些小合作。\n2023/10/18 阴转小雨 今天晚上跟朋友去打球，打了一会就下雨了，唉，宜宾的破天气，说下就下😭，买了鸡腿、炸土豆和牛奶，奖励一下自己，哈哈哈。\n之前江苏大学的一位师兄请我做 gromacs 分子动力学模拟，我在学校的超算上进行，使用 conda 安装好 gromacs 包就报错了，原因是还需要安装 pocl 包。\n开始前先去除 pdb 文件中的水分子：\ngrep -v HOH YdcW_C284S.pdb \u0026gt; YdcW_C284S.clean.pdb 之后要生成拓扑文件，在这里又遇到报错，原因是在标准残基库中没有 NAI 这个残基，查了好多资料，原来是因为这个 pdb 文件是师兄他们请别人测得的，有部分非标准残基，所以需要自行添加残基到库中 \u0026hellip; 还没有解决掉这个问题，这是一个大工程，需要学习很多东西，后面有时间继续研究吧~\n2023/10/17 多云转晴 今天和研途考研的张腾飞老师通了一下电话，聊了一下关于考研的事，由于我是跨考，所以难点就在专业课上面，如果要考川大华西医院的话，实际上是没有纯生物信息学专业的，而是生物学大类下分为基因组学、细胞生物学等，这些是理学的，工学的生物信息学需要考数学。\n感觉似乎张老师并没有很直接的告诉我方向，他是根据工学和理学来区分生物学大类：\n工学：生物技术与工程、生物医学工程、生物工程、制药工程等。 理学：生理学、微生物学、生物化学与分子生物学、植物学、动物学、细胞生物学、遗传学、生态学等。 张老师根据这个来区分其实另一个更重要的原因是看考不考数学。\n我说我想继续读博、博后，然后留在实验室做科研，他就很直接的告诉我考理学的生物信息学，作为一个交叉学科，生物信息学实际上对数学和计算机的能力也是很高的，但它似乎更偏向科研与数据挖掘等，我看过一些学校的生物信息学专业，都是需要考数学的，而生物信息学确实是属于理学，所以后面我就需要着重考虑一下是直接考生物信息学专业还是考基因组学等然后研究方向定到生物信息学。\n2023/10/14 天气晴 今天的天气很是不错，难得的晴天，于是去洗了一下衣服~\n2023/10/12 天气阴 今天给农科院基因组研究所的黄三文老师发了邮件和简历，没想到才没过多久就有一位黄老师的博士生加我微信，说是要我做一个 presentasion，了解一下我，也跟我讲了讲黄老师课题组的一些事情。在于这位师兄交流过后，我总结了下我目前的一些不足：\n英语读写能力不足 欠缺一些生物学知识 生物信息学分析过度依赖软件（TBtools 等） 科研项目的参与度不高 生物信息学分析深度不够，多在基因层面 这些问题也需要迫切的解决。其实自从了解了一些生物信息学相关的东西之后我也发现了上述问题，也在积极地做出改变，例如仓库地 README 尽量用英文去写；Blog 的 About 页面也用英文；查找文献时尽量 NCBI or EI 等检索；学习 R 语言来进行生信绘图等，但似乎进度还是很慢，成果没有展现出来。\n似乎需要请黄老师帮忙了，之前黄老师说要与西南科大的一个生信的老师合作，说不定可以让我过去学习，有时间再询问下黄老师吧。另外，也需要多进进实验室了，目前更多的生信分析是与生物或环境实验相结合的，因此只会生信分析的话是不够的。\n还是得继续加油啊~\n今天无意中读到一篇文章 《People Without Social Media: Why They Don’t Use It》 感觉有点启发，我们似乎花了太多时间在社交媒体上，比如微信、抖音、QQ 之类的，于是我也查看了一下我的软件使用时间：\n碎片化的阅读和浏览似乎对我们专注做一件事有着巨大的负面影响，试问现在有多少人能够静下心来看完一本书？\n但有些软件似乎我们也是离不开的，比如我：\n微信：与朋友、家人等交流的主力军 QQ：接受学校通知比赛通知等 企业微信：课题组相关事务 \u0026hellip;\n于是我仔细想了一下，有一些似乎也是可以舍去的，于是我删掉了下载没几天的抖音，删除了没有必要的联系人，退出了没用的群聊，将群聊都折叠起来 \u0026hellip;\n我希望的是能够专注的做一件事，尽量减少来自外界的干扰，而目前我们所困扰的就是来自手机，繁多的通知、消息不断的群聊之类的，那么似乎就不难，把它们全部想办法解决掉就是了，尽可能不下载没必要的 APP 等。\n在我们国家目前，完全删掉社交软件似乎是不可能的，所以也就只能尽量来减少社交软件给我们带来的负面影响，所谓戒网瘾。\n除此之外，国内的软件似乎大都在向一个趋势发展，那就是一个 APP 有 N 多种功能，试问我们生活常用的软件有几个不能刷视频、聊天？QQ 就是一个典型的例子，什么小世界、鹅毛集市、直播 \u0026hellip;\n让人一言难尽，下载了一个 APP 就像下载了好多个一样，对于这一点，实在不知道说什么好了。\n2023/10/11 天气阴 今天打算使用本地安装 pfam_scan 在 Pfam 的数据库中搜索一系列基因的结构域，死活安装不上，conda 安装的话一直解决不了环境问题，如果在 Pfam 的 ftp 上下载安装包使用的话，又缺少 Perl 的依赖，只能放弃。\n后来使用 hmmer 网页工具 解决问题，并且收到邮件回复后使用 TBtools 可视化，但是可视化效果并不好，保存为 jpg 或 png 格式是看不清楚的，而使用 svg 格式保存，再用 IE 打开查看，效果很完美。\n2023/10/10 天气阴 今天蒋文君师姐说要尝试一下使用 pfam 的数据库来进行结构域注释，因为之前常用的都是 NCBI 或者 SMART 网站的，由于数据库之间的差异，hmmer 根据结构域检索的家族基因在 NCBI 的数据库中不一定都具有相同的结构域，所以使用同一数据库的工具和方法进行检索可以极大地避免这种情况。\n找到一个 pfam_scan 工具可以批量注释结构域，本想使用网页版速速解决了，但网页版输出的结果格式是打乱的。\n而本地自己构建的话，数据量又很大，Pfam-A.hmm 有 1.5GB 左右，只能在超算上做了，于是用 wget 把下载挂到后台，准备睡觉去了~\n今天完成了对 auto-hmmer 的重构，由于 pfam 数据库迁移到 interpro 了，不得不更改数据来源的 url，这里其实新版和旧版数据库差不多，在数据的下载链接里只有 PF 编号不同，但新版是压缩文件，使用 Python 调用 wget 库下载后，再使用 gzip 库解压，把内容写入指定的文件即可。\ndef data_download(PF_number): import wget hmm_url = \u0026#34;https://www.ebi.ac.uk/interpro/wwwapi//entry/pfam/{}?annotation=hmm\u0026#34;.format(PF_number) wget.download(hmm_url, \u0026#39;hmm.gz\u0026#39;) PFseed_url = \u0026#34;https://www.ebi.ac.uk/interpro/wwwapi//entry/pfam/{}/?annotation=alignment:seed\u0026amp;download\u0026#34;.format(PF_number) wget.download(PFseed_url, \u0026#39;PFseed.gz\u0026#39;) def decompress_data(): import gzip with gzip.open(\u0026#39;hmm.gz\u0026#39;, \u0026#39;rb\u0026#39;) as f: content = f.read().decode(\u0026#39;utf-8\u0026#39;) with open(\u0026#39;./model.hmm\u0026#39;, \u0026#39;w\u0026#39;) as f: f.write(content) with gzip.open(\u0026#39;PFseed.gz\u0026#39;, \u0026#39;rb\u0026#39;) as f: content = f.read().decode(\u0026#39;utf-8\u0026#39;) with open(\u0026#39;./PFseed.txt\u0026#39;, \u0026#39;w\u0026#39;) as f: f.write(content) 同时我把所有的功能模块放入一个 modules 文件夹中，再通过 main.py 分别调用功能，这样就不再依赖于 CI/CD 来完成自动化流程，因此也可以在本地环境更方便的使用。\n2023/10/09 有雨 今日思考了 Python 水稻基因工具箱的一些事情，想着还是加入 CDS、DNA 序列的提取，但这俩文件比较大，先调用 Python 从云存储下载后再使用似乎更好。另外，pfam 数据库已经更新了，也就意味着之前 auto-hmmer 项目也需要进行进一步的更新了，并且似乎可以重构一下，方便引入新的 hmmer 命令，后面慢慢搞吧~\n2023/10/08 天气阴 饿了么的 CDN 挺久之前似乎就不同步新发布的 npm 包了，但以前的还可以用，公益 CDN 就是存在极大的不稳定性，于是收集了一波 CDN，以备用。\n能够同步自己在 npm 发布的包的 CDN：\nhttps://unpkg.com/ http://npm.elemecdn.com/ https://cdn.onmicrosoft.cn/ https://npm.onmicrosoft.cn/ https://cdn.jsdelivr.net/npm 静态资源公共库镜像：\nhttps://www.bootcdn.cn/ https://staticfile.org/ https://cdn.baomitu.com/ https://cdn.bytedance.com/ https://cdnjs.com/ 今天对博客主要做了两个改动：\n引入自定义筑紫 a 丸字体 引入 fontawesome 图标 引入字体实际上就是在 main.css 中添加下面的代码：\n@font-face { font-family: \u0026#39;ZhuZiAWan\u0026#39;;\tsrc: url(https://unpkg.com/UncleCAT4@1.0.4/public/ZhuZiAWan.ttf); font-weight: normal; font-style: normal; font-display: block; } 随后在对应的位置如导航栏等，引入 font-family 就可以了\nsection.header nav { font-size: 14px; font-family: \u0026#39;ZhuZiAWan\u0026#39;; margin-bottom: 16px; } 而 fontawesome 图标库则是在页脚（为保证每个页面都加载）引入 css：\n\u0026lt;link rel=\u0026#34;stylesheet\u0026#34; href=\u0026#34;https://lf26-cdn-tos.bytecdntp.com/cdn/expire-1-M/font-awesome/6.0.0/css/all.min.css\u0026#34;\u0026gt; 然后在需要的地方写入图标代码即可\n\u0026lt;i class=\u0026#34;fa-solid fa-rss\u0026#34; style=\u0026#34;color: #000000;\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; 2023/10/07 多云转晴 今天天气真不错~\n2023/10/06 有雨 之前将 Python ID 转换程序重构了一下，使代码结构更加合理，并且更方便增加新的插件，但是打包时还是遇到了问题，使用 pyinstaller 和 cxfreeze 打包的程序都不能正常运行，输入 ID 之后程序就退出了，目前还没找到好的解决方法，只能先要求用户安装 Python 环境再使用了。我想的另一个解决方法就是在仓库中添加 Python 压缩包，再写一个 bat 脚本来将 Python 解压后放到指定目录，并且把 Python 添加到环境变量，然后再用另一个 bat 脚本来启动程序。但这个方案似乎有些过于麻烦了，只能先这样，后面再解决打包成 exe 程序后闪退的问题了。\n2023/10/04 天气阴 感觉这张图有点意思\n最近 Cloudflare 更改了策略，加上国内最近似乎又在屏蔽 Cloudflare 的 DNS，手机上一直打不开博客，电脑上有时候也需要刷新几次才能打开 \u0026hellip; 只能将域名接回 DNSpod，主要的两个域名 hieroglyphs.top 和 huangjin-lab.cn 的 DNS 接回去了，其它一些无关紧要的域名还在 Cloudflare 用来绑定 Worker 和 R2 存储桶等。DNS 为什么要接入到 Cloudflare？ 因为 DNSpod 归属腾讯云，腾讯云的界面是在一言难尽，还动不动要验证、登录什么的，实在无语，如果接入 DNSpod 还不行，那可能就是 Vercel 的问题，只能再换别的服务，不过我还是会把 DNS 接到 Cloudflare \u0026hellip;\n群里有些人解析到 Vercel 的域名直接没法访问了，似乎是沿海地区管控比较严格 \u0026hellip; 这确实让人有些“不知所措”。现在有些地方访问 VScode 的官网居然都跳反诈中心了 \u0026hellip;\n好吧，不是 Cloudflare 的问题，V2EX 上的网友说 Vercel 的 cname.china 也被有些运营商屏蔽了 \u0026hellip;\n询问了一下，我的域名在有些地区也是跳转到反诈中心 \u0026hellip;\n经过测试，netlify 还是正常的，于是切换过去了。\n2023/10/03 天气阴 A ∩ B = Ø\n2023/10/02 天气阴 今天本打算用 GitHub Action 来自动打包 Python ID 转换程序，但 Pyinstaller 在 Linux 下打包的程序只能在 Linux 下使用 \u0026hellip; 而 Windows 下打包的程序才能用于 Windows，我本意是想对代码做出改进和优化后 push 到仓库自动打包，那么使用的时候就直接下载最新的产物就可以了，可现实是 Python 没有支持交叉编译的跨平台的打包工具，所以 Python 想打包某个平台的可执行文件，就必须在这个平台上配置打包环境。可以用 docker，但似乎有些过于麻烦了，这只是一个几十行代码的脚本，有点本末倒置了。\n这几天一直是一个人，一个人在寝室、一个人吃饭、一个人看书 \u0026hellip; 今天也一个人去看了下《前任 4》，感觉呢似乎越大越习惯一个人了，从高三开始经常一个人吃饭、做事，感觉效率也很高，当然，有的时候还是会和朋友聚一聚，聊聊天什么的。我觉得我的社交能力并不差，能与身边的朋友、同学相处的融洽，做暑假工的时候也能与所谓同事和领导相处的不错，跟我哥的一些朋友也可以喝几杯、聊几句。有些事情似乎一个人可以做的更好，有些事情也只能一个人做，比如我很喜欢计算机与生信，但我的朋友大部分都根本不了解这些，所以我也只能一个人做。\n泰戈尔说过：孤独是一个人的狂欢，狂欢是一群人的孤单\n一个人的时候难免会感到孤独，但对于我来说，似乎闲下来无事可做的时候是最孤独的，上学期的时候 3 月份开始从头开始学生信，那会什么都不会，需要学的东西很多，每天都很忙，还要准备考试与比赛，从早忙到晚，感觉非常充实，即使是一个人也感觉很快乐。记得应该是六月 1 号，熬夜写基因家族鉴定的教程写到五点，后来又是改以前的 hexo 博客，边学边改，改了五天，最后看的成果还是感觉很充实。反观国庆这几天，第一天写完了 SAP 文章的 introduction 部分和 Python ID 转换程序，后来就没有很重要的事了，就感觉到心里缺点什么，所以人啊，还是要多多找点事情做~\n2023/10/01 天气阴 露从今夜白，月是故乡明。\n2023/09/29 天气阴 今天完成了 SAP 文章 introduction 部分的撰写，并且 Python 转换水稻 ID、提取序列的程序大体也完成了，没有想到今天能完成这两项，后面还需要继续努力。今天主要是在 Python 程序打包时遇见问题，如果 pyinstaller 将程序连同数据一起打包的话，程序运行总会中断，但不带数据打包的话运行正常，后面再慢慢改吧~\nPythonID 转换程序主要面临的问题：\n没有 GUI 界面，使用的还是终端界面，导致不能直接粘贴 ID 列表，只能一个 ID 进行操作 没有连同数据打包成 exe 程序 后面边学习边解决这些问题。\n晚上与在学校的几个好友吃了点小吃，喝了点小酒，算是浅过了一个中秋吧。\n总感觉自己喝了点酒之后心里就莫名开始悲哀，但我也沉迷于这种飘忽的状态，不用想很多事，哪怕这么一瞬间，我也觉得很美好，我想我比较爱喝啤酒的原因就是热爱这种飘然、惆怅的境遇吧 \u0026hellip;\n2023/09/28 天气阴 今天又看到这个 \u0026hellip; 想起一年前因为“劝君更进一杯酒，西出阳关无故人”这一句诗 gitee 仓库被禁止使用 pages，属实无语住了\n又想起了知乎上的一篇 回答\n只能说，没话说 \u0026hellip;\n2023/09/27 天气阴 今天看了一下电影《肖申克的救赎》，这部以监狱为主要场景的电影满片都充斥着温馨的话语，从始至终都在告诉我们：“要怀抱希望”。恐惧让你沦为囚犯，而希望让你重获自由 \u0026hellip;\n银行家安迪帮助监狱官避税后，为与自己一同修屋顶的囚犯争得了一些冰啤酒，虽然这似乎并没有什么大用，但确实他们漫长监狱人生中的一束光，即使短暂，但它也来过，正若 Red 所说的：阳光洒肩头 仿佛自由人。短暂的快乐也是快乐。\nMorgan Freeman 三次假释听证会据说是一起拍的，但 Morgan Freeman 似乎真的在狱中呆了几十年一样，连眼神都在告诉人们他心中的后悔。\n这些人似乎都不理解安迪，安迪一入狱就在救赎，先是救赎自己，再救赎狱友，后来救赎肖申克监狱，人生的过程就是一个救赎的过程，也是一个摆脱 institutionalization（体制化）的过程。\n2023/09/26 天气阴 今天晚上又读了一下 陈铭教授 的 《生物信息学》，是在陈程杰老师的推荐下看的，对一些基础知识和算法原理的讲解比较清除，但我还是有很多看不懂的地方，主要是在于对一些生物学和数学知识的欠缺，还需要继续努力。\n2023/09/25 天气阴 今天给博客增加了两个功能\nMathJax 数学公式支持 导航栏显示页面名称 数学公式的话实际上就是在 footer 中引入了插件，并且对样式进行了一些修改，为了保证每一个页面都能成功加载，所以才添加到 footer，代码如下\n\u0026lt;script type=\u0026#34;text/javascript\u0026#34; async src=\u0026#34;https://cdn.bootcss.com/mathjax/2.7.3/MathJax.js?config=TeX-AMS-MML_HTMLorMML\u0026#34;\u0026gt; MathJax.Hub.Config({ tex2jax: { inlineMath: [[\u0026#39;$\u0026#39;,\u0026#39;$\u0026#39;], [\u0026#39;\\\\(\u0026#39;,\u0026#39;\\\\)\u0026#39;]], displayMath: [[\u0026#39;$$\u0026#39;,\u0026#39;$$\u0026#39;], [\u0026#39;\\[\\[\u0026#39;,\u0026#39;\\]\\]\u0026#39;]], processEscapes: true, processEnvironments: true, skipTags: [\u0026#39;script\u0026#39;, \u0026#39;noscript\u0026#39;, \u0026#39;style\u0026#39;, \u0026#39;textarea\u0026#39;, \u0026#39;pre\u0026#39;], TeX: { equationNumbers: { autoNumber: \u0026#34;AMS\u0026#34; }, extensions: [\u0026#34;AMSmath.js\u0026#34;, \u0026#34;AMSsymbols.js\u0026#34;] } } }); MathJax.Hub.Queue(function() { // Fix \u0026lt;codetags after MathJax finishes running. This is a // hack to overcome a shortcoming of Markdown. Discussion at // https://github.com/mojombo/jekyll/issues/199 var all = MathJax.Hub.getAllJax(), i; for(i = 0; i \u0026lt; all.length; i += 1) { all[i].SourceElement().parentNode.className += \u0026#39; has-jax\u0026#39;; } }); \u0026lt;/script\u0026gt; \u0026lt;style\u0026gt; code.has-jax { font: inherit; font-size: 100%; background: inherit; border: inherit; color: #515151; } \u0026lt;/style\u0026gt; 而导航栏的修改实际上就是把 head.html 中\u0026lt;title\u0026gt;{{ .Site.Title }}\u0026lt;/title\u0026gt;改成了\u0026lt;title\u0026gt;{{ Title }}\u0026lt;/title\u0026gt;，取消始终显示站点 title 而是显示页面 title。\n2023/09/23 天气阴 今天又下载了之前经常玩的游戏——世界征服者 3，还是有很多回忆的，记得第一次玩这个游戏的时候还是六年级在学习平板上玩的，当时也不太会，后来摸索了挺久才逐渐会了，游戏主要是两种情景模式，征服世界和战役，征服世界主要就是在 1939、1943、1950、1960 这几个年代，按照历史分为几个国家进行战争，跟历史差不多一致；而战役模式则是从二战开始的各个战役，比如闪击波兰、海狮计划、黄色计划等。\n小时候玩这个也学到了很多东西，比如各个国家的首都（在游戏里就是科技最发达的）还有一些历史事件等，也对二战历史开始感兴趣，后来读过《二战全史》等书，包括高中有一次历史课上演讲我也讲的是二战历史。我本身对历史就比较感兴趣，高三开始就看明朝历史了，看的最多的还是当年明月的《明朝那些事儿》。\n这个游戏后来出了第四版，网上也有很多 mod，但玩了好多版本还是感觉原版的 3 好玩，近两年 3 又更新了，主要是支配了新版本安卓系统和全面屏，不然全面屏手机玩旧版本的时候有些按钮显示不全。\n2023/09/22 小雨 今天早上起来有点发烧，嗓子也很痛，应该是感冒了，所以只上了第一节课，组会都没有开完就坚持不住了，吃了药之后睡了挺久，感觉恢复了好多，晚上和几个同学去打球了，冒雨打球。可能明天会更严重！\n雨越下越大，没打多久就回去了，然后吃了水果和炒饭，把博客换了主题，今天就这么就过去了~~\n2023/09/07 天气晴 记一个 zsh 报错：\nzsh: corrupt history file /home/hieroglyphs/.zsh_history 解决方法：\nsudo npm install -g zsh_history zsh_history 2023/09/05 天气晴 今天用超算的时候发生一个错误，从 NCBI 上下载的数据格式有问题，解压出来的文件不对劲，而且解压出来一些乱码文件，rm 删不掉，使用 find 命令删掉了\nfind -i 查询节点\nfind -inum [节点] -delete 根据节点删除，解决问题\n2023/08/19 天气晴 今天使用 Vercel 部署 hugo 博客，结果报错\nError: add site dependencies: load resources: loading templates: \u0026#34;/vercel/workpath0/themes/meme/layouts/partials/third-party/lunr-search.html:8:1\u0026#34;: parse failed: template: partials/third-party/lunr-search.html:8: function \u0026#34;warnf\u0026#34; not defined 查了一下，是 Vercel 默认使用的 hugo 版本太低了，需要指定版本，最好与建站时的版本一致，否则也可能会出问题\n仓库根目录新建文件vercel.json\n{ \u0026#34;build\u0026#34;: { \u0026#34;env\u0026#34;: { \u0026#34;HUGO_VERSION\u0026#34;: \u0026#34;0.80.0\u0026#34; } } } ","permalink":"https://yuanj.top/journal/","tags":null,"title":"日记本"},{"categories":null,"contents":" ","permalink":"https://yuanj.top/gestbook/","tags":null,"title":"留言本"},{"categories":null,"contents":"","permalink":"https://yuanj.top/search/","tags":null,"title":"站内搜索"}]